%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 2012.i101.015.F.m004.c9.business intelligence isometric.eps
%%Creator: Adobe Illustrator(R) 19.2
%%For: Тоша
%%CreationDate: 12/30/2020
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.2.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.2.1 x147 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c111 79.158366, 2015/09/25-01:12:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">2012.i101.019.S.m004.c13.garbage recycling isometric</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2020-12-30T23:14:48+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2020-12-30T23:14:48+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2020-12-30T23:14:48+02:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AmObJ6B2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kr5YTGsZLK3qLzAU1I3Io3gdq0xBQCsxS7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FW1VmNFBJ8Bv&#xA;iqtaRWj+t9ZmMPCJmiAUsXkFAqe1a7nBInoxkT0S++1GzsYfVupRGv7IPVj4KOpyyGOUjQY5MsYC&#xA;5FVtp0uLeKdKhJkWRQetGFRXBKNGmUJcQBHVUyLJ2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuAJNB1xVbNNBBtKauP91L1/wBkei/r9sU0l13qLtGxdlhgG5UG&#xA;i/7Inr9OIBOwUkAWUj1HzsscQg09OUgFDO4+Ef6q9/pzPxaPrJ1mftADaHzS3TPL+veYZ/rDcvSY&#xA;/HdzV4/JfH5DMmeWGIV9jh48GTMb+0s9t7X6pbxWnLn9XRYudKV4DjWm/WmamcuIk97vIR4Ygdyp&#xA;kWTsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVbUgMCRUA7jpUYqq3k8U9zJLFCt&#xA;vGxHCFCSFAFKVPXBEUERFDfda1vOsKzsjCFyVSQj4SV6gH2rhvoti6U8UuxVqRo4VDTNwB3C9WPy&#xA;X+uKaQU+oyMCsI9JDsSDVj822/DAmmPaj5htLWqRfv5h2U/CPm39MysWklLc7Bws+uhDYblJI01v&#xA;Xrn04UaYg14LtGgPcnoPpzPEceIOsMsuc9/3M10D8v7G14z6iRd3A3EX+6lPyP2vp+7MPLrDLaOw&#xA;dhg0EY7y3P2MuVVVQqgKqigA2AAzCdglM/8AfSf6x/XhYrMVdiqpFbzyrI0aF1iXnIR0VagVP0nE&#xA;mkEgKfTFLsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiq54pUVHdCqyDlGxFAwBpUeO4xtFo&#xA;aS6VLmOClS4JLeG9B95xSjJjOqJDK/wpXjCWBK16/BX4a/LGl4aUjxVOcjBE/mbv8h1P0YqhJtSp&#xA;8NsOP/FrU5fQNwv68bZUk2o6va2lWnkLStvwG7knx/ty3FglPk0ZtTDHz5sau9Y1LUpRbwKwVzRY&#xA;IgSzexpuc2OPTwx7l1GbVzymhy7gyDQvy8lk4z6s3pp1Fqh+I/67Dp9H4ZVm1o5RcjB2eTvP5M4t&#xA;LO1s4FgtYlhiXoiin0nxOa6UjI2XaQgIigKC/wCsAMY41Mkg6qOg/wBY9sDJXTnwHPjz7la06+5x&#xA;VKZ/76T/AFj+vCxWYqibPTru8akKfBXi0rbIpoTu3jQdOuAyAYymBzTa5sX0O3tr23kY3pf4nIUo&#xA;tUJAC7jvUHevtlYPHseTTGXiEg8kgJJJJ3J3Jy1yHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;YqpTXMcTxo1ayEgU7ADcn2xVFcJnRGmYrCoorvXiAN6L/QY0oDp9PtlhkuVAYyqoq7DjRakGvQVO&#xA;a/Hq/EzcI5AFyJYuGFpPZ3aQ2oaNec8vxu7D4QT0AXvT3+7Ng0AIa9v0jBnu5qDpyY/gB/AYYQMj&#xA;QYzyRgLkaY1qPmeaSsdmPST/AH4ftH5eGbHFogN5buqz9oE7Q2V9F8larqbC4uiba2bcySAmR/8A&#xA;VU7/AEnJ5dVGGw3LXh0U8m8tgz/SdB0zSo+NpEA5FHmbeRvm38BmtyZpT5u3w4IYxsEbJMkdAxqx&#xA;+yg3Y/IZU3LOE0v94fTT+RT8R/1mH8MVUxeIjG3s4/WlXYomyIf8t+g+W59suji2uWw/HJpll3qO&#xA;5/HNGQ+t6SicqZd+RQEDc7DcnpkJVe3JlAHqlc/99J/rH9eBKYaBZW11cyi4HJYomkCkkLVf5gvx&#xA;FfHjvkJkgNWWRA2ZRNNaWUTEssMKVHFZK03bbhTj16he/wAS9MpAJcQAyLHdV1T9JmGztovhjb4X&#xA;IC1NKEha0Re5399stjHh3Lk48fDuUpnWJJWWJ/URdudKVPcj2r0ywNwWYpdirsVdirsVdirsVdir&#xA;sVdirsVdirsVWSzRxBS5oGYKPmcVVUjdzRRX37D5nFUTb6XEbkXLN6i+kYwD9n4upX2I2zS9o6wf&#xA;RE7g/c5mDD1KX3d3BHdSHiZJE/dqrEmgXarMSWNT28O+bDSGRxiUjZlu05a4qCXpqM6WMcZf0kSr&#xA;uSafE2+5PQCvTLIYKyGf8R2Y+JUa6Me1LzRFGWS0Hqyd5T9kH28c2eLRk7y2dZn7QA2huUv0/Rtc&#xA;1+f1FBZK0a4k2jX2H9FzLlkhiFOBDFkzm/tZ5oXkzS9L4yuPrV2N/WkGyn/IXt8+ua/NqpT25B2u&#xA;DRwx78yn+YrmKUjuz+lGaHq79eI/qcVUpJrW0IXd55OiL8cr/wAafgMshjMvc1zyCPvW+hd3O9y3&#xA;oQn/AI94z8RH+XIP1L95yfFGP07nv/UP1sOGUvq2Hd+s/qREXpRII4EVY02FPhQfdlRkSbLaAAKC&#xA;2TUNgkahmHV6UrvXpgpUMba7kDSiF2BJJIU0332OG2NhfpertZvO0IrMyGP4qgoa/ap1qO2+RlG2&#xA;M4cSOsdP1TXrrkzNIdwpoP2aEqgJVVC8h3AHzIBjKQgGEpxxhRnEEFpKLcMkvqejc+oQzBdyApUA&#xA;UYqeXy8K1I3O7IWTul2TbHYq7FXYq7FXYq7FXYq7FXYq7FXYqtd0ReTkKopufc0xVcASQAKk9AMV&#xA;Vk0oy3cEkpDRw8i8VKjkRQVP37Zre0NWIR4QfUXIwYrNnko31xDbzegzyMkAAWKv2iRWp/ZFB3pX&#xA;LtFlnkhxS68kZogGggbXWLmO2ZIf3bNK7eIVa0VVBrgy6KOTJxS5UsMpEaCSat5jtoJHLN69027K&#xA;tAAf8ojYZstNojQA2i4Go10YHvkx4y6zrlyIIUaUncQxiiKPFu30tmzjjhiFupnlyZzX2M18uflk&#xA;iql1qh9UV+wK+kpG+5A5OR4DMPNrSdo7Obh0MY7z3Pcz6TTrKz01hCqgABUaigdRsoB4j5LU+JGY&#xA;FklzYnekrwt6nNIUACisjbIvv7+wxVQmdrdFhh+O6mJ418f2nb2X+gyzHC9zyDXknWw5ldZR2aI7&#xA;QOsrVpNNUMzMvXkw7+3bHJKR5oxxiOW6sAX3b7PZfb3yDYhJ5TI3BNkGEIJT/QdKtWEcrUlLbim/&#xA;2anbxO234eOQmSGiWSxsn+q/VUtYCZuJkiKvFEOQqWDDYlRt+vKIXZcbHfEdurz3Wn0yz1qJxDNK&#xA;Z9mJkWNK0rUoFc/8Nl4tyo8TMvK1za2uo3Ms831WOKCGKC0j+JpBKPUPAHk5qRXbx65RlBIFONnB&#xA;MQBvuxvWZ7M3MsVkvG3MryUHQFjRV2rUKv417ZfAGt3Kxg1vzS7JtjsVdirsVdirsVdirsVdirsV&#xA;dirsVbfTZriS2DACESB5VNeRVQSNvAnMTWagY8Z336NuLHxS8l11LHZutuJyqIOT8VHMgn4Vr1P0&#xA;kDIaLUTyxsih97LNARNBBWutyRJcCMGhkAgRjyCKB8Xh1OR1GhjkyAnYdfNOPMYikr1fWreORri6&#xA;cCR6UjX7RoKbD6Mz9LpKHDAbBxdRqYx3kd2LX2vX98/o2ytGjmixpUu1fcb/AEDNti0sYbncunza&#xA;2eTaOwTzy9+XF9eMsuo1gi2JhUjnQmg5sfhQfPIZtaBtHdnh0BO89h3dXp+j+W9O0qIRRW6CMUPw&#xA;7KBSvJuXEt4cmNPnmsnkMjZLsIgRFR2VbnUYUNIAS4LKd6oVLVIptyB60oo9sjTbGB6pfNPNM/OV&#xA;i7dKnsPAeAwtgACHknVW4AF5P5F6/T4fTilBXepW1kS85Ml0wHC3iHN6VoAB2qe5pU5bjxGXJqyZ&#xA;ow581GDS7u6ke41J+Pq0/wBEiJAVB0R3FC3uBQE+IyyWUAVHp1ao4TI3Pr0budLeGX61pSpFKgAl&#xA;tvsxTKvRSBsrDs30HbIxyXtL+xlLFRuGx7uhVItXguoWWNXjnX4Z4XUho27qe33ZCWMxZwyiXvTf&#xA;QNIN3WVovVFfgQ9NurHtQe+VylTHJIAbshljWJlCSB2AqxStFPgD3+jIA2wBvoltw7vM7OxZiTVm&#xA;NT+OSASBTFtZihk1W3nuD+4jkIjiqQZZFA+Ef5I6ufDbqRjfQJB3oJlZ6lfTXkcclw6xSH0/TUkI&#xA;A+3EINgu/TpiYillAAcktyba7FXYq7FXYq7FXYq7FXYq7FXYq7FXAkGo6jFXWuqSx3FzG37ynEop&#xA;O5ZhU1PgBms1mi8WYr4nycnDm4QbQerzNLeVdAjBFrQ1rUcgdwOzZlabTjFHhBthknxG0umqsEhX&#xA;ZgrEU8aZlR5hpmaiWPaN5R1jWHFxMTBbvubiWpZv9VTu36s2uTUwx7B0eHSTymzy7y9P0DyPpekR&#xA;KyBfrDf7sf4nbcVUuOnX7Kb+IzWZdRKfPk7PFihj+kfFOrq/srK3YNSIxsrunKiqV4knlXivSlal&#xA;vllIBLbXU8kguNY1HU2Isl9K2Y1NxICE8Kxxk8nP+U23zy7gEfq+SASfp+Z/R+KQzaLv6sV5cR3f&#xA;7Vxz5cv9aNqx09gow+L0oV+Pik4OoJvv/ZyU5L7V7EUu7cXiHZJ7WoYmn7UJJb/gSfljwxlyNe/9&#xA;aOOcfqF+Y/UpPc3slIkD2/qfEVUA3Ulf2qH4IV923+RycMY5/wBn7fgxnkkdht9/7PiirHSxEwkk&#xA;VVoeaxLVvjpTnJI3xSPTucE8u1D5/q7gyx4aNn8e89SjizElV2p1bKG9coCgAdBgSgrxiZqDsAAP&#xA;nkgxLLonaK0jtI6JBGoHBRTkR+01OpJ3yqurj8O99Wx0wpVLWzhNtd3DlBKiO8RlICAg0Fa1rXi1&#xA;dtshOW4ackyCA82e6Gqa/cXqf7yQExWigUAQE0oKn5/T45bEUHJxxoMs8p2EdxqcDSLyHM8dwAoj&#xA;Xmzmv8u33+2QyyoNeonUSg9cQRXfoFkeSHmrPHShHNim4A5fDQ1+jtkocmeLcWl2TbHYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYqsWKNXZ1WjPTkfGgpiqF1Rf3sT93jBP+xJX9S4CyCFh/vU/1h+vFWWYEtah&#xA;5knnZrSwi9WRQEkNaIlO0ktKD/UQfR3yccfU7OMCLqPqP2fj7UomSGNxLqEn1q4U1SMikKH/ACI9&#xA;6kfzNU/LJGdbDb72Yx2blufsR1jfLdq5CFOBA3Na1ytuRRIAJOwHU4FQjzrGhupATX4YIx1PI0AH&#xA;uxycIcRphOfCLRmk6cqxS3F2/EVDXEiCpZ22WNK06AbewrjlyWaHLo1i4+cj+Pkj01GwH+jyWirZ&#xA;yUXkvxTqf5xIaVI8Nh7ZVwnvU45cwfV9iheac9nwKsJraTeC5UfC47/JvEdsIlbOE+L3rodPYxie&#xA;5cW1u26uwqzj/itOrfPp74mXcpyb0Nyld0YBqiGIMIPUipzILUqoJNKe+SHJd63ZOASaDc5BrXSE&#xA;QJylIVQKknEItgvmbX7i5dtNs5G4StUoCeIB/aI8ckAkR3XaTZ2lskcMxYRCpkZACxNO1duuE30b&#xA;DdbIuC8vLWMiJiiSfECVB3G3JSQaH3GJAKDEFDkliWY1J3JPUnCydirsVdirsVdirsVdirsVdirs&#xA;VVrKS2iuo5LmIzwKavCG4ctthyHTfBIGtmMgSNlkcTzzCOJau5oq1/icPJJNBN30KC1sJLi7lAmK&#xA;n04geNHodiGALGopQfPcZXx2dmnxSTQY5qa1ggbuGdT8vhI/WcsLkhBQ/wB9H/rD9eBLK0EkkqwQ&#xA;o0077JEg5MfoGAmmMpACyynSfId1IjS6nN6DODwgjoxVj+07HYmvYffmPPUdzgZNaBtEMJ0HVLci&#xA;DULi+FlcPcBrsoshl9ABCqRcQaBiW5fF279DbME9HJygnpezdvFHbz3riVJYDKfTmjBCOKndVO/f&#xA;pkhyboHYLbi5YsIjGzMw5C3Whdh4ua8UX5nf8MthjvfkGM8lbcyi7DS768nE83H90KgA0hh5bFmd&#xA;qVPau3sMZ5IgVH9pa+RuXPoPxzRl9cxHjDCaWsFQhO3Jj9qQ+7U+6gyoBshHqeZQa/E3M9Oij2yT&#xA;NG2uo3NtE8SFWichvTkUOoYdHAaoDZExBYSxiRtQmmlmkMkztJI32nY1J+/CBTMAAUFkulT3SfB8&#xA;L0ota1P3YDIBjKQCNfzPFparFqdlPHdgbqqni5HdWAbY/LK/q5FxyOL6SxnW/NOp6zKI7W3+rxL8&#xA;KkggD3Nd2PufuyyEKZwxUt0XQJy7eijXFyd5JPCvix2FT45IkDmzMhHmy6y8t29u0b3Z9aRq/uyC&#xA;qAjpQnYmu1G71FMqOS+TjSzE8kL5wAF7bgUCiEBQBQU5Hp7eHh07YcXJnp+RSHLXIdirsVdirsVd&#xA;irsVdirsVdirsVdiqa6JpmpyTxXduvppG1VmYbVG2w25b7eFeuQnIcmrLOIFFH38+l2tpNE7m71C&#xA;RPTErfEyilKb09MD+Ub9jUZGIJPk1wEie4MXuo2ltSiCr+opA9qMD/DLXKDIvLf5baheFLi+Jtbf&#xA;YjkP3jDr8Knp8z92Y884HLdxc2rjHYbl6VpWiabpcXp2cIQkfHKd3b/WY7/wzEnMy5utyZZTO6pq&#xA;Wp2mn2zT3DhaA8Er8TkfsqMYwMjQXHjMzQeKW+j2doqmVjLxoqKR1oPAdTmyd6ipGl/dn0izFglr&#xA;aru7yNsooP8AMdclCNlhkyCIspjaafa6ejPfSC6vpDymhiPw8vBpB2XoFX7wcGTJxctohqxiXTrz&#xA;P6gtudRnuQIxQRJ9iJBxiX5AdT79cgI03RgB71AJvVjybxPb5DJMl2BKpFBJKfhG38x6YkoJpOdO&#xA;0KSSjkcV/wB+MP8AiIzHyZwHFy6gRZBa2FvbD4Fq/dzucxJ5DJwMmWUuaF8y0/w9qbdClrOyNt8L&#xA;CNiCK9xktP8A3kfeGokgbPnWPzLfzCC0NFTnGOQ67MKZ1pwwFyA33QNXkkBEnbZ7J5ZmhhsrySdl&#xA;SMPFVpFLLUk+G9f8+2aDINw7TOCSKX6jr1w8DSWETLboeDXT1oxIAoFbYnpud+hoDvgjDvRDEL35&#xA;scllllkaSVzJI5qzsSST7k5cA5IFLcUuxV2KuxV2KuxV2KuxV2KuxV2KqtpJHHdQySjlGjqzrQNV&#xA;QQSOJ2PyOA8kSFhNLnWdR1KYW1nEU9QkJHEKyMNyBUeAJ6dutcgIiO5ao44xFlDaJos+rXQtoHVX&#xA;O5LdAo6k08MlOYiLLPJMQjZek6F5P0rSgsnH6xdjrPIOh/yF6L+v3zByZjL3Ory6iU/IJ1NNDBE0&#xA;szrHEgqzuQqge5OVAW0AE7Bi2seeI05Q6avqN0Nw4+Ef6q9/pzJhp+9zsOiJ3kwy+1CaaUzXUrSz&#xA;P0rux9gMyQAOTsYxERQQy7crieiBQaAkURRuST0r45IC9gkmt1e35W6C8kUi8uUItYj1ht3G7mvS&#xA;SYfcnzyczXpHx8z+ofe4sB4kuI8hyWcC32zt/KOn0+OQcpfgSuRHc0UVOKLTKx0eWdtl5ePZR8zl&#xA;U8oDTkzCLIrPR7eABnpI46VHwj5DMOeYnk6/JqDLlsj8pcdJ9W80adYVjVvrFwP91Idgf8pug/Xl&#xA;+PBKXkHIx6eUvIMF8za/qOo6fdiaTjD6UlIU2X7J6+P05sdPhjGQrvcs4Ywga7i8fs/964P+Mi/8&#xA;SGb+fIuix/UPe9z8vabZ3Mcs9yOfpMqrGzcF+LapNPoHatK7ZzuSRHJ3+aZGwTPzI8K6QYlZR8aB&#xA;I1YdAtdlPQew6H55DHzasIPFbEcvcx2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVUguJ7eUSwSNFKAQH&#xA;Q0IDAqaEexxIvmggHmyT8uf+Ugb/AIwP+tco1P0uLrPo+LLNa87aZYObe3Iu7wniEQ/ArdPif+Az&#xA;Hx4DLyDi4tLKXPYPKdW8zaxrd2j305MYcGO3T4Yl37L/ABO+ZcMYjydnjwxhyTjg3EPQ8SaBqbVH&#xA;auSbLaWJWlZkT95IeiipPgBivJaEh+tP9aAaK0b4ralfVnHRH7cIz9sdz8P82W/SPM/YP29Pn3ON&#xA;I+IaH0965nlkkeaZi80hLOx8TlTkgUKcASaDc4pRlrps0zgEEk9EXc5GUwGuWQBOtJsLGSaWFnDS&#xA;W5CyQr2JHc9/ozGy5SBt1cPNnkBt1T5ERFCoAqjoBsMxCbcEm+aB1PXNP05T68lZaVEKbufo7fTk&#xA;8eKUuTZjwynyYdq3mrUL6scZ+rW524IfiI/ym/pmdj08Y+Zc/Hpox8ykuXuQh9RBOn3QAqTE4AHW&#xA;vE5PH9Q97DL9J9zy+xUte24UVJkQADr9oZu5/SXncf1D3vaLDWbixtZYbcAPKwb1DvxAFNlIpv0N&#xA;dqds5+ULL0M8YkbKi0F9dSCaXk7SdZHNfv74RQbBGuTT6fdKQAoevdTt+NMNppDEFSQRQjqDih2K&#xA;uxV2KuxV2KuxV2KuxV2KuxVFXtzHKsEMSoI4IwodU4M7Hdi+7VNdq+GRiGMY1ZUIYJZ5BHEvJjv7&#xA;ADqSTsB7nJE0kkBdNBPbOoeill5IyMGBU1FQykg9CMANqCC61jnedfRQu6kNQdgD1J7D3wk0pICN&#xA;i8tWOnSmbUp0PF19NA3wirGnJdnfp0X5ioykzJ5NRymW0U01fUorv044Y+EMNQhIAJr4KNlHthhG&#xA;meLGY7nmUDe6sY/9C0pTbSSLWa6JDTLH0ZuVKLXooX6a0y7HjH1S5D7T+ObXOJJonf7B+OiHghRE&#xA;RUXjGgpGv8TglIk2XIjEAUEZDaSyUNOKnue/yGQMqUypPdP8vtQNIPTX3+2f6ZjZNQOjh5dUBy3T&#xA;2C2ggTjEoUdz3PzOYkpE83BnMy5pfLDoukzz6hIRFLcVLEkkkk1PBeu565YDOYEe5sBnMCI6Md1b&#xA;zndT1isVNvF09Q/3h/guZOPTAc93Kx6UDeW7HGZnYsxLMxqWO5JzKcumsVdirsVQhtNLtmNyYIYn&#xA;G5m4KrVP+VSuTOSRFWWAxRBuhaCk8zQR3C+nD60Sn4ix41HttkGVsnLpd6dEtq0arNHxMHPYqy0Z&#xA;Qy918RgBo2yIBFLdH086egtwVhhXkyQh2kYljuxZ99slOZkbLHHjEBQXm0S5/ep+6BYqVO5JBIJy&#xA;Ns6QtmdL1FXbT7r1RE3CUkHZvDcLk5wlHmGvHkjP6SsmiMUhQmtO4yLJZirsVdirsVdirsVdirsV&#xA;Tey8u3M0TzXDegiq7BCCXPDrt+zSorXem9KZA5A0yzAGgi/KdxZWkq3U8wjWNpGmUFAzBUHpgciN&#xA;iWY7dwO9MhlBOzDUAkUEs1ngb0RQKfQRQLcVLEpITKDU77+pk4cm3Hystafqk+nLOsaUllCgFjTi&#xA;VNa08fDfDKNrOAlSU6rcXFxqwknkMjn0yCegDANRR0ABPQY1TbGIA2T3FksgsxJNIYkoHblKxJNT&#xA;2FTXYDtkpTJAvo1xiIp1aaSOHrSkJGOsr7L/ALEd8x5ZOg5tc83QblH2epaXbzcRGzD/AJaG619l&#xA;7DK54pyH6GnJhySHP4J4lxA8Xqq6mM/tA7ZhkEc3AlEg0ULNqHaIf7I/wGRtFJFf+Wp9Vmaa3Zjc&#xA;H7XMkp95+zmVh1HDseTlYdRw7Hkxe+0+9sJzBdwtDIOgYbEeIPQj5ZnRkJCw58ZiQsIfJMnYq7pi&#xA;qhbPe6ldfU9Gtmvrr9ortGle7uaAD6cjKYiN2E8giN0q8yeXfNWnTp+lraRRIaROtHiJP7IKVWvt&#xA;1wQyRlyYQyCXJQt9DKRG4vSVjQcjEm7Ee+TbKQkNw4uEjtQQDMHips9a0UVrioLIToWvXV7FLNSL&#xA;0QGWWRxJ8QNQKAk4Ge6fhJzY+nel3ljPxTxALuDUOoB7fLFKDa70mwljkmuzMWaiBaMoYilSEHXF&#xA;GwW3F1LcTuSawqf3O1Dv18cIUqeKHYq7FXYq7FXYq7FU38rAfpMkj7MTkHpQ7AHl+x/rfwyGTk05&#xA;/pTvUdas7ONoSxklKOojRgeNT8PI/s034913FCDlUYEtEMRluw+ON5JFjQcnchVUdyTQDMhzSaZn&#xA;oenWl3o926SNLc20b29usB4yuQOfI0o3Dk9FHSnXtTGnIiQcHLMiQ7ixa6mllsbUzMXkDSBWY1b0&#xA;vh4ip7BuVMvA3LlxFE0l81ncXN7arbxtLIyAkKK/Zcg18KLTGRA5szIAbsqstImncDiXPcDoPmcr&#xA;nkAYZMwiyS00aCL45QHfrxAogPyzDnmJ5OvyagnYbBg/5oapfafq2nvayFAYW5R9Uajd1y/S8i3a&#xA;Q7FKrTzgtxbH/R+NytAwr8G/cd/ozKc4G088lXN5fXd3zLSNROKDoN26AZh6vo4et5Bn9noXR7o/&#xA;881/icwqcC02jjSNAiKFUdAMKEPqVpp91atHfxo8AFTz2p7g9R9GSjIg7MoyMTYeO3ItxcSi3bnb&#xA;829F/FK/CfpGbaPLd3ESa3WxxSSyLHGpeRjRUUVJPsBhJpJNMlsfyznv/Sl1ed7e0G72cR+N/Dm3&#xA;7I9h+GYmTUgbRcPLqhyiz3TNK0/TbRbXT7dLa3ToqClT0qe5Pucw5SJNlwZSJNlESxRSRtHMqvG4&#xA;oysOQI8CDgBpANMP1v8AL+GUNPpTek53+rOfgP8Aqt1H0/hmXj1XSTmY9WeUnnNzpA0PUvWvrUu8&#xA;jhXS4pxQMamWvFq0p1zLEgRYc2MgdwmuqWlvq0Rt1khuYJFUyW7OwBCtVWBjIYdcnCZibHNOTHGY&#xA;o8lS3eC1tZIJZYneFAv1ZW2VFWipRiW3Hc4CbNsogAUGCapeGa7coBHEr1jReg+nFiSneiS3UlrW&#xA;Zfg6xycuRapNa7nFQmOKXYq7FXYq7FXYquiQSSKhdYw23N68R86A4lBKKW21O1nCRq6STKQjxmod&#xA;P2irrsV8SDkbBY8USFNtPuxMsXp8ndealSGUrWnLkpK0261w8QTxikTZxWcFwFmnDTMropQ/u43Z&#xA;Sqsz0NeLGvw/fkSSQxkSRsGR6br40PRI7NYVhumLPPOWRy3IniY0RmLfBShai/PKZY+OVuNPF4k7&#xA;6MYfVGchTBC0CjjHEyCqqOg9ReMn/DZfwuUIebK/JM9pPbXUQg9IhgzBGJFCvblybt/NmJqgRRcP&#xA;VgijbKpIY4IVjjAReIHpr0DVrmLI24RkSbKQan5msLNjFF/pN10EUfQH/KbemW48EpeQcjHp5S8g&#xA;8q8+6le3+owSXYCsiFUjAoFFczseMRFBz4YhAUEn0n/dv+x/jk22D1H8o/8AenUv9SL9bZiaro4m&#xA;t5B6TmG69jnmDzxpOks1uhN3f02tYqEivQu3RB88tx4ZSbceGU+Tz7WNb1fW3J1CXjbVqtjESIh/&#xA;rnrJ9O3tmdjwxj73YY8EY+9M9D8m6nqXGSQfVbU7+o4+Ij/IXav6sjkzxj5ljk1EY+ZZ7pGg6ZpU&#xA;YFrF+8Ozzvu5+bdvkMwZ5ZS5uBkyynzTEfiN69sra3V79K9z0xV2/wAj/NiqA1bXNM0qH1byYRk/&#xA;ZQbu5HZVFSclGBkaDKMDI0Hl3njzWdWgq1o0dsgZIhs0lHG7PTZRt0qc2GHFwDd2OHDwDfqwKDUJ&#xA;onRh0RSoCnjsff6MvbgVy6hL9becjeUBH7njtWle+2KeJPbPS9NMIkWEkSAGku7D+mK0j0jSNAiK&#xA;FUdFGwxSuxV2KuxV2KuxV2KuxVkvlK5gt2SSefhbpI7zRVXdkQCIUYgCpZjU9wO9MpzC+Ti6iJPI&#xA;bpRqV6sjm3tXYWMZIjUk/FVi3I1pXdtq5ZGPU826Eep5qFpCjuzy/wBxEOctNiR0Cj3Y7fjhJZSK&#xA;uiw3UF9dTswnjCGFEA4fE4Ug16BRsAMHKgjcEAIHJM058ta5FpM8zyq7JIoA4UryB26keOVZsZmK&#xA;DTnxcYoN6v5r1LUKorehbnb00O5H+U2Rx6eMfMscWmjHzKRaF5n02VVhnUWs52Lk/Ax/1j0+nLnI&#xA;EkRrt3pM0RgljW6kH2SNuB8eY/hiyIYlpgAecDoCAPxxYxZHoOravpk7zabKsbkASI4JVh2rTwyv&#xA;JiE+bDNiExunN95v81X8JgmuEtYj9s21RI3tzNOP+xFffIQ00Rz3aYaWI57qGi+Xb7UH9OxgpHX9&#xA;5M2yAnqWY9T95y2eSMebbPJGA3egaJ5M0zTuMswF3d9eTj4VP+Sn8TmDk1Bly2DgZdTKXLYMg36d&#xA;SP2f7cx3Hd3p1r26Yq4Amncjx6Yqo3d5aWkDTXMqxRKKtI5oowgKBbCNb/MOWXlDo6UXobyUf8m0&#xA;2r8zt88ysemJ3k5mLSk7yYhK8s0zTzyNNO32pZDVj7ew9htmbGIAoObGIiKCx0V0ZG+ywINDTY/L&#xA;CySmby3blAIZGR67lvi28NqYopUt9AtYmikLuZI6EkGgJG/z/HFaTTFLsVdirsVdirsVdirsVdir&#xA;sVV7GFJZ/wB4OUcavI6jaoRS1PppTBIsZGgyHzVFDaQxwrMrCSKMG0jYskcyH45F34+K7AdfnlOI&#xA;24+Akm0itf8AeK9/1I/+Tgy08w3y5hCZJm2iO7cUBZj2GKo1dKkMdWYB+y9vvwWmmAX2nXljL6V1&#xA;EY2/ZJ6EeIPQ4WBCbJ9hfkMDYEHpv95cfMfrOLGKc6d9p/kMISWceTvL+kaiDPeTepIjECzBpsO7&#xA;U3P0ZiZ85iaDhajOYmg9BiiihiWOJFjiQUREAUU9gMwibcAm13t2O4HU4Fd/nQbffirTMiqS5HAb&#xA;7kUHzOKsU138wLK1LW+nL9cuV2LA0iQ+7dz7b/LL8eCUvIN+PTyl5BguoajqGpTetqE5mYGqR9I1&#xA;/wBVN/vNTmdjxRjydhjxRjyUMsbHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FV0cssTiSJ2jcdH&#xA;UkEV26jEhSLT9dEMJF3rMnMclDhnJFCK/E4qx26Beo6HKuPoHG8W9opapjMOpGIUiPEoP8n1RTwy&#xA;fc29QgMk2JVrl3c2jW0tvI0UgLfEp+Wx8cUFF6d5xnmgaOaAG4UbSA0U+5GBlE2lWvXlzdRK8zlv&#xA;j2HYbHoMUSVE+wvyGLILLHTbuOaYMlA1Cr/skb4WITi3t1hB3qx6nFJK8SiGZZopjBcJTjKjBW23&#xA;FfH6cjOAkKLCUBIbsw0L8xJoQsOsLzj6C9iG3+zX+P45hZNMRuN3By6UjcM6tLy1vIVmtpFkjbcM&#xA;hr1zGcQhKdc84aTpIMbP612RVbaI8mPzPb/PfJwxmXJshilLkwDWfMmsauxFxJ6Fr+zaxEgU/wAt&#xA;tifl+vM3HpxHnuXPx6aMee5SxVVQFUAKNgBsMyHIbxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxVXvL66vJfUuJC7fsjoAOtFUbD6MAAHJjGIjyVLX/eK9/1I/wDk4MB5hEuYW6Wtjd8mWZZG&#xA;QkPENipBp8QO+G2wLfMGhWd5bBzKLZoqlWP2DXsR/TFSGH6fGY7maMkNxFCRWhofemLGPNGzWL3k&#xA;ZjRgrL8Yr0NNqfjiykmFtYBVUy7kAfCOmFbRE08MCBpXCLUAV238BkoxJ5BjKQHMonS7K91d5YtP&#xA;heaSJC70FKDp1PfwGVykBzROYjzS61t0t9Vt01G3kktDLwuvT2ZFOxboT8J3p3y2EOIHettmGbLK&#xA;IHCLKf64ujRzJDpUhmhStXKemPkO5+dBlUL6sscpEeoUlkMlzb8ha3ElurbssZAUn5EED6MEsUZc&#xA;wiWKMuYWqiqSdyzGrMSSxPiSdzkwK5MwAOS7FLsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVTHSLYXSXdvzCM8asooWZuDgkIo3ZqdhkJmqLXklVFgN4biz1OZojJC6yOY3NUbjyNDs&#xA;cklNvrt3eRxyXEhkcqPYfQBti2hVg0eNZvX5EeoPjQ+PscLFMI4lQBUWlew6nFUfbaazMDPWNdzx&#xA;6HY0Na9MU0gPMHleS7hURyH92SVNKncbgiv+fyzK0up8I3V242q03iirqky0nUhpFgtnYPNGgHxk&#xA;MVLtSlWIO+Y2U8cjIhsjhiABV13oGWR5ZXlc1eRizE9yTU4GxbirsVdirsVdirsVdirsVR1roesX&#xA;VPq9nK4PRuBC/wDBGgyByRHMsJZIjmU2tvIHmCX+8EVuO/qPU/8ACB8qOpgGk6qATS3/AC06G4vv&#xA;mscf/GxP8MrOr7g1HWdwTGD8vdCj/vGmmPfk4A/4ULlZ1Ums6uaOi8neW4ulkrHxdnb9bHIHPPvY&#xA;HUTPVFx6Dokf2LC3B8fSQn7yMicku8sDll3lEJY2SU4W8S06cUUU+4ZHiPex4j3qixRqaqgU+IAG&#xA;C0WuIBFCKg9QcVeH5uHduxV2KuxV2KuxVwJBqNiOhxVFSSWWpKsGrx+qp2F4P75Pcn9unvv75Axr&#xA;k1mFfT8kELKztXaO1YyQoSsUrijMo6EjttkgzBNbou3s5JfiJ4R0ryPgPAYUpnBbQ24FBRxWsh7n&#xA;p17fd869cUtXFzBACr/bAoEA333+j7/vGKpbcX001VrwjP7A+/fFCHxV2KuxV2KuxVwBJAAqT0GK&#xA;ppZeWNevKGGzkCn9uQemv3vxr9GVyzRHVqlmgOZTyz/Le+ehu7qOEfyxgyH8eIymWrHQNEtYOgTy&#xA;08gaDBQyiS5YdfUag+5OOUy1Mi0y1Uz5J1a6VplpT6taxREftKgDf8F1ymUyeZaJTkeZRWRYuxV2&#xA;KuxV2KuxV2KuxV2KvD83Du3Yq7FXYq7FXYq7FXYq4EggjqN8VTKDVQw4XA/2a/Km4+WKbUp9Sdqr&#xA;DVF2+L9o0FPE0/z3xW0Fih2KuxV2Kouz0nU70/6LbSTD+ZVPH6W6ZGUwOZYSyRjzKfWX5eaxNQ3M&#xA;kdqp6gnm/wBy/D/w2US1URy3aJauI5bp/Zfl7o0NDcvJdN3BPBPuX4v+GyiWqkeWzRLVyPLZPrPS&#xA;tNsh/ottHCf5lUBvpbrlMpk8y48pyPMorIsXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXh+bh3bsVdi&#xA;rsVdirsVdirsVdirsVdiqvbWF7dGltbyTnv6aM36hgMgObGUgOZTqz8ieYLihkjS2U95WFfuXkfv&#xA;ymWpgGmWqgPNPrP8t7NKG8u3lPdIwEH3nkcplqz0DRLWHoE9svLGg2dDDZxlx+3IPUb72rT6Molm&#xA;kerRLNM9U0AAFBsBlbU7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8PzcO7dirsVdirsVX&#xA;JFJIaRoXPgoJ/ViSpKMh0LWpqelYzsD0b02A+8imQOSI6sDliOoTCDyR5jmpW2ESn9qR0H4Ak/hk&#xA;DqIDq1nUwHVMrb8tr9qfWbuKIf8AFYaQ/jwys6sdA1HWDoE2tfy60eMgzzTTkdRUIp+gCv45UdVL&#xA;o1S1cuib2nlnQbWnpWUdR0Zx6h+9+WVSzSPVqlmmeqZqqqAqgBR0A2GVtTsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdiqUt5T8usKGxj+jkP1HLPGn3tvjz71v+D/AC3/AMsK/wDB&#xA;P/zVh8efen8xPvVP8LeXv+WCL7j/AFweNPvR48+9UXy9oS9NPt9/GJD+sYPFl3lHiz7yiI9O0+M1&#xA;jtYkP+TGo/UMiZnvYmZ70QFCiigADoBgYuxV2KuxVgdn+Yt9N5lbSzbWzRDUpdNEUcr/AFoLHX/S&#xA;DHxK+nRdzXNtPs6Ixcdn6BLlt7r72oZN6VrL8wbqe20aZ7Nf9yU15HKqMSVFoGI4eJbjkZ9ngGYv&#xA;6RH/AGSjJyQul/mTqV7pt9fmztGit7KS8jEFxzeNkNBFPGQrqSN+QFMsy9mxjKMblvKtx9oUZDTV&#xA;5+abWs13by2sazR6fDe2lWNJJJIlleI/IMSPljDsriAIO3EQfnVoOVHWnnbULrzTPo6LYxRwPECk&#xA;0si3MqvGJG9FArKxUV6kZVPQxjhE/VvfTYb1uyE96Qei/mXf38VxdGxt3tora4ufQguA1zEbcEhJ&#xA;omCt8dNmUEZbm7MjAgcRuwNxsb7igZLVNM846jrmjam0sNska2frxT2lwJCjOD+6lQ8XR1+VMq1G&#xA;jjikKJ51uPtHk26eXFMISbRzBpcV5Nf3dXhScuqs0JD0rGHDbMB/NQZWMlyqg7EZLlVBVj0e2lur&#xA;GCLUL2t7EbgFqbRhWNNmPxVUYDkIBNDZByEAmhsonRpW1Cxijv7lba7ieeQy1SWJIwall5HrTbD4&#xA;mx2FhPibHYWF0Okp+l7rTp9Qug0KGaGRCCrRBA9TVutDiZ+kEAKcnpEgAsk05RoqanFc6hKsomaP&#xA;iAVQRMVUynl8IPtXvhE/Vw0FE/Vw1Fdd6TFaxyepqV3ztjD9abi3pkS8S3BgTuquDvgjO+g3WM76&#xA;DdWOlT6XqNgZr6WV57+NLaPkSrwBlPNt+9aUwcYkDt0Y8YlE0On2vQMwXAdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirCovy4ddZN7JqSta/pRtYFutsqy+qTVUM/MngPDjvm0PaXo4RHfg&#xA;4LvavdXNq8Pddpn5dSWd9ayPqry2OnyXMtjarCsbxtdAhqzBiW48qj4Rgy9oiUSOH1Sqzfd5JGPz&#xA;Q8X5YzE3b3erC4muLKWxjlW2SJgJTXnKVeszD/KyZ7TG1RoCQlzvl3dyPD81+o/lbaX9pewTXv7y&#xA;4isY7eb0d4WsozEW+38XqKxqNqe+DH2oYSBA5GV78+I39inHaOs/Jl7Z+YbjVYNQi9K6eJprd7UN&#xA;JSKMRkJN6lU5Cu4XKZ62MsYgYmxe/F3+VJEN7Qth+XdzBqX1641h55UguILeZIEiuAbgFeckysWk&#xA;ZK/DUZZk7RBjwiFCwedjbuHRRj35qdr5DudMi1O+kvP0hez2Js41it1t6qDyq6ozepIxA+I74M2u&#xA;GQCIHCBK+d/2BswR4ZgkoZX1pNKksotDmjklhEEkoL+mR3f0uPHmfGuV+nividhUeK+Jq3k8wQ3d&#xA;hcDR5ybG2NsF+IcqgjlXjt9rpieAgji5lSIEEcQ3Nqi3fmMMLhtHme/+q/VGuXBYMOVeZQqammx3&#xA;3wcMOXFtdo4YcuLa7WGbzA1/Hevo0xmW1NrJxBUMSCOdAu3XphqFVxdbTUKri62pejq7aJBpsujX&#xA;TNbrKI5kd0FZWLVZAh5UPauG48V8QTceLi4gr39xr91YXFumjXEUt2Ixcy1dlJjAFVjKgKSFAORi&#xA;Igg8XJjEQBB4hsow2eu3OraNJNp88Udj9Xhd2DEERyVLmoFNjkjKIjLfnbIyiIyoje3ouYDrnYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FX//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:a3056bba-defe-4849-b6d1-1dea25de804b</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:a3056bba-defe-4849-b6d1-1dea25de804b</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:a4a10c3b-5d24-4204-89d6-51ec9fb9f406</stRef:instanceID>
            <stRef:documentID>xmp.did:ddd100d4-a8c5-e047-aa6d-80667f819e38</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ddd100d4-a8c5-e047-aa6d-80667f819e38</stEvt:instanceID>
                  <stEvt:when>2020-12-28T23:46:42+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a3056bba-defe-4849-b6d1-1dea25de804b</stEvt:instanceID>
                  <stEvt:when>2020-12-30T23:14:48+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>РћС‚С‚РµРЅРєРё СЃРµСЂРѕРіРѕ</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
450 450 mo
0 450 li
0 0 li
450 0 li
450 450 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.181582 .527123 0 0 cmyk
f
450 337.994 mo
440.916 337.786 432.211 337.816 424.321 338.13 cv
381.12 339.863 350.842 345.574 319.105 352.55 cv
281.375 360.849 249.213 370.215 213.889 379.787 cv
179.805 389.022 148.468 397.382 108.674 403.885 cv
78.8068 408.76 34.7399 411.976 3.45837 410.728 cv
2.29486 410.681 1.14508 410.63 0 410.578 cv
0 450 li
450 450 li
450 337.994 li
cp
0 .01944 .0471199 0 cmyk
f
321.384 433.593 mo
223.177 433.593 li
223.177 409.016 li
321.384 409.016 li
321.384 433.593 li
cp
.181582 .527123 0 0 cmyk
f
131.784 426.364 mo
134.359 426.364 li
134.863 426.364 135.228 426.259 135.449 426.053 cv
135.671 425.846 135.783 425.506 135.783 425.031 cv
135.783 423.698 li
135.783 423.223 135.667 422.886 135.437 422.688 cv
135.207 422.488 134.834 422.389 134.312 422.389 cv
131.784 422.389 li
131.616 422.389 131.532 422.473 131.532 422.642 cv
131.532 426.109 li
131.532 426.278 131.616 426.364 131.784 426.364 cv
cp
131.784 420.022 mo
134.129 420.022 li
134.619 420.022 134.977 419.918 135.207 419.712 cv
135.437 419.507 135.553 419.166 135.553 418.691 cv
135.553 417.794 li
135.553 417.319 135.441 416.979 135.221 416.771 cv
134.998 416.564 134.641 416.463 134.151 416.463 cv
131.784 416.463 li
131.616 416.463 131.532 416.545 131.532 416.714 cv
131.532 419.77 li
131.532 419.938 131.616 420.022 131.784 420.022 cv
cp
128.616 428.315 mo
128.616 414.509 li
128.616 414.188 128.776 414.027 129.098 414.027 cv
134.611 414.027 li
135.821 414.027 136.755 414.349 137.413 414.992 cv
138.071 415.635 138.4 416.553 138.4 417.749 cv
138.4 418.691 li
138.4 419.993 137.797 420.834 136.587 421.217 cv
137.198 421.309 137.688 421.559 138.056 421.963 cv
138.425 422.371 138.608 422.948 138.608 423.698 cv
138.608 425.077 li
138.608 426.27 138.279 427.19 137.621 427.833 cv
136.961 428.476 136.036 428.798 134.841 428.798 cv
129.098 428.798 li
128.776 428.798 128.616 428.637 128.616 428.315 cv
cp
.692714 .656947 0 0 cmyk
f
148.922 414.027 mo
150.853 414.027 li
151.189 414.027 151.358 414.18 151.358 414.485 cv
151.358 425.053 li
151.358 426.248 151.025 427.171 150.358 427.822 cv
149.692 428.472 148.761 428.798 147.566 428.798 cv
145.041 428.798 li
143.831 428.798 142.897 428.476 142.238 427.833 cv
141.579 427.19 141.25 426.263 141.25 425.053 cv
141.25 414.509 li
141.25 414.188 141.41 414.027 141.732 414.027 cv
143.685 414.027 li
144.007 414.027 144.168 414.188 144.168 414.509 cv
144.168 424.917 li
144.168 425.407 144.271 425.754 144.478 425.96 cv
144.684 426.167 145.026 426.27 145.501 426.27 cv
147.084 426.27 li
147.576 426.27 147.923 426.167 148.131 425.96 cv
148.337 425.754 148.439 425.407 148.439 424.917 cv
148.439 414.509 li
148.439 414.188 148.6 414.027 148.922 414.027 cv
cp
f
153.861 425.031 mo
153.861 424.571 li
153.861 424.249 154.022 424.089 154.343 424.089 cv
156.297 424.089 li
156.618 424.089 156.779 424.249 156.779 424.571 cv
156.779 424.756 li
156.779 425.335 156.893 425.736 157.123 425.949 cv
157.353 426.164 157.774 426.27 158.387 426.27 cv
159.466 426.27 li
160.064 426.27 160.481 426.156 160.718 425.926 cv
160.956 425.696 161.075 425.268 161.075 424.64 cv
161.075 424.363 li
161.075 423.92 160.894 423.578 160.535 423.343 cv
160.174 423.103 159.727 422.963 159.191 422.916 cv
158.654 422.872 158.077 422.782 157.456 422.653 cv
156.835 422.524 156.258 422.354 155.721 422.146 cv
155.186 421.941 154.738 421.535 154.379 420.931 cv
154.018 420.325 153.838 419.548 153.838 418.598 cv
153.838 417.794 li
153.838 416.599 154.175 415.674 154.848 415.014 cv
155.523 414.356 156.458 414.027 157.652 414.027 cv
159.948 414.027 li
161.157 414.027 162.1 414.356 162.775 415.014 cv
163.448 415.674 163.786 416.599 163.786 417.794 cv
163.786 418.232 li
163.786 418.553 163.625 418.714 163.302 418.714 cv
161.35 418.714 li
161.028 418.714 160.868 418.553 160.868 418.232 cv
160.868 418.093 li
160.868 417.495 160.754 417.091 160.524 416.874 cv
160.294 416.661 159.871 416.553 159.26 416.553 cv
158.364 416.553 li
157.736 416.553 157.31 416.672 157.089 416.91 cv
156.867 417.147 156.755 417.611 156.755 418.299 cv
156.755 418.736 li
156.755 419.456 157.383 419.869 158.639 419.978 cv
159.94 420.084 161.098 420.344 162.109 420.757 cv
162.644 420.987 163.092 421.398 163.451 421.985 cv
163.812 422.576 163.992 423.331 163.992 424.249 cv
163.992 425.031 li
163.992 426.225 163.655 427.153 162.98 427.811 cv
162.307 428.469 161.372 428.798 160.178 428.798 cv
157.675 428.798 li
156.48 428.798 155.545 428.469 154.872 427.811 cv
154.197 427.153 153.861 426.225 153.861 425.031 cv
cp
f
169.643 414.509 mo
169.643 428.315 li
169.643 428.637 169.482 428.798 169.161 428.798 cv
167.207 428.798 li
166.885 428.798 166.725 428.637 166.725 428.315 cv
166.725 414.509 li
166.725 414.188 166.885 414.027 167.207 414.027 cv
169.161 414.027 li
169.482 414.027 169.643 414.188 169.643 414.509 cv
cp
f
175.134 428.798 mo
173.227 428.798 li
172.905 428.798 172.744 428.637 172.744 428.315 cv
172.744 414.509 li
172.744 414.188 172.905 414.027 173.227 414.027 cv
174.948 414.027 li
175.27 414.027 175.485 414.134 175.592 414.349 cv
180.233 423.055 li
180.325 423.055 li
180.325 414.509 li
180.325 414.188 180.486 414.027 180.807 414.027 cv
182.714 414.027 li
183.036 414.027 183.197 414.188 183.197 414.509 cv
183.197 428.315 li
183.197 428.637 183.036 428.798 182.714 428.798 cv
181.037 428.798 li
180.699 428.798 180.454 428.644 180.301 428.338 cv
175.707 419.793 li
175.616 419.793 li
175.616 428.315 li
175.616 428.637 175.455 428.798 175.134 428.798 cv
cp
f
194.176 428.798 mo
186.664 428.798 li
186.343 428.798 186.182 428.637 186.182 428.315 cv
186.182 414.509 li
186.182 414.188 186.343 414.027 186.664 414.027 cv
194.176 414.027 li
194.482 414.027 194.636 414.188 194.636 414.509 cv
194.636 416.07 li
194.636 416.392 194.482 416.553 194.176 416.553 cv
189.375 416.553 li
189.19 416.553 189.098 416.639 189.098 416.807 cv
189.098 419.793 li
189.098 419.963 189.19 420.045 189.375 420.045 cv
193.303 420.045 li
193.624 420.045 193.785 420.206 193.785 420.527 cv
193.785 422.09 li
193.785 422.412 193.624 422.572 193.303 422.572 cv
189.375 422.572 li
189.19 422.572 189.098 422.657 189.098 422.825 cv
189.098 426.018 li
189.098 426.188 189.19 426.27 189.375 426.27 cv
194.176 426.27 li
194.482 426.27 194.636 426.431 194.636 426.753 cv
194.636 428.315 li
194.636 428.637 194.482 428.798 194.176 428.798 cv
cp
f
196.817 425.031 mo
196.817 424.571 li
196.817 424.249 196.978 424.089 197.3 424.089 cv
199.253 424.089 li
199.575 424.089 199.736 424.249 199.736 424.571 cv
199.736 424.756 li
199.736 425.335 199.85 425.736 200.08 425.949 cv
200.31 426.164 200.73 426.27 201.343 426.27 cv
202.422 426.27 li
203.02 426.27 203.437 426.156 203.675 425.926 cv
203.912 425.696 204.032 425.268 204.032 424.64 cv
204.032 424.363 li
204.032 423.92 203.85 423.578 203.491 423.343 cv
203.131 423.103 202.684 422.963 202.147 422.916 cv
201.611 422.872 201.033 422.782 200.412 422.653 cv
199.792 422.524 199.214 422.354 198.678 422.146 cv
198.143 421.941 197.694 421.535 197.335 420.931 cv
196.974 420.325 196.795 419.548 196.795 418.598 cv
196.795 417.794 li
196.795 416.599 197.131 415.674 197.804 415.014 cv
198.479 414.356 199.414 414.027 200.609 414.027 cv
202.904 414.027 li
204.114 414.027 205.056 414.356 205.731 415.014 cv
206.404 415.674 206.742 416.599 206.742 417.794 cv
206.742 418.232 li
206.742 418.553 206.582 418.714 206.258 418.714 cv
204.306 418.714 li
203.985 418.714 203.824 418.553 203.824 418.232 cv
203.824 418.093 li
203.824 417.495 203.71 417.091 203.48 416.874 cv
203.25 416.661 202.828 416.553 202.216 416.553 cv
201.321 416.553 li
200.693 416.553 200.267 416.672 200.046 416.91 cv
199.823 417.147 199.711 417.611 199.711 418.299 cv
199.711 418.736 li
199.711 419.456 200.339 419.869 201.596 419.978 cv
202.897 420.084 204.054 420.344 205.065 420.757 cv
205.6 420.987 206.049 421.398 206.408 421.985 cv
206.769 422.576 206.948 423.331 206.948 424.249 cv
206.948 425.031 li
206.948 426.225 206.611 427.153 205.937 427.811 cv
205.264 428.469 204.329 428.798 203.134 428.798 cv
200.631 428.798 li
199.437 428.798 198.502 428.469 197.829 427.811 cv
197.154 427.153 196.817 426.225 196.817 425.031 cv
cp
f
209.199 425.031 mo
209.199 424.571 li
209.199 424.249 209.36 424.089 209.681 424.089 cv
211.635 424.089 li
211.956 424.089 212.117 424.249 212.117 424.571 cv
212.117 424.756 li
212.117 425.335 212.231 425.736 212.461 425.949 cv
212.691 426.164 213.112 426.27 213.725 426.27 cv
214.803 426.27 li
215.402 426.27 215.819 426.156 216.056 425.926 cv
216.293 425.696 216.413 425.268 216.413 424.64 cv
216.413 424.363 li
216.413 423.92 216.232 423.578 215.873 423.343 cv
215.512 423.103 215.065 422.963 214.529 422.916 cv
213.992 422.872 213.414 422.782 212.794 422.653 cv
212.173 422.524 211.595 422.354 211.059 422.146 cv
210.524 421.941 210.076 421.535 209.717 420.931 cv
209.356 420.325 209.176 419.548 209.176 418.598 cv
209.176 417.794 li
209.176 416.599 209.513 415.674 210.186 415.014 cv
210.861 414.356 211.796 414.027 212.99 414.027 cv
215.286 414.027 li
216.495 414.027 217.438 414.356 218.112 415.014 cv
218.785 415.674 219.124 416.599 219.124 417.794 cv
219.124 418.232 li
219.124 418.553 218.963 418.714 218.64 418.714 cv
216.688 418.714 li
216.366 418.714 216.206 418.553 216.206 418.232 cv
216.206 418.093 li
216.206 417.495 216.092 417.091 215.862 416.874 cv
215.632 416.661 215.209 416.553 214.598 416.553 cv
213.702 416.553 li
213.074 416.553 212.648 416.672 212.427 416.91 cv
212.205 417.147 212.093 417.611 212.093 418.299 cv
212.093 418.736 li
212.093 419.456 212.721 419.869 213.977 419.978 cv
215.278 420.084 216.436 420.344 217.447 420.757 cv
217.982 420.987 218.43 421.398 218.789 421.985 cv
219.15 422.576 219.329 423.331 219.329 424.249 cv
219.329 425.031 li
219.329 426.225 218.993 427.153 218.318 427.811 cv
217.645 428.469 216.71 428.798 215.516 428.798 cv
213.013 428.798 li
211.818 428.798 210.883 428.469 210.21 427.811 cv
209.535 427.153 209.199 426.225 209.199 425.031 cv
cp
f
226.633 425.031 mo
226.633 424.571 li
226.633 424.249 226.794 424.089 227.116 424.089 cv
229.069 424.089 li
229.391 424.089 229.552 424.249 229.552 424.571 cv
229.552 424.756 li
229.552 425.335 229.666 425.736 229.896 425.949 cv
230.126 426.164 230.546 426.27 231.159 426.27 cv
232.238 426.27 li
232.836 426.27 233.253 426.156 233.491 425.926 cv
233.728 425.696 233.848 425.268 233.848 424.64 cv
233.848 424.363 li
233.848 423.92 233.666 423.578 233.307 423.343 cv
232.947 423.103 232.5 422.963 231.963 422.916 cv
231.427 422.872 230.849 422.782 230.228 422.653 cv
229.608 422.524 229.03 422.354 228.494 422.146 cv
227.959 421.941 227.51 421.535 227.151 420.931 cv
226.79 420.325 226.611 419.548 226.611 418.598 cv
226.611 417.794 li
226.611 416.599 226.947 415.674 227.621 415.014 cv
228.295 414.356 229.23 414.027 230.425 414.027 cv
232.72 414.027 li
233.93 414.027 234.872 414.356 235.547 415.014 cv
236.22 415.674 236.558 416.599 236.558 417.794 cv
236.558 418.232 li
236.558 418.553 236.398 418.714 236.074 418.714 cv
234.122 418.714 li
233.801 418.714 233.64 418.553 233.64 418.232 cv
233.64 418.093 li
233.64 417.495 233.526 417.091 233.296 416.874 cv
233.066 416.661 232.644 416.553 232.032 416.553 cv
231.137 416.553 li
230.509 416.553 230.083 416.672 229.862 416.91 cv
229.64 417.147 229.527 417.611 229.527 418.299 cv
229.527 418.736 li
229.527 419.456 230.156 419.869 231.412 419.978 cv
232.713 420.084 233.87 420.344 234.882 420.757 cv
235.416 420.987 235.865 421.398 236.224 421.985 cv
236.585 422.576 236.764 423.331 236.764 424.249 cv
236.764 425.031 li
236.764 426.225 236.428 427.153 235.753 427.811 cv
235.08 428.469 234.145 428.798 232.95 428.798 cv
230.447 428.798 li
229.253 428.798 228.318 428.469 227.645 427.811 cv
226.97 427.153 226.633 426.225 226.633 425.031 cv
cp
0 .01944 .0471199 0 cmyk
f
243.956 428.798 mo
242.027 428.798 li
241.69 428.798 241.522 428.637 241.522 428.315 cv
241.522 416.807 li
241.522 416.639 241.436 416.553 241.268 416.553 cv
238.65 416.553 li
238.327 416.553 238.166 416.392 238.166 416.07 cv
238.166 414.509 li
238.166 414.188 238.327 414.027 238.65 414.027 cv
247.332 414.027 li
247.654 414.027 247.814 414.188 247.814 414.509 cv
247.814 416.07 li
247.814 416.392 247.654 416.553 247.332 416.553 cv
244.715 416.553 li
244.53 416.553 244.438 416.639 244.438 416.807 cv
244.438 428.315 li
244.438 428.637 244.277 428.798 243.956 428.798 cv
cp
f
252.729 421.01 mo
254.982 421.01 li
255.472 421.01 255.831 420.907 256.061 420.699 cv
256.291 420.494 256.406 420.161 256.406 419.701 cv
256.406 417.91 li
256.406 417.435 256.291 417.091 256.061 416.874 cv
255.831 416.661 255.472 416.553 254.982 416.553 cv
252.729 416.553 li
252.561 416.553 252.477 416.639 252.477 416.807 cv
252.477 420.757 li
252.477 420.927 252.561 421.01 252.729 421.01 cv
cp
251.995 428.798 mo
250.043 428.798 li
249.721 428.798 249.561 428.637 249.561 428.315 cv
249.561 414.509 li
249.561 414.188 249.721 414.027 250.043 414.027 cv
255.509 414.027 li
256.704 414.027 257.638 414.356 258.311 415.014 cv
258.986 415.674 259.323 416.599 259.323 417.794 cv
259.323 419.585 li
259.323 421.316 258.642 422.464 257.278 423.032 cv
257.278 423.124 li
259.736 428.246 li
259.874 428.615 259.743 428.798 259.345 428.798 cv
257.485 428.798 li
257.21 428.798 257.01 428.768 256.889 428.706 cv
256.765 428.644 256.666 428.514 256.59 428.315 cv
254.292 423.354 li
252.754 423.354 li
252.568 423.354 252.477 423.438 252.477 423.606 cv
252.477 428.315 li
252.477 428.637 252.316 428.798 251.995 428.798 cv
cp
f
266.995 416.807 mo
265.341 423.445 li
268.741 423.445 li
267.087 416.807 li
266.995 416.807 li
cp
263.664 428.798 mo
261.458 428.798 li
261.183 428.798 261.091 428.637 261.183 428.315 cv
264.812 414.509 li
264.92 414.188 265.15 414.027 265.501 414.027 cv
268.556 414.027 li
268.939 414.027 269.169 414.188 269.246 414.509 cv
272.876 428.315 li
272.968 428.637 272.876 428.798 272.6 428.798 cv
270.394 428.798 li
270.226 428.798 270.112 428.764 270.05 428.693 cv
269.988 428.626 269.943 428.499 269.911 428.315 cv
269.268 425.788 li
264.789 425.788 li
264.146 428.315 li
264.116 428.499 264.066 428.626 263.996 428.693 cv
263.927 428.764 263.817 428.798 263.664 428.798 cv
cp
f
279.492 428.798 mo
277.563 428.798 li
277.227 428.798 277.058 428.637 277.058 428.315 cv
277.058 416.807 li
277.058 416.639 276.972 416.553 276.804 416.553 cv
274.187 416.553 li
273.863 416.553 273.703 416.392 273.703 416.07 cv
273.703 414.509 li
273.703 414.188 273.863 414.027 274.187 414.027 cv
282.869 414.027 li
283.19 414.027 283.351 414.188 283.351 414.509 cv
283.351 416.07 li
283.351 416.392 283.19 416.553 282.869 416.553 cv
280.251 416.553 li
280.066 416.553 279.975 416.639 279.975 416.807 cv
279.975 428.315 li
279.975 428.637 279.814 428.798 279.492 428.798 cv
cp
f
293.091 428.798 mo
285.579 428.798 li
285.258 428.798 285.097 428.637 285.097 428.315 cv
285.097 414.509 li
285.097 414.188 285.258 414.027 285.579 414.027 cv
293.091 414.027 li
293.398 414.027 293.551 414.188 293.551 414.509 cv
293.551 416.07 li
293.551 416.392 293.398 416.553 293.091 416.553 cv
288.29 416.553 li
288.105 416.553 288.013 416.639 288.013 416.807 cv
288.013 419.793 li
288.013 419.963 288.105 420.045 288.29 420.045 cv
292.218 420.045 li
292.539 420.045 292.7 420.206 292.7 420.527 cv
292.7 422.09 li
292.7 422.412 292.539 422.572 292.218 422.572 cv
288.29 422.572 li
288.105 422.572 288.013 422.657 288.013 422.825 cv
288.013 426.018 li
288.013 426.188 288.105 426.27 288.29 426.27 cv
293.091 426.27 li
293.398 426.27 293.551 426.431 293.551 426.753 cv
293.551 428.315 li
293.551 428.637 293.398 428.798 293.091 428.798 cv
cp
f
302.096 428.798 mo
299.66 428.798 li
298.451 428.798 297.516 428.476 296.858 427.833 cv
296.2 427.19 295.871 426.263 295.871 425.053 cv
295.871 417.772 li
295.871 416.56 296.2 415.635 296.858 414.992 cv
297.516 414.349 298.451 414.027 299.66 414.027 cv
302.096 414.027 li
303.291 414.027 304.216 414.352 304.876 415.003 cv
305.534 415.655 305.863 416.577 305.863 417.772 cv
305.863 418.46 li
305.863 418.796 305.702 418.964 305.381 418.964 cv
303.429 418.964 li
303.107 418.964 302.947 418.796 302.947 418.46 cv
302.947 417.91 li
302.947 417.42 302.846 417.071 302.648 416.863 cv
302.448 416.657 302.104 416.553 301.614 416.553 cv
300.12 416.553 li
299.645 416.553 299.305 416.657 299.098 416.863 cv
298.892 417.071 298.787 417.42 298.787 417.91 cv
298.787 424.917 li
298.787 425.407 298.892 425.754 299.098 425.96 cv
299.305 426.167 299.645 426.27 300.12 426.27 cv
301.614 426.27 li
302.104 426.27 302.448 426.167 302.648 425.96 cv
302.846 425.754 302.947 425.407 302.947 424.917 cv
302.947 423.468 li
302.947 423.3 302.861 423.216 302.692 423.216 cv
301.315 423.216 li
300.993 423.216 300.832 423.055 300.832 422.733 cv
300.832 421.17 li
300.832 420.849 300.993 420.688 301.315 420.688 cv
305.334 420.688 li
305.687 420.688 305.863 420.864 305.863 421.217 cv
305.863 425.053 li
305.863 426.248 305.534 427.171 304.876 427.822 cv
304.216 428.472 303.291 428.798 302.096 428.798 cv
cp
f
314.042 428.798 mo
312.088 428.798 li
311.767 428.798 311.606 428.637 311.606 428.315 cv
311.606 423.399 li
307.402 414.532 li
307.342 414.395 307.346 414.276 307.415 414.175 cv
307.482 414.078 307.587 414.027 307.723 414.027 cv
310.159 414.027 li
310.404 414.027 310.587 414.188 310.711 414.509 cv
313.008 420.092 li
313.169 420.092 li
315.42 414.509 li
315.526 414.188 315.71 414.027 315.971 414.027 cv
318.405 414.027 li
318.559 414.027 318.671 414.074 318.74 414.164 cv
318.807 414.257 318.803 414.38 318.727 414.532 cv
314.524 423.399 li
314.524 428.315 li
314.524 428.637 314.364 428.798 314.042 428.798 cv
cp
f
368.065 279.78 mo
368.059 276.491 li
363.762 275.464 li
363.581 275.153 363.376 274.846 363.138 274.55 cv
364.978 271.958 li
360.955 269.635 li
356.682 270.662 li
356.176 270.511 355.655 270.379 355.134 270.266 cv
353.256 267.67 li
347.586 267.675 li
345.827 270.153 li
345.29 270.257 344.762 270.375 344.242 270.507 cv
339.762 269.432 li
335.764 271.755 li
337.56 274.239 li
337.301 274.531 337.075 274.832 336.882 275.134 cv
332.418 276.213 li
332.432 279.497 li
336.717 280.525 li
336.897 280.836 337.094 281.137 337.332 281.444 cv
335.492 284.035 li
339.515 286.358 li
343.797 285.326 li
344.302 285.477 344.823 285.609 345.345 285.722 cv
347.214 288.314 li
352.884 288.318 li
354.652 285.835 li
355.18 285.736 355.708 285.618 356.22 285.482 cv
360.708 286.551 li
364.706 284.228 li
362.918 281.75 li
363.177 281.457 363.403 281.156 363.597 280.854 cv
368.065 279.78 li
382.145 264.049 mo
386.613 262.974 li
386.607 259.685 li
382.309 258.658 li
382.129 258.347 381.924 258.041 381.686 257.744 cv
383.526 255.152 li
379.503 252.829 li
375.229 253.857 li
374.724 253.706 374.203 253.574 373.681 253.461 cv
371.804 250.864 li
366.134 250.869 li
364.374 253.348 li
363.838 253.451 363.31 253.569 362.79 253.701 cv
358.31 252.627 li
354.312 254.95 li
356.108 257.433 li
355.849 257.725 355.623 258.027 355.429 258.328 cv
350.966 259.408 li
350.98 262.692 li
355.265 263.719 li
355.445 264.03 355.642 264.332 355.88 264.638 cv
354.04 267.23 li
358.063 269.553 li
362.345 268.521 li
362.85 268.672 363.371 268.803 363.892 268.917 cv
365.762 271.508 li
371.432 271.513 li
373.2 269.03 li
373.728 268.931 374.256 268.813 374.768 268.676 cv
379.256 269.746 li
383.254 267.423 li
381.466 264.944 li
381.725 264.652 381.951 264.35 382.145 264.049 cv
324.548 244.389 mo
326.343 246.873 li
326.084 247.165 325.858 247.466 325.665 247.768 cv
321.201 248.847 li
321.215 252.131 li
325.5 253.159 li
325.68 253.47 325.878 253.771 326.115 254.077 cv
324.275 256.669 li
328.299 258.992 li
332.58 257.96 li
333.085 258.111 333.607 258.243 334.128 258.356 cv
335.997 260.948 li
341.667 260.952 li
343.435 258.469 li
343.963 258.37 344.491 258.252 345.003 258.116 cv
349.491 259.185 li
353.489 256.862 li
351.702 254.384 li
351.96 254.092 352.186 253.79 352.38 253.488 cv
356.848 252.414 li
356.842 249.125 li
352.545 248.098 li
352.364 247.787 352.159 247.48 351.921 247.184 cv
353.762 244.592 li
349.738 242.269 li
345.465 243.296 li
344.959 243.145 344.438 243.013 343.917 242.9 cv
342.039 240.304 li
336.369 240.309 li
334.61 242.787 li
334.073 242.891 333.545 243.009 333.025 243.141 cv
328.545 242.066 li
324.548 244.389 li
237.402 269.269 mo
241.042 267.153 241.037 263.699 237.391 261.594 cv
201.644 240.956 li
156.778 267.029 li
156.469 267.209 156.469 267.656 156.779 267.836 cv
191.829 288.071 li
195.475 290.177 201.438 290.168 205.079 288.053 cv
237.402 269.269 li
329.971 274.397 mo
237.706 328.015 li
236.516 328.707 234.606 328.707 233.408 328.015 cv
202.147 309.967 li
200.969 309.287 200.943 308.169 202.133 307.477 cv
278.678 262.994 li
278.279 262.837 277.895 262.663 277.541 262.458 cv
276.379 261.788 li
273.284 260.001 273.284 257.104 276.379 255.317 cv
315.918 232.489 li
319.013 230.702 324.031 230.702 327.126 232.489 cv
328.287 233.159 li
331.382 234.946 331.382 237.843 328.287 239.63 cv
301.169 255.287 li
329.956 271.908 li
331.154 272.599 331.16 273.706 329.971 274.397 cv
.423011 .71606 .150362 .00448615 cmyk
f
198.442 287.114 mo
196.047 287.114 193.65 286.583 191.822 285.527 cv
177.855 277.463 li
177.855 274.931 li
177.865 274.925 li
191.829 282.987 li
193.646 284.036 196.039 284.56 198.433 284.56 cv
200.842 284.56 203.253 284.029 205.079 282.968 cv
237.402 264.184 li
239.212 263.132 240.121 261.749 240.129 260.366 cv
240.151 260.366 li
240.144 262.906 li
240.143 263.334 240.054 263.761 239.879 264.179 cv
239.49 265.104 238.674 265.981 237.426 266.706 cv
205.039 285.527 li
203.216 286.587 200.83 287.114 198.442 287.114 cv
170.433 273.179 mo
162.677 268.7 li
162.677 268.7 li
170.433 273.179 li
level3{
gsave
clp
[13.1055 0 0 13.1055 192.274 273.74 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~4?61;4#ft83]Kh63]B_43B'S23&XA/2`4/,2`+)+2Ddr)2)@`&2)7W$1bqK"1GM;u1,))r1,)&q0eYin
0J5Wk0.oKi0.fEh/hB3e/M''c/1Wj`/1Na^.k3U\.OdCY.4@1V-mptS-RLbP-71YO,pbGL,U>5I,U5,G
,9nuE+sJcB+sJcB+X&Q?+<W?<+<W<;+!3*8+!3*8*Zcm5*?Ha3*??X1*#pI/)]U=-)]L4+)B1())&an'
)&Xe%(`=Y#(DnFu(De@t()J4r'c&"o'GVel'GVel',2Si',2Ph&ecAf&JH5d&J?,b&/#u`&.oo_%hK]\
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[13.1055 0 0 13.1055 192.274 273.74 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~4$,Mc4$#D`3]T2\3B9)[3B/uX3&`cT2`<QP2E!HO2Dm?L2)I-H1c.$G1c$pD1GU^@1,1L<0ekC;0eb:8
0JG.50/"q1/hSb//hS_-/M/M)/1`;%.k<,#.k<)!.Olkr.4HYn-n$Gj-RU5f-71#b,paf^,U=TZ,9nEX
,9nEW+sJ3S+X&!P+X&!O+<VdK+!2RH+!2RG*Zc@D*Zc@C*??.?*#oq<*#oq;)]K_7)B'M4)B'M3)&X;/
(`4),(`4),(Ddl(()@Z$()@Z$'bqGu'GM5q',)#m',)#m&eYfi&eYfi&J5Te&.fBa&.fBa%hB0]%hB0]
~>
<~3&ilW3&`cT2`EZS2`<QP2E!HO2Dm?L2)I-H1c$pD1G^gC1GU^@1,1L<0ekC;0eb:80J>(40/"t30.nk0
/hS_-/M/P+/M/M)/1`;%.k<,#.k<)!.Olkr.4H\p.4HYn-n$Gj-RU5f-71#b,pai`,paf^,U=TZ,9nBV
+sJ3T+sJ3S+X&!P+X&!O+<VdK+!2RH+!2RG*Zc@D*Zc@C*??.@*??.?*#oq;)]K_8)]K_7)B'M4)B'M3
)&X;0(`4),(`4),(Ddl(()@Z$()@Z$'bqGu'GM5q'GM5q',)#m',)#m&eYfi&eYfi&J5Te&J5Te&.fBa
~>
<~:/4PZ:/+GW9h\5S9M8#O91hfK8kDTG8OuBC84Z9B84Q0?7n,s;7R]a7779O36psF26pj=/6UF++6:!n'
5s[b$5X7Ou5<h@s5<h=q5!D+m4Ztni4?P\e4$,Ja3]]8]3B9&Y3&iiU2`EWQ2E!HO2E!EM2)R3I1c.!E
1G^gB1,:U>0ekC;0ekC:0JG160/"t2/hSb./M/P+/M/P*/1`>&.k<,".Olnt.Olns.4H\o-n$Jk-RU8h
-RU8h-71&d,pai`,U=W\,U=W\,9nEX+sJ3T+X&!P+X&!P+<VdL+!2RH+!2RH*Zc@D*??.@*#oq<*#oq<
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
237.391 256.509 mo
241.037 258.615 241.042 262.068 237.402 264.184 cv
205.079 282.968 li
201.438 285.084 195.476 285.092 191.829 282.987 cv
156.779 262.751 li
156.469 262.572 156.469 262.124 156.778 261.944 cv
201.644 235.871 li
237.391 256.509 li
0 .01944 .0471199 0 cmyk
f
172.195 233.121 mo
217.854 206.683 li
203.763 237.086 li
158.104 263.524 li
172.195 233.121 li
.0582589 .064271 .110231 0 cmyk
f
170.526 231.163 mo
172.195 233.121 li
158.104 263.524 li
157.13 263.394 li
156.083 262.357 li
170.526 231.163 li
.593957 .799741 0 0 cmyk
f
177.855 277.464 mo
170.433 273.179 li
177.855 277.463 li
177.855 277.464 li
.306493 .414343 .258671 .000274662 cmyk
f
223.577 248.534 mo
211.567 241.6 li
211.567 241.6 li
223.577 248.534 li
.212009 .343725 .181949 0 cmyk
f
177.855 277.463 mo
170.433 273.179 li
162.677 268.7 li
164.925 267.454 li
177.865 274.925 li
177.855 274.931 li
177.855 277.464 li
level3{
gsave
clp
[13.1055 0 0 13.1055 192.274 273.74 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~4?61;4?6.:4#p%94#ft84#fq73]Kh63]Kh63]B_43]B_43B'V33B'S23AsM13&XA/3&XA/3&O;.3&O8-
2`4/,2`4/,2`+&*2`+&*2Ddr)2D[i'2D[i'2)@`&2)@]%2)7W$2)7W$1bqK"1bhE!1bhE!1GM;u1GM8t
1GD2s1,))r1,)&q1+tup1+tup0eYin0eYin0ePcm0J5Wk0J5Wk0J5Wk0J,Ni0.fEh0.fEh0.fBg/hB3e
/hB3e/hB0d/hB0d/Ls!b/Lrsa/Lrsa/1Nd_/1Na^/1Na^.k3X].k*O[.OdFZ.OdCY.O[=X.4@1V.4@1V
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[13.1055 0 0 13.1055 192.274 273.74 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~4$,Mc4$,Mc4$#D`3]];_3]];_3]T2\3B9)[3B9)[3B9)[3B/uX3&ilW3&ilW3&`cT2`EZS2`EZS2`EZS
2`EWQ2E!HO2E!HO2E!HO2E!EM2)R6K2)R6K2)R3I1c.$G1c.$G1c.$G1c.!E1G^gC1G^gC1G^dA1,:U?
1,:U?1,:U>0ekC;0ekC;0ekC;0ekC:0JG170JG170JG160/"t30/"t30/"t30/"t2/hSb//hSb//hSb.
/M/P+/M/P+/M/P+/M/P+/1`>'/1`>'/1`>'.k<,#.k<,#.k<,#.Olnt.Olnt.4H\p.4H\p.4H\p-n$Jl
~>
<~3&ilW3&ilW3&ilW3&`cT2`EZS2`EZS2`EZS2`<QP2E!HO2E!HO2E!HO2Dm?L2)R6K2)R6K2)I-H1c.$G
1c.$G1c.$G1c.!E1G^gC1G^gC1G^dA1,:U?1,:U?1,:U?1,:R=0ekC;0ekC;0ek@90JG170JG170JG17
0JG160/"t30/"t30/"t2/hSb//hSb//hSb//hSb./M/P+/M/P+/M/P+/M/P*/1`>'/1`>'/1`>'/1`>&
.k<,#.k<,#.k<,#.k<,#.Olnt.Olnt.Olnt.4H\p.4H\p.4H\p.4H\p-n$Jl-n$Jl-n$Jl-RU8h-RU8h
~>
<~:/4PZ:/+GW9he>V9he>V9h\5S9MA,R9MA,R9M8#O91qoN91qoN91hfK8kM]J8kDTG8P)KF8P)KF8OuBC
84Z9B84Z9B84Z6@7n6'>7n6'>7n6$<7Rfj:7Rfj:7Rfg877BX677BX677BU46psF26psF26psF26psC0
6UO4.6UO4.6UO4-6:+"*6:+"*6:+")5s[e&5s[e&5s[e%5X7S"5X7S"5X7S!5<h@s5<h@s5<h@r5!D.o
5!D.o5!D.o4Ztqk4Ztqk4Ztqk4?P_g4?P_g4?P_g4$,Mc4$,Mc4$,Mc3]];_3]];_3B9)[3B9)[3&ilW
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
177.865 274.925 mo
164.925 267.454 li
211.567 241.6 li
223.577 248.534 li
177.865 274.925 li
.128542 .134859 .192325 0 cmyk
f
280.307 41.0871 mo
279.898 40.9274 279.41 40.9646 278.915 41.2389 cv
101.17 139.765 li
100.023 140.401 99.2591 142.038 99.459 143.403 cv
120.675 288.223 li
120.787 288.986 121.178 289.513 121.702 289.717 cv
122.834 290.16 li
281.44 41.5297 li
280.307 41.0871 li
.0390326 .32462 0 0 cmyk
f
121.896 129.346 mo
102.302 140.207 li
101.885 140.438 101.547 140.827 101.259 141.261 cv
121.896 129.346 li
cp
.0582589 .064271 .110231 0 cmyk
f
118.241 264.318 mo
121.808 288.665 li
122.007 290.03 123.101 290.638 124.247 290.002 cv
301.993 191.476 li
303.122 190.851 303.886 189.213 303.686 187.848 cv
300.006 162.726 li
299.788 161.245 298.146 160.45 296.849 161.198 cv
118.241 264.318 li
f
282.47 43.0283 mo
282.27 41.6635 281.177 41.0555 280.048 41.6813 cv
102.302 140.207 li
101.155 140.843 100.392 142.48 100.592 143.845 cv
118.759 267.854 li
300.071 163.173 li
282.47 43.0283 li
.257023 .623712 .0386053 0 cmyk
f
216.883 222.51 mo
216.735 221.906 216.746 221.27 216.845 220.636 cv
216.496 220.709 216.143 220.818 215.789 221.011 cv
213.791 222.096 212.604 224.734 213.138 226.904 cv
213.672 229.074 215.724 229.954 217.722 228.869 cv
219.164 228.086 220.156 226.49 220.411 224.85 cv
218.792 225.187 217.323 224.296 216.883 222.51 cv
cp
.181582 .527123 0 0 cmyk
f
201.252 304.449 mo
201.245 306.998 li
201.244 307.454 201.545 307.909 202.14 308.253 cv
233.401 326.301 li
234.599 326.993 236.509 326.993 237.699 326.301 cv
329.963 272.683 li
330.554 272.339 330.85 271.893 330.852 271.447 cv
330.859 268.898 li
201.252 304.449 li
cp
level3{
gsave
clp
[129.614 0 0 129.614 201.245 297.859 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[129.614 0 0 129.614 201.245 297.859 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
329.956 267.645 mo
331.154 268.336 331.161 269.443 329.971 270.134 cv
237.706 323.752 li
236.516 324.444 234.606 324.444 233.408 323.752 cv
202.147 305.704 li
200.969 305.024 200.943 303.906 202.133 303.214 cv
294.397 249.596 li
295.588 248.905 297.518 248.916 298.695 249.596 cv
329.956 267.645 li
cp
0 .01944 .0471199 0 cmyk
f
301.152 261.669 mo
296.354 258.899 li
295.83 258.597 294.981 258.597 294.458 258.899 cv
283.476 265.239 li
283.181 265.41 283.071 265.638 283.109 265.861 cv
283.109 266.009 li
283.109 266.157 li
283.071 266.379 283.181 266.608 283.476 266.778 cv
293.048 272.304 li
293.571 272.606 294.42 272.606 294.944 272.304 cv
313.16 261.787 li
313.455 261.616 313.566 261.388 313.528 261.165 cv
313.528 261.017 li
313.528 260.869 li
313.566 260.647 313.455 260.418 313.16 260.248 cv
309.598 258.191 li
309.25 257.991 308.688 257.989 308.337 258.189 cv
302.217 261.671 li
301.921 261.84 301.446 261.839 301.152 261.669 cv
cp
246.705 280.461 mo
250.35 282.566 li
250.771 282.809 251.454 282.809 251.875 282.566 cv
256.209 280.064 li
256.453 279.923 256.539 279.733 256.5 279.549 cv
256.5 279.401 li
256.5 279.253 li
256.539 279.07 256.453 278.88 256.209 278.739 cv
252.564 276.635 li
252.143 276.392 251.461 276.392 251.039 276.635 cv
246.705 279.137 li
246.461 279.278 246.376 279.468 246.414 279.651 cv
246.414 279.799 li
246.414 279.947 li
246.376 280.131 246.461 280.321 246.705 280.461 cv
cp
253.703 276.421 mo
257.348 278.526 li
257.769 278.769 258.451 278.769 258.872 278.526 cv
263.207 276.024 li
263.45 275.883 263.536 275.693 263.497 275.509 cv
263.497 275.361 li
263.497 275.213 li
263.536 275.03 263.45 274.84 263.207 274.699 cv
259.562 272.595 li
259.141 272.351 258.458 272.351 258.037 272.595 cv
253.703 275.097 li
253.459 275.238 253.373 275.428 253.412 275.611 cv
253.412 275.759 li
253.412 275.907 li
253.373 276.091 253.459 276.281 253.703 276.421 cv
cp
239.708 284.502 mo
243.353 286.606 li
243.774 286.849 244.456 286.849 244.878 286.606 cv
249.212 284.104 li
249.455 283.963 249.541 283.773 249.503 283.589 cv
249.503 283.441 li
249.503 283.293 li
249.541 283.11 249.455 282.92 249.212 282.779 cv
245.567 280.675 li
245.146 280.432 244.463 280.432 244.042 280.675 cv
239.708 283.177 li
239.464 283.318 239.378 283.508 239.417 283.691 cv
239.417 283.839 li
239.417 283.987 li
239.378 284.171 239.464 284.361 239.708 284.502 cv
cp
218.715 296.622 mo
222.36 298.726 li
222.781 298.969 223.464 298.969 223.885 298.726 cv
228.219 296.224 li
228.463 296.083 228.549 295.893 228.51 295.709 cv
228.51 295.561 li
228.51 295.413 li
228.549 295.23 228.463 295.04 228.219 294.899 cv
224.574 292.795 li
224.153 292.552 223.471 292.552 223.05 292.795 cv
218.715 295.297 li
218.472 295.438 218.386 295.628 218.425 295.811 cv
218.425 295.959 li
218.425 296.107 li
218.386 296.291 218.472 296.481 218.715 296.622 cv
cp
232.71 288.542 mo
237.963 291.574 236.147 291.647 242.214 288.144 cv
242.458 288.003 242.544 287.813 242.505 287.629 cv
242.505 287.481 li
242.505 287.333 li
242.544 287.15 242.458 286.96 242.214 286.819 cv
238.569 284.715 li
238.148 284.472 237.466 284.472 237.045 284.715 cv
232.71 287.217 li
232.467 287.358 232.381 287.548 232.419 287.731 cv
232.419 287.879 li
232.419 288.027 li
232.381 288.211 232.467 288.401 232.71 288.542 cv
cp
225.713 292.582 mo
229.358 294.686 li
229.779 294.929 230.462 294.929 230.883 294.686 cv
235.217 292.184 li
235.461 292.043 235.546 291.853 235.508 291.669 cv
235.508 291.521 li
235.508 291.373 li
235.546 291.19 235.461 291 235.217 290.859 cv
231.572 288.755 li
231.151 288.512 230.468 288.512 230.047 288.755 cv
225.713 291.257 li
225.469 291.398 225.383 291.588 225.422 291.771 cv
225.422 291.919 li
225.422 292.067 li
225.383 292.251 225.469 292.441 225.713 292.582 cv
cp
308.403 272.089 mo
312.737 269.586 li
312.981 269.445 313.067 269.255 313.028 269.072 cv
313.028 268.924 li
313.028 268.776 li
313.067 268.593 312.981 268.403 312.737 268.262 cv
309.092 266.157 li
308.671 265.914 307.989 265.914 307.568 266.157 cv
303.233 268.66 li
302.99 268.801 302.904 268.991 302.943 269.174 cv
302.943 269.322 li
302.943 269.47 li
302.904 269.653 302.99 269.843 303.233 269.984 cv
306.878 272.089 li
307.299 272.332 307.982 272.332 308.403 272.089 cv
cp
297.167 257.759 mo
297.167 257.907 li
297.167 258.055 li
297.129 258.239 297.214 258.429 297.458 258.57 cv
301.103 260.674 li
301.524 260.917 302.207 260.917 302.628 260.674 cv
306.962 258.172 li
307.206 258.031 307.291 257.841 307.253 257.657 cv
307.253 257.509 li
307.253 257.361 li
307.291 257.178 307.206 256.988 306.962 256.847 cv
303.317 254.743 li
302.896 254.5 302.213 254.5 301.792 254.743 cv
297.458 257.245 li
297.214 257.386 297.129 257.576 297.167 257.759 cv
cp
277.082 262.965 mo
280.727 265.07 li
281.148 265.313 281.831 265.313 282.252 265.07 cv
286.586 262.568 li
286.83 262.427 286.915 262.237 286.877 262.053 cv
286.877 261.905 li
286.877 261.757 li
286.915 261.574 286.83 261.384 286.586 261.243 cv
282.941 259.139 li
282.52 258.895 281.837 258.895 281.416 259.139 cv
277.082 261.641 li
276.838 261.782 276.752 261.972 276.791 262.155 cv
276.791 262.303 li
276.791 262.451 li
276.752 262.635 276.838 262.825 277.082 262.965 cv
cp
267.697 268.341 mo
271.342 270.446 li
271.763 270.689 272.446 270.689 272.867 270.446 cv
279.457 266.641 li
279.701 266.5 279.787 266.31 279.748 266.127 cv
279.748 265.979 li
279.748 265.831 li
279.787 265.647 279.701 265.457 279.457 265.317 cv
275.812 263.212 li
275.391 262.969 274.709 262.969 274.288 263.212 cv
267.697 267.017 li
267.454 267.158 267.368 267.348 267.407 267.531 cv
267.407 267.679 li
267.407 267.827 li
267.368 268.011 267.454 268.201 267.697 268.341 cv
cp
284.079 258.925 mo
287.724 261.03 li
288.145 261.273 288.828 261.273 289.249 261.03 cv
293.583 258.527 li
293.827 258.387 293.913 258.197 293.874 258.013 cv
293.874 257.865 li
293.874 257.717 li
293.913 257.534 293.827 257.344 293.583 257.203 cv
289.938 255.099 li
289.517 254.855 288.835 254.855 288.414 255.099 cv
284.079 257.601 li
283.836 257.742 283.75 257.932 283.788 258.115 cv
283.788 258.263 li
283.788 258.411 li
283.75 258.595 283.836 258.785 284.079 258.925 cv
cp
291.077 254.885 mo
294.722 256.99 li
295.143 257.233 295.825 257.233 296.246 256.99 cv
300.581 254.487 li
300.825 254.347 300.91 254.157 300.872 253.973 cv
300.872 253.825 li
300.872 253.677 li
300.91 253.494 300.825 253.304 300.581 253.163 cv
296.936 251.059 li
296.515 250.815 295.832 250.815 295.411 251.059 cv
291.077 253.561 li
290.833 253.702 290.747 253.892 290.786 254.075 cv
290.786 254.223 li
290.786 254.371 li
290.747 254.555 290.833 254.745 291.077 254.885 cv
cp
301.406 276.129 mo
305.74 273.626 li
305.984 273.486 306.069 273.296 306.031 273.112 cv
306.031 272.964 li
306.031 272.816 li
306.069 272.633 305.984 272.443 305.74 272.302 cv
302.095 270.197 li
301.674 269.954 300.991 269.954 300.57 270.197 cv
296.236 272.7 li
295.992 272.84 295.907 273.031 295.945 273.214 cv
295.945 273.362 li
295.945 273.51 li
295.907 273.693 295.992 273.884 296.236 274.024 cv
299.881 276.129 li
300.302 276.372 300.985 276.372 301.406 276.129 cv
cp
304.82 280.008 mo
301.175 277.904 li
300.754 277.661 300.072 277.661 299.651 277.904 cv
293.06 281.709 li
292.817 281.849 292.731 282.04 292.77 282.223 cv
292.77 282.371 li
292.77 282.519 li
292.731 282.702 292.817 282.893 293.06 283.033 cv
296.705 285.138 li
297.126 285.381 297.809 285.381 298.23 285.138 cv
304.82 281.333 li
305.064 281.192 305.15 281.002 305.111 280.819 cv
305.111 280.671 li
305.111 280.523 li
305.15 280.339 305.064 280.149 304.82 280.008 cv
cp
295.724 285.333 mo
292.079 283.228 li
291.658 282.985 290.975 282.985 290.554 283.228 cv
258.147 301.939 li
257.903 302.08 257.817 302.27 257.856 302.453 cv
257.856 302.601 li
257.856 302.749 li
257.817 302.933 257.903 303.123 258.147 303.263 cv
261.791 305.368 li
262.212 305.611 262.895 305.611 263.316 305.368 cv
295.724 286.657 li
295.968 286.517 296.053 286.326 296.015 286.143 cv
296.015 285.995 li
296.015 285.847 li
296.053 285.664 295.968 285.474 295.724 285.333 cv
cp
211.718 300.662 mo
215.363 302.766 li
215.784 303.009 216.467 303.009 216.888 302.766 cv
221.222 300.264 li
221.466 300.123 221.551 299.933 221.513 299.749 cv
221.513 299.601 li
221.513 299.453 li
221.551 299.27 221.466 299.08 221.222 298.939 cv
217.577 296.835 li
217.156 296.592 216.473 296.592 216.052 296.835 cv
211.718 299.337 li
211.474 299.478 211.389 299.668 211.427 299.851 cv
211.427 299.999 li
211.427 300.147 li
211.389 300.331 211.474 300.521 211.718 300.662 cv
cp
260.622 305.527 mo
256.977 303.422 li
256.556 303.179 255.873 303.179 255.452 303.422 cv
251.118 305.925 li
250.874 306.066 250.788 306.256 250.827 306.439 cv
250.827 306.587 li
250.827 306.735 li
250.788 306.918 250.874 307.108 251.118 307.249 cv
254.763 309.354 li
255.184 309.597 255.866 309.597 256.287 309.354 cv
260.622 306.851 li
260.866 306.711 260.951 306.52 260.913 306.337 cv
260.913 306.189 li
260.913 306.041 li
260.951 305.858 260.866 305.668 260.622 305.527 cv
cp
319.134 271.955 mo
315.489 269.851 li
315.068 269.608 314.386 269.608 313.965 269.851 cv
309.63 272.353 li
309.387 272.494 309.301 272.684 309.339 272.867 cv
309.339 273.015 li
309.339 273.163 li
309.301 273.347 309.387 273.537 309.63 273.678 cv
313.275 275.782 li
313.696 276.025 314.379 276.025 314.8 275.782 cv
319.134 273.28 li
319.378 273.139 319.464 272.949 319.425 272.765 cv
319.425 272.617 li
319.425 272.469 li
319.464 272.286 319.378 272.096 319.134 271.955 cv
cp
312.137 275.995 mo
308.492 273.891 li
308.071 273.648 307.388 273.648 306.967 273.891 cv
302.633 276.393 li
302.389 276.534 302.304 276.724 302.342 276.907 cv
302.342 277.055 li
302.342 277.203 li
302.304 277.387 302.389 277.577 302.633 277.718 cv
306.278 279.822 li
306.699 280.065 307.382 280.065 307.803 279.822 cv
312.137 277.32 li
312.381 277.179 312.466 276.989 312.428 276.805 cv
312.428 276.657 li
312.428 276.509 li
312.466 276.326 312.381 276.136 312.137 275.995 cv
cp
326.132 267.915 mo
322.487 265.811 li
322.066 265.568 321.383 265.568 320.962 265.811 cv
316.628 268.313 li
316.384 268.454 316.298 268.644 316.337 268.827 cv
316.337 268.975 li
316.337 269.123 li
316.298 269.307 316.384 269.497 316.628 269.638 cv
320.273 271.742 li
320.694 271.985 321.376 271.985 321.798 271.742 cv
326.132 269.24 li
326.376 269.099 326.461 268.909 326.423 268.725 cv
326.423 268.577 li
326.423 268.429 li
326.461 268.246 326.376 268.056 326.132 267.915 cv
cp
223.288 306.141 mo
223.288 305.993 li
223.288 305.845 li
223.327 305.662 223.241 305.472 222.998 305.331 cv
219.353 303.226 li
218.931 302.983 218.249 302.983 217.828 303.226 cv
211.238 307.031 li
210.994 307.172 210.908 307.362 210.947 307.546 cv
210.947 307.693 li
210.947 307.842 li
210.908 308.025 210.994 308.215 211.238 308.356 cv
214.883 310.46 li
215.304 310.703 215.986 310.703 216.407 310.46 cv
222.998 306.655 li
223.241 306.515 223.327 306.324 223.288 306.141 cv
cp
227.231 311.131 mo
227.231 310.983 li
227.231 310.835 li
227.269 310.651 227.184 310.461 226.94 310.321 cv
223.295 308.216 li
222.874 307.973 222.191 307.973 221.77 308.216 cv
217.436 310.719 li
217.192 310.859 217.107 311.049 217.145 311.233 cv
217.145 311.381 li
217.145 311.529 li
217.107 311.712 217.192 311.902 217.436 312.043 cv
221.081 314.147 li
221.502 314.391 222.185 314.391 222.606 314.147 cv
226.94 311.645 li
227.184 311.504 227.269 311.314 227.231 311.131 cv
cp
214.515 303.789 mo
214.515 303.642 li
214.515 303.493 li
214.554 303.31 214.468 303.12 214.225 302.979 cv
210.58 300.875 li
210.159 300.632 209.476 300.632 209.055 300.875 cv
204.721 303.377 li
204.477 303.518 204.391 303.708 204.43 303.891 cv
204.43 304.039 li
204.43 304.188 li
204.391 304.371 204.477 304.561 204.721 304.702 cv
208.366 306.806 li
208.787 307.049 209.469 307.049 209.89 306.806 cv
214.225 304.304 li
214.468 304.163 214.554 303.973 214.515 303.789 cv
cp
253.624 309.567 mo
249.979 307.462 li
249.558 307.219 248.876 307.219 248.454 307.462 cv
244.12 309.965 li
243.876 310.106 243.791 310.296 243.829 310.479 cv
243.829 310.627 li
243.829 310.775 li
243.791 310.958 243.876 311.149 244.12 311.289 cv
247.765 313.394 li
248.186 313.637 248.869 313.637 249.29 313.394 cv
253.624 310.891 li
253.868 310.751 253.954 310.561 253.915 310.377 cv
253.915 310.229 li
253.915 310.081 li
253.954 309.898 253.868 309.708 253.624 309.567 cv
cp
236.004 313.482 mo
236.004 313.335 li
236.004 313.186 li
236.042 313.003 235.957 312.813 235.713 312.672 cv
232.068 310.568 li
231.647 310.325 230.964 310.325 230.543 310.568 cv
223.953 314.373 li
223.709 314.513 223.624 314.704 223.662 314.887 cv
223.662 315.035 li
223.662 315.183 li
223.624 315.366 223.709 315.556 223.953 315.697 cv
227.598 317.802 li
228.019 318.045 228.702 318.045 229.123 317.802 cv
235.713 313.997 li
235.957 313.856 236.042 313.666 236.004 313.482 cv
cp
246.627 313.607 mo
242.982 311.502 li
242.561 311.259 241.878 311.259 241.457 311.502 cv
237.123 314.005 li
236.879 314.146 236.794 314.336 236.832 314.519 cv
236.832 314.667 li
236.832 314.815 li
236.794 314.998 236.879 315.189 237.123 315.329 cv
240.768 317.434 li
241.189 317.677 241.872 317.677 242.293 317.434 cv
246.627 314.931 li
246.871 314.791 246.956 314.601 246.918 314.417 cv
246.918 314.269 li
246.918 314.121 li
246.956 313.938 246.871 313.748 246.627 313.607 cv
cp
239.629 317.647 mo
235.984 315.542 li
235.563 315.299 234.881 315.299 234.46 315.542 cv
230.125 318.045 li
229.882 318.186 229.796 318.376 229.835 318.559 cv
229.835 318.707 li
229.835 318.855 li
229.796 319.038 229.882 319.229 230.125 319.369 cv
233.77 321.474 li
234.191 321.717 234.874 321.717 235.295 321.474 cv
239.629 318.971 li
239.873 318.831 239.959 318.641 239.92 318.457 cv
239.92 318.309 li
239.92 318.161 li
239.959 317.978 239.873 317.788 239.629 317.647 cv
cp
260.7 272.382 mo
264.345 274.486 li
264.766 274.729 265.449 274.729 265.87 274.486 cv
270.204 271.984 li
270.448 271.843 270.533 271.653 270.495 271.469 cv
270.495 271.321 li
270.495 271.173 li
270.533 270.99 270.448 270.8 270.204 270.659 cv
266.559 268.555 li
266.138 268.311 265.455 268.311 265.034 268.555 cv
260.7 271.057 li
260.456 271.198 260.371 271.388 260.409 271.571 cv
260.409 271.719 li
260.409 271.867 li
260.371 272.051 260.456 272.241 260.7 272.382 cv
cp
285.974 268.971 mo
282.329 266.866 li
281.908 266.623 281.226 266.623 280.805 266.866 cv
276.47 269.369 li
276.227 269.509 276.141 269.699 276.179 269.883 cv
276.179 270.031 li
276.179 270.179 li
276.141 270.362 276.227 270.552 276.47 270.693 cv
280.115 272.798 li
280.536 273.041 281.219 273.041 281.64 272.798 cv
285.974 270.295 li
286.218 270.154 286.304 269.964 286.265 269.781 cv
286.265 269.633 li
286.265 269.485 li
286.304 269.302 286.218 269.111 285.974 268.971 cv
cp
285.583 277.787 mo
292.173 273.982 li
292.417 273.842 292.502 273.652 292.464 273.468 cv
292.464 273.32 li
292.464 273.172 li
292.502 272.989 292.417 272.799 292.173 272.658 cv
288.528 270.553 li
288.107 270.31 287.424 270.31 287.003 270.553 cv
280.413 274.358 li
280.169 274.499 280.083 274.689 280.122 274.873 cv
280.122 275.021 li
280.122 275.169 li
280.083 275.352 280.169 275.542 280.413 275.683 cv
284.058 277.787 li
284.479 278.03 285.162 278.03 285.583 277.787 cv
cp
252.815 283.026 mo
248.481 285.529 li
248.237 285.67 248.151 285.86 248.19 286.043 cv
248.19 286.191 li
248.19 286.339 li
248.151 286.522 248.237 286.712 248.481 286.853 cv
252.058 288.919 252.679 289.519 253.65 288.958 cv
257.985 286.455 li
258.228 286.314 258.314 286.124 258.275 285.941 cv
258.275 285.793 li
258.275 285.645 li
258.314 285.461 258.228 285.272 257.985 285.131 cv
254.34 283.026 li
253.919 282.783 253.236 282.783 252.815 283.026 cv
cp
273.807 270.906 mo
269.473 273.409 li
269.229 273.549 269.143 273.739 269.182 273.923 cv
269.182 274.071 li
269.182 274.219 li
269.143 274.402 269.229 274.592 269.473 274.733 cv
273.118 276.838 li
273.539 277.081 274.222 277.081 274.643 276.838 cv
278.977 274.335 li
279.221 274.194 279.306 274.004 279.268 273.821 cv
279.268 273.673 li
279.268 273.525 li
279.306 273.342 279.221 273.151 278.977 273.011 cv
275.332 270.906 li
274.911 270.663 274.228 270.663 273.807 270.906 cv
cp
278.585 281.827 mo
282.919 279.325 li
283.163 279.184 283.249 278.994 283.21 278.811 cv
283.21 278.663 li
283.21 278.515 li
283.249 278.331 283.163 278.141 282.919 278 cv
279.275 275.896 li
278.853 275.653 278.171 275.653 277.75 275.896 cv
273.416 278.398 li
273.172 278.539 273.086 278.729 273.125 278.913 cv
273.125 279.061 li
273.125 279.209 li
273.086 279.392 273.172 279.582 273.416 279.723 cv
277.06 281.827 li
277.482 282.07 278.164 282.07 278.585 281.827 cv
cp
266.81 274.946 mo
262.475 277.449 li
262.232 277.589 262.146 277.78 262.185 277.963 cv
262.185 278.111 li
262.185 278.259 li
262.146 278.442 262.232 278.632 262.475 278.773 cv
266.12 280.878 li
266.541 281.121 267.224 281.121 267.645 280.878 cv
271.979 278.375 li
272.223 278.234 272.309 278.044 272.27 277.861 cv
272.27 277.713 li
272.27 277.565 li
272.309 277.382 272.223 277.192 271.979 277.051 cv
268.335 274.946 li
267.913 274.703 267.231 274.703 266.81 274.946 cv
cp
259.812 278.986 mo
255.478 281.489 li
255.234 281.629 255.149 281.82 255.187 282.003 cv
255.187 282.151 li
255.187 282.299 li
255.149 282.482 255.234 282.672 255.478 282.813 cv
259.123 284.918 li
259.544 285.161 260.227 285.161 260.648 284.918 cv
264.982 282.415 li
265.226 282.274 265.311 282.084 265.273 281.901 cv
265.273 281.753 li
265.273 281.605 li
265.311 281.422 265.226 281.232 264.982 281.091 cv
261.337 278.986 li
260.916 278.743 260.233 278.743 259.812 278.986 cv
cp
237.29 300.136 mo
236.869 299.893 236.186 299.893 235.765 300.136 cv
231.431 302.638 li
231.187 302.779 231.102 302.969 231.14 303.153 cv
231.14 303.301 li
231.14 303.449 li
231.102 303.632 231.187 303.822 231.431 303.963 cv
235.076 306.067 li
235.497 306.311 236.18 306.311 236.601 306.067 cv
240.935 303.565 li
241.179 303.424 241.264 303.234 241.226 303.051 cv
241.226 302.903 li
241.226 302.755 li
241.264 302.571 241.179 302.381 240.935 302.241 cv
237.29 300.136 li
cp
243.598 302.027 mo
247.932 299.525 li
248.176 299.384 248.262 299.194 248.223 299.011 cv
248.223 298.863 li
248.223 298.715 li
248.262 298.531 248.176 298.341 247.932 298.201 cv
244.287 296.096 li
243.866 295.853 243.184 295.853 242.763 296.096 cv
238.428 298.598 li
238.185 298.739 238.099 298.929 238.138 299.113 cv
238.138 299.261 li
238.138 299.409 li
238.099 299.592 238.185 299.782 238.428 299.923 cv
242.073 302.027 li
242.494 302.27 243.177 302.27 243.598 302.027 cv
cp
309.94 265.134 mo
309.94 265.282 li
309.94 265.43 li
309.902 265.613 309.987 265.803 310.231 265.944 cv
313.876 268.049 li
314.297 268.292 314.98 268.292 315.401 268.049 cv
319.735 265.546 li
319.979 265.406 320.064 265.215 320.026 265.032 cv
320.026 264.884 li
320.026 264.736 li
320.064 264.553 319.979 264.362 319.735 264.222 cv
316.09 262.117 li
315.669 261.874 314.986 261.874 314.565 262.117 cv
310.231 264.62 li
309.987 264.76 309.902 264.951 309.94 265.134 cv
cp
257.593 293.947 mo
261.927 291.445 li
262.171 291.304 262.257 291.114 262.218 290.931 cv
262.218 290.783 li
262.218 290.635 li
262.257 290.451 262.171 290.261 261.927 290.12 cv
258.282 288.016 li
257.861 287.773 257.178 287.773 256.757 288.016 cv
252.423 290.518 li
252.179 290.659 252.094 290.849 252.132 291.033 cv
252.132 291.181 li
252.132 291.329 li
252.094 291.512 252.179 291.702 252.423 291.843 cv
256.068 293.947 li
256.489 294.19 257.172 294.19 257.593 293.947 cv
cp
264.59 289.907 mo
268.925 287.405 li
269.168 287.264 269.254 287.074 269.215 286.891 cv
269.215 286.743 li
269.215 286.595 li
269.254 286.411 269.168 286.221 268.925 286.08 cv
265.28 283.976 li
264.859 283.733 264.176 283.733 263.755 283.976 cv
259.421 286.478 li
259.177 286.619 259.091 286.809 259.13 286.993 cv
259.13 287.141 li
259.13 287.289 li
259.091 287.472 259.177 287.662 259.421 287.803 cv
263.066 289.907 li
263.487 290.15 264.169 290.15 264.59 289.907 cv
cp
271.588 285.867 mo
275.922 283.365 li
276.166 283.224 276.251 283.034 276.213 282.851 cv
276.213 282.703 li
276.213 282.555 li
276.251 282.371 276.166 282.181 275.922 282.04 cv
272.277 279.936 li
271.856 279.693 271.173 279.693 270.752 279.936 cv
266.418 282.438 li
266.174 282.579 266.089 282.769 266.127 282.953 cv
266.127 283.101 li
266.127 283.249 li
266.089 283.432 266.174 283.622 266.418 283.763 cv
270.063 285.867 li
270.484 286.11 271.167 286.11 271.588 285.867 cv
cp
250.595 297.987 mo
254.93 295.485 li
255.174 295.344 255.259 295.154 255.221 294.971 cv
255.221 294.823 li
255.221 294.675 li
255.259 294.491 255.174 294.301 254.93 294.16 cv
251.285 292.056 li
250.864 291.813 250.181 291.813 249.76 292.056 cv
245.426 294.558 li
245.182 294.699 245.096 294.889 245.135 295.073 cv
245.135 295.221 li
245.135 295.369 li
245.096 295.552 245.182 295.742 245.426 295.883 cv
249.071 297.987 li
249.492 298.23 250.174 298.23 250.595 297.987 cv
cp
224.825 299.186 mo
220.491 301.689 li
220.247 301.829 220.162 302.02 220.2 302.203 cv
220.2 302.351 li
220.2 302.499 li
220.162 302.682 220.247 302.873 220.491 303.013 cv
224.136 305.118 li
224.557 305.361 225.24 305.361 225.661 305.118 cv
229.995 302.615 li
230.239 302.475 230.324 302.285 230.286 302.101 cv
230.286 301.953 li
230.286 301.805 li
230.324 301.622 230.239 301.432 229.995 301.291 cv
226.35 299.186 li
225.929 298.943 225.246 298.943 224.825 299.186 cv
cp
266.366 296.299 mo
270.7 293.797 li
270.944 293.656 271.029 293.466 270.991 293.282 cv
270.991 293.134 li
270.991 292.986 li
271.029 292.803 270.944 292.613 270.7 292.472 cv
267.055 290.368 li
266.634 290.125 265.951 290.125 265.53 290.368 cv
261.196 292.87 li
260.952 293.011 260.867 293.201 260.905 293.384 cv
260.905 293.532 li
260.905 293.68 li
260.867 293.864 260.952 294.054 261.196 294.195 cv
264.841 296.299 li
265.262 296.542 265.945 296.542 266.366 296.299 cv
cp
259.368 300.339 mo
263.703 297.837 li
263.946 297.696 264.032 297.506 263.994 297.322 cv
263.994 297.174 li
263.994 297.026 li
264.032 296.843 263.946 296.653 263.703 296.512 cv
260.058 294.408 li
259.637 294.165 258.954 294.165 258.533 294.408 cv
254.199 296.91 li
253.955 297.051 253.869 297.241 253.908 297.424 cv
253.908 297.572 li
253.908 297.72 li
253.869 297.904 253.955 298.094 254.199 298.235 cv
257.844 300.339 li
258.265 300.582 258.947 300.582 259.368 300.339 cv
cp
287.358 284.179 mo
291.692 281.677 li
291.936 281.536 292.022 281.346 291.983 281.162 cv
291.983 281.014 li
291.983 280.866 li
292.022 280.683 291.936 280.493 291.692 280.352 cv
288.047 278.248 li
287.626 278.005 286.944 278.005 286.523 278.248 cv
282.188 280.75 li
281.945 280.891 281.859 281.081 281.898 281.264 cv
281.898 281.412 li
281.898 281.56 li
281.859 281.744 281.945 281.934 282.188 282.074 cv
285.833 284.179 li
286.254 284.422 286.937 284.422 287.358 284.179 cv
cp
252.371 304.379 mo
256.705 301.877 li
256.949 301.736 257.035 301.546 256.996 301.362 cv
256.996 301.214 li
256.996 301.066 li
257.035 300.883 256.949 300.693 256.705 300.552 cv
253.06 298.448 li
252.639 298.205 251.956 298.205 251.536 298.448 cv
247.201 300.95 li
246.957 301.091 246.872 301.281 246.91 301.464 cv
246.91 301.612 li
246.91 301.76 li
246.872 301.944 246.957 302.134 247.201 302.275 cv
250.846 304.379 li
251.267 304.622 251.95 304.622 252.371 304.379 cv
cp
273.363 292.259 mo
277.697 289.757 li
277.941 289.616 278.027 289.426 277.988 289.242 cv
277.988 289.094 li
277.988 288.946 li
278.027 288.763 277.941 288.573 277.697 288.432 cv
274.053 286.328 li
273.632 286.085 272.949 286.085 272.528 286.328 cv
268.194 288.83 li
267.95 288.971 267.864 289.161 267.903 289.344 cv
267.903 289.492 li
267.903 289.64 li
267.864 289.824 267.95 290.014 268.194 290.154 cv
271.838 292.259 li
272.26 292.502 272.942 292.502 273.363 292.259 cv
cp
245.817 287.066 mo
241.483 289.569 li
241.239 289.71 241.154 289.9 241.192 290.083 cv
241.192 290.231 li
241.192 290.379 li
241.154 290.562 241.239 290.752 241.483 290.893 cv
245.128 292.998 li
245.549 293.241 246.232 293.241 246.653 292.998 cv
250.987 290.495 li
251.231 290.355 251.317 290.164 251.278 289.981 cv
251.278 289.833 li
251.278 289.685 li
251.317 289.502 251.231 289.311 250.987 289.171 cv
247.342 287.066 li
246.921 286.823 246.239 286.823 245.817 287.066 cv
cp
280.361 288.219 mo
284.695 285.717 li
284.939 285.576 285.024 285.386 284.986 285.202 cv
284.986 285.054 li
284.986 284.906 li
285.024 284.723 284.939 284.533 284.695 284.392 cv
281.05 282.288 li
280.629 282.045 279.946 282.045 279.525 282.288 cv
275.191 284.79 li
274.947 284.931 274.862 285.121 274.9 285.304 cv
274.9 285.452 li
274.9 285.6 li
274.862 285.784 274.947 285.974 275.191 286.115 cv
278.836 288.219 li
279.257 288.462 279.94 288.462 280.361 288.219 cv
cp
231.823 295.146 mo
227.488 297.649 li
227.245 297.79 227.159 297.98 227.197 298.163 cv
227.197 298.311 li
227.197 298.459 li
227.159 298.642 227.245 298.833 227.488 298.973 cv
231.133 301.078 li
231.554 301.321 232.237 301.321 232.658 301.078 cv
236.992 298.575 li
237.236 298.435 237.322 298.245 237.283 298.061 cv
237.283 297.913 li
237.283 297.765 li
237.322 297.582 237.236 297.392 236.992 297.251 cv
233.347 295.146 li
232.926 294.903 232.244 294.903 231.823 295.146 cv
cp
245.374 308.419 mo
249.708 305.917 li
249.952 305.776 250.037 305.586 249.999 305.402 cv
249.999 305.254 li
249.999 305.106 li
250.037 304.923 249.952 304.733 249.708 304.592 cv
246.063 302.488 li
245.642 302.245 244.959 302.245 244.538 302.488 cv
240.204 304.99 li
239.96 305.131 239.874 305.321 239.913 305.504 cv
239.913 305.652 li
239.913 305.8 li
239.874 305.984 239.96 306.174 240.204 306.315 cv
243.849 308.419 li
244.27 308.662 244.952 308.662 245.374 308.419 cv
cp
294.356 280.139 mo
298.69 277.636 li
298.934 277.496 299.019 277.306 298.981 277.122 cv
298.981 276.974 li
298.981 276.826 li
299.019 276.643 298.934 276.453 298.69 276.312 cv
295.045 274.208 li
294.624 273.964 293.941 273.964 293.52 274.208 cv
289.186 276.71 li
288.942 276.851 288.856 277.041 288.895 277.224 cv
288.895 277.372 li
288.895 277.52 li
288.856 277.704 288.942 277.894 289.186 278.035 cv
292.831 280.139 li
293.252 280.382 293.934 280.382 294.356 280.139 cv
cp
234.486 293.609 mo
234.242 293.75 234.156 293.94 234.195 294.123 cv
234.195 294.271 li
234.195 294.419 li
234.156 294.602 234.242 294.792 234.486 294.933 cv
238.131 297.038 li
238.552 297.281 239.234 297.281 239.656 297.038 cv
243.99 294.535 li
244.234 294.395 244.319 294.204 244.281 294.021 cv
244.281 293.873 li
244.281 293.725 li
244.319 293.542 244.234 293.351 243.99 293.211 cv
238.627 290.115 240.439 290.172 234.486 293.609 cv
cp
224.434 308.003 mo
228.078 310.107 li
228.5 310.351 229.182 310.351 229.603 310.107 cv
233.938 307.605 li
234.181 307.464 234.267 307.274 234.228 307.091 cv
234.228 306.943 li
234.228 306.795 li
234.267 306.611 234.181 306.421 233.938 306.281 cv
230.293 304.176 li
229.871 303.933 229.189 303.933 228.768 304.176 cv
224.434 306.679 li
224.19 306.819 224.104 307.009 224.143 307.193 cv
224.143 307.341 li
224.143 307.489 li
224.104 307.672 224.19 307.862 224.434 308.003 cv
cp
232.916 309.84 mo
232.916 309.692 li
232.916 309.544 li
232.877 309.361 232.963 309.171 233.206 309.03 cv
237.541 306.528 li
237.962 306.285 238.644 306.285 239.065 306.528 cv
242.71 308.632 li
242.954 308.773 243.04 308.963 243.001 309.146 cv
243.001 309.294 li
243.001 309.443 li
243.04 309.626 242.954 309.816 242.71 309.957 cv
238.376 312.459 li
237.955 312.702 237.272 312.702 236.851 312.459 cv
233.206 310.355 li
232.963 310.214 232.877 310.024 232.916 309.84 cv
cp
.0582589 .064271 .110231 0 cmyk
f
313.16 260.056 mo
309.598 257.999 li
309.25 257.798 308.687 257.797 308.337 257.996 cv
302.217 261.479 li
301.921 261.647 301.446 261.646 301.152 261.477 cv
296.354 258.706 li
295.83 258.404 294.981 258.404 294.458 258.706 cv
283.476 265.047 li
282.953 265.349 282.953 265.839 283.476 266.141 cv
293.048 271.668 li
293.572 271.97 294.42 271.97 294.944 271.668 cv
313.16 261.15 li
313.684 260.848 313.684 260.358 313.16 260.056 cv
cp
306.962 256.655 mo
303.317 254.55 li
302.896 254.307 302.213 254.307 301.792 254.55 cv
297.458 257.053 li
297.037 257.296 297.037 257.69 297.458 257.933 cv
301.103 260.038 li
301.524 260.281 302.207 260.281 302.628 260.038 cv
306.962 257.535 li
307.383 257.292 307.383 256.898 306.962 256.655 cv
cp
300.581 252.971 mo
296.936 250.866 li
296.515 250.623 295.832 250.623 295.411 250.866 cv
291.077 253.368 li
290.656 253.612 290.656 254.006 291.077 254.249 cv
294.722 256.353 li
295.143 256.596 295.825 256.596 296.246 256.353 cv
300.581 253.851 li
301.002 253.608 301.002 253.214 300.581 252.971 cv
cp
293.583 257.011 mo
289.938 254.906 li
289.517 254.663 288.835 254.663 288.414 254.906 cv
284.079 257.409 li
283.658 257.652 283.658 258.046 284.079 258.289 cv
287.724 260.393 li
288.145 260.636 288.828 260.636 289.249 260.393 cv
293.583 257.891 li
294.004 257.648 294.004 257.254 293.583 257.011 cv
cp
286.586 261.051 mo
282.941 258.946 li
282.52 258.703 281.837 258.703 281.416 258.946 cv
277.082 261.449 li
276.661 261.692 276.661 262.086 277.082 262.329 cv
280.727 264.433 li
281.148 264.676 281.831 264.676 282.252 264.433 cv
286.586 261.931 li
287.007 261.688 287.007 261.294 286.586 261.051 cv
cp
298.69 276.12 mo
295.045 274.015 li
294.624 273.772 293.941 273.772 293.52 274.015 cv
289.186 276.518 li
288.765 276.761 288.765 277.155 289.186 277.398 cv
292.831 279.502 li
293.252 279.745 293.934 279.745 294.356 279.502 cv
298.69 277 li
299.111 276.757 299.111 276.363 298.69 276.12 cv
cp
291.692 280.16 mo
288.047 278.055 li
287.626 277.812 286.944 277.812 286.523 278.055 cv
282.188 280.558 li
281.767 280.801 281.767 281.195 282.188 281.438 cv
285.833 283.542 li
286.254 283.785 286.937 283.785 287.358 283.542 cv
291.692 281.04 li
292.113 280.797 292.113 280.403 291.692 280.16 cv
cp
284.695 284.2 mo
281.05 282.095 li
280.629 281.852 279.946 281.852 279.525 282.095 cv
275.191 284.598 li
274.77 284.841 274.77 285.235 275.191 285.478 cv
278.836 287.582 li
279.257 287.826 279.94 287.826 280.361 287.582 cv
284.695 285.08 li
285.116 284.837 285.116 284.443 284.695 284.2 cv
cp
277.697 288.24 mo
274.053 286.135 li
273.632 285.892 272.949 285.892 272.528 286.135 cv
268.194 288.638 li
267.772 288.881 267.772 289.275 268.194 289.518 cv
271.838 291.622 li
272.26 291.866 272.942 291.866 273.363 291.622 cv
277.697 289.12 li
278.119 288.877 278.119 288.483 277.697 288.24 cv
cp
270.7 292.28 mo
267.055 290.175 li
266.634 289.932 265.951 289.932 265.53 290.175 cv
261.196 292.678 li
260.775 292.921 260.775 293.315 261.196 293.558 cv
264.841 295.662 li
265.262 295.906 265.945 295.906 266.366 295.662 cv
270.7 293.16 li
271.121 292.917 271.121 292.523 270.7 292.28 cv
cp
295.724 285.14 mo
292.079 283.036 li
291.658 282.793 290.975 282.793 290.554 283.036 cv
258.146 301.747 li
257.725 301.99 257.725 302.384 258.146 302.627 cv
261.791 304.731 li
262.212 304.975 262.895 304.975 263.316 304.731 cv
295.724 286.021 li
296.145 285.778 296.145 285.383 295.724 285.14 cv
cp
263.703 296.32 mo
260.058 294.215 li
259.637 293.972 258.954 293.972 258.533 294.215 cv
254.199 296.718 li
253.778 296.961 253.778 297.355 254.199 297.598 cv
257.844 299.702 li
258.265 299.946 258.947 299.946 259.368 299.702 cv
263.703 297.2 li
264.124 296.957 264.124 296.563 263.703 296.32 cv
cp
256.705 300.36 mo
253.06 298.255 li
252.639 298.012 251.957 298.012 251.535 298.255 cv
247.201 300.758 li
246.78 301.001 246.78 301.395 247.201 301.638 cv
250.846 303.742 li
251.267 303.986 251.95 303.986 252.371 303.742 cv
256.705 301.24 li
257.126 300.997 257.126 300.603 256.705 300.36 cv
cp
249.708 304.4 mo
246.063 302.295 li
245.642 302.052 244.959 302.052 244.538 302.295 cv
240.204 304.798 li
239.783 305.041 239.783 305.435 240.204 305.678 cv
243.849 307.783 li
244.27 308.026 244.953 308.026 245.374 307.783 cv
249.708 305.28 li
250.129 305.037 250.129 304.643 249.708 304.4 cv
cp
242.71 308.44 mo
239.065 306.335 li
238.644 306.092 237.962 306.092 237.541 306.335 cv
233.206 308.838 li
232.785 309.081 232.785 309.475 233.206 309.718 cv
236.851 311.823 li
237.272 312.066 237.955 312.066 238.376 311.823 cv
242.71 309.32 li
243.131 309.077 243.131 308.683 242.71 308.44 cv
cp
235.713 312.48 mo
232.068 310.375 li
231.647 310.132 230.964 310.132 230.543 310.375 cv
223.953 314.18 li
223.532 314.423 223.532 314.817 223.953 315.061 cv
227.598 317.165 li
228.019 317.408 228.702 317.408 229.123 317.165 cv
235.713 313.36 li
236.134 313.117 236.134 312.723 235.713 312.48 cv
cp
292.173 272.466 mo
288.528 270.361 li
288.107 270.118 287.424 270.118 287.003 270.361 cv
280.413 274.166 li
279.992 274.409 279.992 274.803 280.413 275.046 cv
284.058 277.151 li
284.479 277.394 285.162 277.394 285.583 277.151 cv
292.173 273.346 li
292.594 273.103 292.594 272.709 292.173 272.466 cv
cp
282.919 277.808 mo
279.275 275.704 li
278.853 275.46 278.171 275.46 277.75 275.704 cv
273.415 278.206 li
272.994 278.449 272.994 278.843 273.415 279.086 cv
277.06 281.191 li
277.481 281.434 278.164 281.434 278.585 281.191 cv
282.919 278.688 li
283.341 278.445 283.341 278.051 282.919 277.808 cv
cp
275.922 281.848 mo
272.277 279.744 li
271.856 279.5 271.173 279.5 270.752 279.744 cv
266.418 282.246 li
265.997 282.489 265.997 282.883 266.418 283.126 cv
270.063 285.231 li
270.484 285.474 271.167 285.474 271.588 285.231 cv
275.922 282.728 li
276.343 282.485 276.343 282.091 275.922 281.848 cv
cp
268.925 285.888 mo
265.28 283.784 li
264.859 283.54 264.176 283.54 263.755 283.784 cv
259.421 286.286 li
259 286.529 259 286.923 259.421 287.166 cv
263.066 289.271 li
263.487 289.514 264.169 289.514 264.59 289.271 cv
268.925 286.768 li
269.346 286.525 269.346 286.131 268.925 285.888 cv
cp
261.927 289.928 mo
258.282 287.824 li
257.861 287.581 257.178 287.581 256.757 287.824 cv
252.423 290.326 li
252.002 290.569 252.002 290.963 252.423 291.206 cv
256.068 293.311 li
256.489 293.554 257.172 293.554 257.593 293.311 cv
261.927 290.808 li
262.348 290.565 262.348 290.171 261.927 289.928 cv
cp
254.93 293.968 mo
251.285 291.864 li
250.864 291.621 250.181 291.621 249.76 291.864 cv
245.426 294.366 li
245.005 294.609 245.005 295.003 245.426 295.246 cv
249.071 297.351 li
249.492 297.594 250.174 297.594 250.596 297.351 cv
254.93 294.848 li
255.351 294.605 255.351 294.211 254.93 293.968 cv
cp
304.82 279.816 mo
301.175 277.712 li
300.754 277.468 300.072 277.468 299.651 277.712 cv
293.06 281.516 li
292.639 281.759 292.639 282.154 293.06 282.397 cv
296.705 284.501 li
297.126 284.744 297.809 284.744 298.23 284.501 cv
304.82 280.696 li
305.241 280.453 305.241 280.059 304.82 279.816 cv
cp
260.622 305.334 mo
256.977 303.23 li
256.556 302.987 255.873 302.987 255.452 303.23 cv
251.118 305.732 li
250.697 305.975 250.697 306.37 251.118 306.613 cv
254.763 308.717 li
255.184 308.96 255.866 308.96 256.287 308.717 cv
260.622 306.215 li
261.043 305.972 261.043 305.577 260.622 305.334 cv
cp
253.624 309.374 mo
249.979 307.27 li
249.558 307.027 248.876 307.027 248.455 307.27 cv
244.12 309.772 li
243.699 310.015 243.699 310.41 244.12 310.653 cv
247.765 312.757 li
248.186 313 248.869 313 249.29 312.757 cv
253.624 310.255 li
254.045 310.012 254.045 309.618 253.624 309.374 cv
cp
246.627 313.414 mo
242.982 311.31 li
242.561 311.067 241.878 311.067 241.457 311.31 cv
237.123 313.812 li
236.702 314.056 236.702 314.45 237.123 314.693 cv
240.768 316.797 li
241.189 317.04 241.872 317.04 242.293 316.797 cv
246.627 314.295 li
247.048 314.052 247.048 313.658 246.627 313.414 cv
cp
239.629 317.454 mo
235.984 315.35 li
235.563 315.107 234.881 315.107 234.46 315.35 cv
230.125 317.852 li
229.704 318.096 229.704 318.49 230.125 318.733 cv
233.77 320.837 li
234.191 321.08 234.874 321.08 235.295 320.837 cv
239.629 318.335 li
240.05 318.092 240.05 317.698 239.629 317.454 cv
cp
247.932 298.008 mo
244.287 295.904 li
243.866 295.661 243.184 295.661 242.763 295.904 cv
238.428 298.406 li
238.007 298.649 238.007 299.043 238.428 299.286 cv
242.073 301.391 li
242.494 301.634 243.177 301.634 243.598 301.391 cv
247.932 298.888 li
248.353 298.645 248.353 298.251 247.932 298.008 cv
cp
240.935 302.048 mo
237.29 299.944 li
236.869 299.701 236.186 299.701 235.765 299.944 cv
231.431 302.446 li
231.01 302.689 231.01 303.083 231.431 303.326 cv
235.076 305.431 li
235.497 305.674 236.18 305.674 236.601 305.431 cv
240.935 302.928 li
241.356 302.685 241.356 302.291 240.935 302.048 cv
cp
233.937 306.088 mo
230.293 303.984 li
229.871 303.741 229.189 303.741 228.768 303.984 cv
224.434 306.486 li
224.012 306.729 224.012 307.123 224.434 307.366 cv
228.078 309.471 li
228.5 309.714 229.182 309.714 229.603 309.471 cv
233.937 306.968 li
234.359 306.725 234.359 306.331 233.937 306.088 cv
cp
226.94 310.128 mo
223.295 308.024 li
222.874 307.781 222.191 307.781 221.77 308.024 cv
217.436 310.526 li
217.015 310.769 217.015 311.163 217.436 311.406 cv
221.081 313.511 li
221.502 313.754 222.185 313.754 222.606 313.511 cv
226.94 311.009 li
227.361 310.765 227.361 310.371 226.94 310.128 cv
cp
285.974 268.778 mo
282.329 266.674 li
281.908 266.431 281.226 266.431 280.805 266.674 cv
276.47 269.176 li
276.049 269.419 276.049 269.813 276.47 270.057 cv
280.115 272.161 li
280.536 272.404 281.219 272.404 281.64 272.161 cv
285.974 269.659 li
286.395 269.415 286.395 269.021 285.974 268.778 cv
cp
278.977 272.818 mo
275.332 270.714 li
274.911 270.471 274.228 270.471 273.807 270.714 cv
269.473 273.216 li
269.052 273.459 269.052 273.853 269.473 274.097 cv
273.118 276.201 li
273.539 276.444 274.222 276.444 274.643 276.201 cv
278.977 273.699 li
279.398 273.456 279.398 273.061 278.977 272.818 cv
cp
271.979 276.858 mo
268.335 274.754 li
267.913 274.511 267.231 274.511 266.81 274.754 cv
262.475 277.256 li
262.054 277.499 262.054 277.893 262.475 278.137 cv
266.12 280.241 li
266.541 280.484 267.224 280.484 267.645 280.241 cv
271.979 277.739 li
272.401 277.496 272.401 277.101 271.979 276.858 cv
cp
264.982 280.898 mo
261.337 278.794 li
260.916 278.551 260.233 278.551 259.812 278.794 cv
255.478 281.296 li
255.057 281.539 255.057 281.934 255.478 282.177 cv
259.123 284.281 li
259.544 284.524 260.227 284.524 260.648 284.281 cv
264.982 281.779 li
265.403 281.536 265.403 281.141 264.982 280.898 cv
cp
257.985 284.938 mo
254.34 282.834 li
253.919 282.591 253.236 282.591 252.815 282.834 cv
248.481 285.336 li
248.06 285.579 248.06 285.974 248.481 286.217 cv
252.126 288.321 li
252.547 288.564 253.229 288.564 253.65 288.321 cv
257.985 285.819 li
258.406 285.576 258.406 285.181 257.985 284.938 cv
cp
250.987 288.978 mo
247.342 286.874 li
246.921 286.631 246.239 286.631 245.817 286.874 cv
241.483 289.376 li
241.062 289.619 241.062 290.014 241.483 290.257 cv
245.128 292.361 li
245.549 292.604 246.232 292.604 246.653 292.361 cv
250.987 289.859 li
251.408 289.616 251.408 289.221 250.987 288.978 cv
cp
243.99 293.018 mo
240.345 290.914 li
239.924 290.671 239.241 290.671 238.82 290.914 cv
234.486 293.416 li
234.065 293.659 234.065 294.054 234.486 294.297 cv
238.131 296.401 li
238.552 296.644 239.234 296.644 239.656 296.401 cv
243.99 293.899 li
244.411 293.656 244.411 293.261 243.99 293.018 cv
cp
236.992 297.058 mo
233.347 294.954 li
232.926 294.711 232.244 294.711 231.823 294.954 cv
227.488 297.456 li
227.067 297.699 227.067 298.094 227.488 298.337 cv
231.133 300.441 li
231.554 300.684 232.237 300.684 232.658 300.441 cv
236.992 297.939 li
237.413 297.696 237.413 297.301 236.992 297.058 cv
cp
229.995 301.098 mo
226.35 298.994 li
225.929 298.751 225.246 298.751 224.825 298.994 cv
220.491 301.496 li
220.07 301.739 220.07 302.134 220.491 302.377 cv
224.136 304.481 li
224.557 304.724 225.24 304.724 225.661 304.481 cv
229.995 301.979 li
230.416 301.736 230.416 301.341 229.995 301.098 cv
cp
222.997 305.138 mo
219.353 303.034 li
218.932 302.791 218.249 302.791 217.828 303.034 cv
211.238 306.839 li
210.817 307.082 210.817 307.476 211.238 307.719 cv
214.883 309.824 li
215.304 310.067 215.986 310.067 216.407 309.824 cv
222.997 306.019 li
223.419 305.776 223.419 305.382 222.997 305.138 cv
cp
326.132 267.723 mo
322.487 265.618 li
322.066 265.375 321.383 265.375 320.962 265.618 cv
316.628 268.121 li
316.207 268.364 316.207 268.758 316.628 269.001 cv
320.273 271.105 li
320.694 271.348 321.376 271.348 321.798 271.105 cv
326.132 268.603 li
326.553 268.36 326.553 267.966 326.132 267.723 cv
cp
319.134 271.763 mo
315.489 269.658 li
315.068 269.415 314.386 269.415 313.965 269.658 cv
309.63 272.161 li
309.209 272.404 309.209 272.798 309.63 273.041 cv
313.275 275.145 li
313.696 275.389 314.379 275.389 314.8 275.145 cv
319.134 272.643 li
319.555 272.4 319.555 272.006 319.134 271.763 cv
cp
312.137 275.803 mo
308.492 273.698 li
308.071 273.455 307.388 273.455 306.967 273.698 cv
302.633 276.201 li
302.212 276.444 302.212 276.838 302.633 277.081 cv
306.278 279.185 li
306.699 279.429 307.382 279.429 307.803 279.185 cv
312.137 276.683 li
312.558 276.44 312.558 276.046 312.137 275.803 cv
cp
319.735 264.029 mo
316.09 261.925 li
315.669 261.682 314.986 261.682 314.565 261.925 cv
310.231 264.427 li
309.81 264.67 309.81 265.065 310.231 265.308 cv
313.876 267.412 li
314.297 267.655 314.98 267.655 315.401 267.412 cv
319.735 264.91 li
320.156 264.667 320.156 264.272 319.735 264.029 cv
cp
312.737 268.069 mo
309.093 265.965 li
308.671 265.722 307.989 265.722 307.568 265.965 cv
303.233 268.467 li
302.812 268.71 302.812 269.105 303.233 269.348 cv
306.878 271.452 li
307.299 271.695 307.982 271.695 308.403 271.452 cv
312.737 268.95 li
313.159 268.707 313.159 268.312 312.737 268.069 cv
cp
305.74 272.109 mo
302.095 270.005 li
301.674 269.762 300.991 269.762 300.57 270.005 cv
296.236 272.507 li
295.815 272.75 295.815 273.145 296.236 273.388 cv
299.881 275.492 li
300.302 275.735 300.985 275.735 301.406 275.492 cv
305.74 272.99 li
306.161 272.747 306.161 272.352 305.74 272.109 cv
cp
279.457 265.124 mo
275.812 263.02 li
275.391 262.777 274.709 262.777 274.288 263.02 cv
267.697 266.825 li
267.276 267.068 267.276 267.462 267.697 267.705 cv
271.342 269.809 li
271.763 270.052 272.446 270.052 272.867 269.809 cv
279.457 266.004 li
279.878 265.761 279.878 265.367 279.457 265.124 cv
cp
270.204 270.467 mo
266.559 268.362 li
266.138 268.119 265.455 268.119 265.034 268.362 cv
260.7 270.865 li
260.279 271.108 260.279 271.502 260.7 271.745 cv
264.345 273.849 li
264.766 274.092 265.449 274.092 265.87 273.849 cv
270.204 271.347 li
270.625 271.104 270.625 270.71 270.204 270.467 cv
cp
263.207 274.507 mo
259.562 272.402 li
259.141 272.159 258.458 272.159 258.037 272.402 cv
253.703 274.905 li
253.282 275.148 253.282 275.542 253.703 275.785 cv
257.348 277.889 li
257.769 278.133 258.451 278.133 258.872 277.889 cv
263.207 275.387 li
263.628 275.144 263.628 274.75 263.207 274.507 cv
cp
256.209 278.547 mo
252.564 276.442 li
252.143 276.199 251.46 276.199 251.039 276.442 cv
246.705 278.945 li
246.284 279.188 246.284 279.582 246.705 279.825 cv
250.35 281.929 li
250.771 282.173 251.454 282.173 251.875 281.929 cv
256.209 279.427 li
256.63 279.184 256.63 278.79 256.209 278.547 cv
cp
249.212 282.587 mo
245.567 280.482 li
245.146 280.239 244.463 280.239 244.042 280.482 cv
239.708 282.985 li
239.287 283.228 239.287 283.622 239.708 283.865 cv
243.353 285.969 li
243.774 286.213 244.456 286.213 244.877 285.969 cv
249.212 283.467 li
249.633 283.224 249.633 282.83 249.212 282.587 cv
cp
242.214 286.627 mo
238.569 284.522 li
238.148 284.279 237.466 284.279 237.045 284.522 cv
232.71 287.025 li
232.289 287.268 232.289 287.662 232.71 287.905 cv
236.355 290.009 li
236.776 290.253 237.459 290.253 237.88 290.009 cv
242.214 287.507 li
242.635 287.264 242.635 286.87 242.214 286.627 cv
cp
235.217 290.667 mo
231.572 288.562 li
231.151 288.319 230.468 288.319 230.047 288.562 cv
225.713 291.065 li
225.292 291.308 225.292 291.702 225.713 291.945 cv
229.358 294.049 li
229.779 294.293 230.462 294.293 230.883 294.049 cv
235.217 291.547 li
235.638 291.304 235.638 290.91 235.217 290.667 cv
cp
228.219 294.707 mo
224.575 292.602 li
224.153 292.359 223.471 292.359 223.05 292.602 cv
218.715 295.105 li
218.294 295.348 218.294 295.742 218.715 295.985 cv
222.36 298.089 li
222.781 298.333 223.464 298.333 223.885 298.089 cv
228.219 295.587 li
228.641 295.344 228.641 294.95 228.219 294.707 cv
cp
221.222 298.747 mo
217.577 296.642 li
217.156 296.399 216.473 296.399 216.052 296.642 cv
211.718 299.145 li
211.297 299.388 211.297 299.782 211.718 300.025 cv
215.363 302.13 li
215.784 302.373 216.467 302.373 216.888 302.13 cv
221.222 299.627 li
221.643 299.384 221.643 298.99 221.222 298.747 cv
cp
214.225 303.667 mo
209.89 306.17 li
209.469 306.413 208.787 306.413 208.366 306.17 cv
204.721 304.065 li
204.3 303.822 204.3 303.428 204.721 303.185 cv
209.055 300.682 li
209.476 300.439 210.159 300.439 210.58 300.682 cv
214.225 302.787 li
214.646 303.03 214.646 303.424 214.225 303.667 cv
cp
0 .01944 .0471199 0 cmyk
f
293.431 117.852 mo
285.179 61.5189 li
310.895 46.6713 li
310.895 107.276 li
308.359 107.854 305.675 108.923 302.896 110.517 cv
299.576 112.421 296.389 114.922 293.431 117.852 cv
.101167 .43827 0 0 cmyk
f
125.904 270.482 mo
125.904 263.729 li
279.976 174.775 li
280.547 175.386 281.159 175.937 281.81 176.425 cv
281.26 176.2 280.729 175.94 280.217 175.646 cv
285.207 178.508 li
125.904 270.482 li
.0611582 .357946 0 0 cmyk
f
125.904 263.729 mo
125.904 234.557 li
133.79 230.005 li
133.79 229.031 li
125.904 233.584 li
125.904 229.27 li
133.79 224.717 li
133.79 223.744 li
125.904 228.297 li
125.904 153.476 li
285.179 61.5189 li
293.431 117.852 li
289.061 122.181 285.192 127.447 282.133 133.114 cv
272.173 138.864 li
256.633 125.222 li
256.579 125.175 256.51 125.152 256.431 125.152 cv
256.338 125.152 256.23 125.185 256.12 125.249 cv
211.069 151.258 li
188.83 141.653 li
188.791 141.637 188.747 141.628 188.7 141.628 cv
188.606 141.628 188.498 141.661 188.388 141.725 cv
142.265 168.354 li
141.921 168.552 141.642 168.992 141.642 169.336 cv
141.642 169.567 141.767 169.696 141.954 169.696 cv
142.045 169.696 142.152 169.665 142.265 169.599 cv
188.128 143.12 li
210.367 152.725 li
210.407 152.742 210.451 152.75 210.498 152.75 cv
210.592 152.75 210.699 152.718 210.81 152.654 cv
255.792 126.683 li
271.332 140.325 li
271.386 140.372 271.455 140.395 271.534 140.395 cv
271.627 140.395 271.735 140.363 271.846 140.299 cv
281.204 134.896 li
277.912 141.445 275.716 148.444 275.073 155.093 cv
272.257 158.83 li
249.913 171.73 li
233.126 156.283 li
233.072 156.234 233.001 156.209 232.92 156.209 cv
232.826 156.209 232.719 156.241 232.608 156.306 cv
221.549 162.691 li
221.4 162.776 221.256 162.913 221.144 163.074 cv
210.004 179.045 li
181.948 195.243 li
181.815 195.32 181.685 195.438 181.578 195.579 cv
164.26 218.395 li
142.092 231.194 li
141.748 231.393 141.469 231.832 141.469 232.176 cv
141.469 232.407 141.595 232.536 141.781 232.536 cv
141.872 232.536 141.979 232.505 142.092 232.439 cv
164.466 219.522 li
164.599 219.445 164.729 219.327 164.836 219.186 cv
182.154 196.37 li
210.235 180.157 li
210.383 180.072 210.527 179.936 210.64 179.774 cv
221.779 163.803 li
232.275 157.744 li
249.062 173.19 li
249.116 173.239 249.187 173.264 249.268 173.264 cv
249.362 173.264 249.469 173.232 249.58 173.168 cv
272.464 159.955 li
272.599 159.878 272.73 159.758 272.838 159.615 cv
274.941 156.824 li
274.899 157.57 274.878 158.312 274.878 159.046 cv
274.878 165.982 276.766 171.336 279.976 174.775 cv
125.904 263.729 li
133.79 226.387 mo
126.719 230.469 li
126.719 231.443 li
133.79 227.361 li
133.79 226.387 li
151.578 154.554 mo
141.268 160.506 li
141.268 161.933 li
151.578 155.981 li
151.578 154.554 li
147.902 152.801 mo
141.268 156.631 li
141.268 158.059 li
147.902 154.229 li
147.902 152.801 li
157.812 150.954 mo
153.496 153.446 li
153.496 154.873 li
157.812 152.382 li
157.812 150.954 li
151.578 146.804 mo
141.268 152.757 li
141.268 154.184 li
151.578 148.231 li
151.578 146.804 li
154.136 149.202 mo
149.82 151.694 li
149.82 153.121 li
154.136 150.629 li
154.136 149.202 li
165.005 146.801 mo
159.731 149.847 li
159.731 151.274 li
165.005 148.229 li
165.005 146.801 li
165.005 142.927 mo
156.054 148.095 li
156.054 149.522 li
165.005 144.354 li
165.005 142.927 li
157.812 143.205 mo
153.496 145.696 li
153.496 147.124 li
157.812 144.632 li
157.812 143.205 li
172.785 142.31 mo
166.924 145.694 li
166.924 147.121 li
172.785 143.737 li
172.785 142.31 li
165.005 139.052 mo
159.731 142.097 li
159.731 143.524 li
165.005 140.479 li
165.005 139.052 li
177.154 135.913 mo
166.924 141.819 li
166.924 143.246 li
177.154 137.34 li
177.154 135.913 li
184.134 135.757 mo
174.703 141.202 li
174.703 142.63 li
184.134 137.185 li
184.134 135.757 li
172.785 134.56 mo
166.924 137.944 li
166.924 139.371 li
172.785 135.987 li
172.785 134.56 li
189.303 128.899 mo
179.072 134.805 li
179.072 136.232 li
189.303 130.326 li
189.303 128.899 li
192.393 130.989 mo
186.052 134.65 li
186.052 136.077 li
192.393 132.416 li
192.393 130.989 li
184.134 128.008 mo
174.703 133.453 li
174.703 134.88 li
184.134 129.435 li
184.134 128.008 li
207.765 122.114 mo
194.311 129.882 li
194.311 131.309 li
207.765 123.541 li
207.765 122.114 li
195.483 125.33 mo
191.221 127.791 li
191.221 129.218 li
195.483 126.757 li
195.483 125.33 li
192.393 123.24 mo
186.052 126.9 li
186.052 128.328 li
192.393 124.667 li
192.393 123.24 li
207.765 118.239 mo
197.402 124.223 li
197.402 125.65 li
207.765 119.666 li
207.765 118.239 li
207.765 114.364 mo
194.311 122.132 li
194.311 123.559 li
207.765 115.792 li
207.765 114.364 li
.105653 .459266 0 0 cmyk
f
310.896 48.2393 mo
125.904 155.044 li
125.904 143.824 li
310.896 37.0192 li
310.896 48.2393 li
cp
.774777 .759884 0 0 cmyk
f
142.093 255.727 mo
141.912 255.831 141.733 255.857 141.61 255.777 cv
141.392 255.635 141.432 255.22 141.698 254.849 cv
156.195 234.646 li
156.306 234.491 156.446 234.361 156.589 234.278 cv
158.695 233.062 li
176.982 208.31 li
177.092 208.162 177.226 208.038 177.364 207.959 cv
226.935 179.339 li
244.858 149.717 li
244.976 149.522 245.141 149.354 245.314 149.255 cv
251.985 145.403 li
271.561 118.213 li
271.672 118.059 271.81 117.93 271.953 117.847 cv
300.24 101.516 li
300.584 101.317 300.863 101.435 300.863 101.779 cv
300.863 102.123 300.584 102.563 300.24 102.762 cv
272.174 118.965 li
252.598 146.155 li
252.488 146.309 252.349 146.438 252.206 146.521 cv
245.585 150.344 li
227.663 179.966 li
227.545 180.161 227.379 180.328 227.207 180.428 cv
177.578 209.081 li
159.29 233.833 li
159.181 233.981 159.046 234.105 158.908 234.185 cv
156.811 235.395 li
142.486 255.359 li
142.37 255.52 142.231 255.647 142.093 255.727 cv
cp
.181582 .527123 0 0 cmyk
f
272.464 159.955 mo
249.58 173.168 li
249.372 173.288 249.177 173.296 249.062 173.19 cv
232.275 157.744 li
221.779 163.803 li
210.64 179.774 li
210.527 179.936 210.383 180.072 210.235 180.157 cv
182.154 196.37 li
164.836 219.186 li
164.729 219.327 164.599 219.445 164.466 219.522 cv
142.092 232.439 li
141.748 232.638 141.469 232.52 141.469 232.176 cv
141.469 231.832 141.748 231.393 142.092 231.194 cv
164.26 218.395 li
181.578 195.579 li
181.685 195.438 181.815 195.32 181.948 195.243 cv
210.004 179.045 li
221.144 163.074 li
221.256 162.913 221.4 162.776 221.549 162.691 cv
232.608 156.306 li
232.816 156.185 233.011 156.177 233.126 156.283 cv
249.913 171.73 li
272.257 158.83 li
282.895 144.716 li
283.002 144.573 283.134 144.453 283.268 144.376 cv
300.24 134.577 li
300.584 134.378 300.862 134.496 300.862 134.84 cv
300.862 135.184 300.584 135.624 300.24 135.823 cv
283.475 145.501 li
272.838 159.615 li
272.73 159.758 272.599 159.878 272.464 159.955 cv
0 0 0 0 cmyk
f
144.375 242.436 mo
142.348 243.607 li
142.003 243.805 141.725 243.688 141.725 243.343 cv
141.725 242.999 142.003 242.56 142.348 242.361 cv
144.167 241.31 li
189.515 181.055 li
189.623 180.911 189.754 180.792 189.889 180.714 cv
203.829 172.666 li
216.623 153.867 li
216.737 153.699 216.885 153.558 217.038 153.47 cv
232.652 144.455 li
254.603 114.939 li
254.711 114.792 254.845 114.67 254.981 114.591 cv
300.24 88.4611 li
300.584 88.2623 300.863 88.38 300.863 88.7243 cv
300.863 89.0686 300.584 89.5079 300.24 89.7067 cv
255.193 115.714 li
233.242 145.23 li
233.134 145.377 233 145.499 232.864 145.578 cv
217.275 154.578 li
204.481 173.377 li
204.367 173.545 204.219 173.686 204.066 173.774 cv
190.097 181.839 li
144.75 242.095 li
144.642 242.238 144.511 242.358 144.375 242.436 cv
cp
.692714 .656947 0 0 cmyk
f
157.247 206.207 mo
142.348 214.809 li
142.003 215.008 141.725 214.89 141.725 214.546 cv
141.725 214.202 142.003 213.762 142.348 213.564 cv
157.042 205.08 li
164.506 195.236 li
164.613 195.095 164.743 194.977 164.877 194.899 cv
175.237 188.918 li
181.758 179.643 li
181.87 179.483 182.013 179.349 182.16 179.264 cv
192.514 173.286 li
215.227 140.371 li
215.341 140.207 215.486 140.068 215.636 139.981 cv
227.574 133.089 li
249.518 104.038 li
249.626 103.896 249.757 103.777 249.891 103.699 cv
300.24 74.6308 li
300.584 74.432 300.863 74.5497 300.863 74.894 cv
300.863 75.2382 300.584 75.6776 300.24 75.8764 cv
250.098 104.826 li
228.154 133.876 li
228.046 134.019 227.916 134.137 227.781 134.215 cv
215.87 141.092 li
193.157 174.007 li
193.043 174.171 192.898 174.31 192.748 174.397 cv
182.388 180.378 li
175.867 189.653 li
175.754 189.813 175.612 189.947 175.465 190.032 cv
165.082 196.026 li
157.618 205.871 li
157.511 206.012 157.381 206.13 157.247 206.207 cv
cp
.257023 .623712 .0386053 0 cmyk
f
300.24 123.906 mo
271.846 140.299 li
271.641 140.417 271.448 140.427 271.332 140.325 cv
255.792 126.683 li
210.81 152.654 li
210.643 152.75 210.484 152.776 210.367 152.725 cv
188.128 143.12 li
142.265 169.599 li
141.921 169.798 141.642 169.68 141.642 169.336 cv
141.642 168.992 141.921 168.552 142.265 168.354 cv
188.388 141.725 li
188.554 141.629 188.713 141.603 188.83 141.653 cv
211.069 151.258 li
256.12 125.249 li
256.324 125.13 256.517 125.12 256.633 125.222 cv
272.173 138.864 li
300.24 122.66 li
300.584 122.461 300.862 122.579 300.862 122.923 cv
300.862 123.268 300.584 123.707 300.24 123.906 cv
.774777 .759884 0 0 cmyk
f
301.001 101.699 mo
301.001 102.119 300.66 102.657 300.24 102.9 cv
299.819 103.143 299.478 102.999 299.478 102.578 cv
299.478 102.158 299.819 101.62 300.24 101.377 cv
300.66 101.134 301.001 101.278 301.001 101.699 cv
cp
6.10361e-005 9.15541e-005 .0191043 0 cmyk
f
301.001 122.843 mo
301.001 123.264 300.66 123.802 300.24 124.044 cv
299.819 124.287 299.478 124.143 299.478 123.723 cv
299.478 123.302 299.819 122.764 300.24 122.521 cv
300.66 122.279 301.001 122.423 301.001 122.843 cv
f
301.001 88.6442 mo
301.001 89.0648 300.66 89.6026 300.24 89.8454 cv
299.819 90.0882 299.478 89.9441 299.478 89.5235 cv
299.478 89.103 299.819 88.5652 300.24 88.3224 cv
300.66 88.0796 301.001 88.2237 301.001 88.6442 cv
cp
f
301.001 74.8139 mo
301.001 75.2345 300.66 75.7722 300.24 76.0151 cv
299.819 76.2579 299.478 76.1138 299.478 75.6932 cv
299.478 75.2727 299.819 74.7349 300.24 74.4921 cv
300.66 74.2493 301.001 74.3934 301.001 74.8139 cv
cp
f
142.854 254.664 mo
142.854 255.085 142.513 255.623 142.092 255.865 cv
141.671 256.108 141.331 255.964 141.331 255.544 cv
141.331 255.123 141.671 254.585 142.092 254.343 cv
142.513 254.1 142.854 254.244 142.854 254.664 cv
cp
f
142.854 242.692 mo
142.854 243.112 142.513 243.65 142.092 243.893 cv
141.671 244.136 141.331 243.992 141.331 243.571 cv
141.331 243.15 141.671 242.613 142.092 242.37 cv
142.513 242.127 142.854 242.271 142.854 242.692 cv
cp
f
142.854 231.377 mo
142.854 231.798 142.513 232.335 142.092 232.578 cv
141.671 232.821 141.331 232.677 141.331 232.256 cv
141.331 231.836 141.671 231.298 142.092 231.055 cv
142.513 230.812 142.854 230.956 142.854 231.377 cv
cp
f
142.854 213.894 mo
142.854 214.315 142.513 214.853 142.092 215.096 cv
141.671 215.338 141.331 215.194 141.331 214.774 cv
141.331 214.353 141.671 213.815 142.092 213.573 cv
142.513 213.33 142.854 213.474 142.854 213.894 cv
cp
f
142.854 168.655 mo
142.854 169.076 142.513 169.614 142.092 169.857 cv
141.671 170.099 141.331 169.955 141.331 169.535 cv
141.331 169.114 141.671 168.576 142.092 168.334 cv
142.513 168.091 142.854 168.235 142.854 168.655 cv
cp
f
301.001 134.76 mo
301.001 135.181 300.66 135.718 300.24 135.961 cv
299.819 136.204 299.478 136.06 299.478 135.639 cv
299.478 135.219 299.819 134.681 300.24 134.438 cv
300.66 134.195 301.001 134.339 301.001 134.76 cv
f
141.268 154.184 mo
141.268 152.757 li
151.578 146.804 li
151.578 148.231 li
141.268 154.184 li
.0122377 .142702 0 0 cmyk
f
153.496 147.124 mo
153.496 145.696 li
157.812 143.205 li
157.812 144.632 li
153.496 147.124 li
f
159.731 143.524 mo
159.731 142.097 li
165.005 139.052 li
165.005 140.479 li
159.731 143.524 li
f
166.924 139.371 mo
166.924 137.944 li
172.785 134.56 li
172.785 135.987 li
166.924 139.371 li
f
174.703 134.88 mo
174.703 133.453 li
184.134 128.008 li
184.134 129.435 li
174.703 134.88 li
f
186.052 128.328 mo
186.052 126.9 li
192.393 123.24 li
192.393 124.667 li
186.052 128.328 li
f
194.311 123.559 mo
194.311 122.132 li
207.765 114.364 li
207.765 115.792 li
194.311 123.559 li
f
141.268 158.059 mo
141.268 156.631 li
147.902 152.801 li
147.902 154.229 li
141.268 158.059 li
f
149.82 153.121 mo
149.82 151.694 li
154.136 149.202 li
154.136 150.629 li
149.82 153.121 li
f
156.054 149.522 mo
156.054 148.095 li
165.005 142.927 li
165.005 144.354 li
156.054 149.522 li
f
166.924 143.246 mo
166.924 141.819 li
177.154 135.913 li
177.154 137.34 li
166.924 143.246 li
f
179.072 136.232 mo
179.072 134.805 li
189.303 128.899 li
189.303 130.326 li
179.072 136.232 li
f
191.221 129.218 mo
191.221 127.791 li
195.483 125.33 li
195.483 126.757 li
191.221 129.218 li
f
197.402 125.65 mo
197.402 124.223 li
207.765 118.239 li
207.765 119.666 li
197.402 125.65 li
f
141.268 161.933 mo
141.268 160.506 li
151.578 154.554 li
151.578 155.981 li
141.268 161.933 li
f
153.496 154.873 mo
153.496 153.446 li
157.812 150.954 li
157.812 152.382 li
153.496 154.873 li
f
159.731 151.274 mo
159.731 149.847 li
165.005 146.801 li
165.005 148.229 li
159.731 151.274 li
f
166.924 147.121 mo
166.924 145.694 li
172.785 142.31 li
172.785 143.737 li
166.924 147.121 li
f
174.703 142.63 mo
174.703 141.202 li
184.134 135.757 li
184.134 137.185 li
174.703 142.63 li
f
186.052 136.077 mo
186.052 134.65 li
192.393 130.989 li
192.393 132.416 li
186.052 136.077 li
f
194.311 131.309 mo
194.311 129.882 li
207.765 122.114 li
207.765 123.541 li
194.311 131.309 li
f
296.134 188.837 mo
293.321 187.213 293.321 184.581 296.134 182.957 cv
298.946 181.333 303.506 181.333 306.318 182.957 cv
308.167 184.024 308.8 185.527 308.219 186.893 cv
307.916 187.606 307.282 188.281 306.318 188.837 cv
303.506 190.461 298.946 190.461 296.134 188.837 cv
cp
.692714 .656947 0 0 cmyk
f
308.427 185.859 mo
308.427 222.499 li
308.444 223.576 307.741 224.656 306.318 225.477 cv
303.506 227.101 298.946 227.101 296.134 225.477 cv
294.744 224.675 294.041 223.627 294.025 222.576 cv
294.025 185.935 li
294.041 186.987 294.744 188.035 296.134 188.837 cv
298.946 190.461 303.506 190.461 306.318 188.837 cv
307.741 188.016 308.444 186.936 308.427 185.859 cv
cp
.774777 .759884 0 0 cmyk
f
298.235 179.584 mo
296.583 178.63 296.583 177.084 298.235 176.13 cv
299.887 175.176 302.565 175.176 304.217 176.13 cv
305.869 177.084 305.869 178.63 304.217 179.584 cv
302.565 180.537 299.887 180.537 298.235 179.584 cv
.616754 .905425 0 0 cmyk
f
305.456 177.834 mo
305.456 185.098 li
305.466 185.73 305.053 186.365 304.217 186.847 cv
302.565 187.801 299.887 187.801 298.235 186.847 cv
297.419 186.376 297.006 185.761 296.996 185.143 cv
296.996 177.879 li
297.006 178.497 297.419 179.112 298.235 179.584 cv
299.887 180.537 302.565 180.537 304.217 179.584 cv
305.053 179.101 305.466 178.467 305.456 177.834 cv
.177218 .581048 0 0 cmyk
f
327.042 111.178 mo
319.63 106.927 li
324.761 109.87 327.943 116.205 327.943 125.211 cv
327.943 143.114 315.374 164.884 299.919 173.749 cv
292.245 178.15 285.282 178.552 280.217 175.646 cv
287.629 179.898 li
292.694 182.803 299.658 182.402 307.332 178 cv
322.786 169.136 335.356 147.365 335.356 129.462 cv
335.356 120.457 332.173 114.121 327.042 111.178 cv
.423011 .71606 .150362 .00448615 cmyk
f
302.896 175.439 mo
318.351 166.575 330.92 144.805 330.92 126.901 cv
330.92 118.641 328.238 112.634 323.835 109.424 cv
329.679 112.025 333.377 118.619 333.377 128.32 cv
333.377 146.223 320.808 167.993 305.353 176.858 cv
297.036 181.628 289.557 181.693 284.421 177.949 cv
289.357 180.146 295.823 179.497 302.896 175.439 cv
f
301.482 172.803 mo
300.983 169.4 li
310.895 163.677 li
310.895 107.276 li
312.419 106.928 313.889 106.758 315.292 106.758 cv
317.356 106.758 319.277 107.126 321.015 107.839 cv
325.327 111.076 327.943 117.046 327.943 125.211 cv
327.943 142.506 316.212 163.412 301.482 172.803 cv
.101106 .372747 0 0 cmyk
f
287.53 177.506 mo
287.339 177.506 287.149 177.503 286.96 177.496 cv
300.983 169.4 li
301.482 172.803 li
300.964 173.133 300.444 173.448 299.919 173.749 cv
295.475 176.298 291.267 177.506 287.53 177.506 cv
.0263981 .042237 .0502937 0 cmyk
f
300.983 169.4 mo
300.006 162.726 li
300.004 162.719 300.003 162.711 300.002 162.703 cv
296.39 138.045 li
299.802 136.076 li
299.82 136.078 299.84 136.079 299.86 136.079 cv
299.971 136.079 300.101 136.041 300.24 135.961 cv
300.66 135.718 301.001 135.181 301.001 134.76 cv
301.001 134.478 300.848 134.32 300.62 134.32 cv
300.508 134.32 300.378 134.358 300.24 134.438 cv
300.077 134.532 299.925 134.671 299.801 134.83 cv
296.221 136.897 li
294.78 127.058 li
299.802 124.159 li
299.82 124.161 299.84 124.162 299.86 124.162 cv
299.971 124.162 300.101 124.124 300.24 124.044 cv
300.66 123.802 301.001 123.264 301.001 122.843 cv
301.001 122.561 300.848 122.403 300.62 122.403 cv
300.508 122.403 300.378 122.441 300.24 122.521 cv
300.077 122.616 299.925 122.754 299.801 122.913 cv
294.612 125.909 li
293.431 117.852 li
296.389 114.922 299.576 112.421 302.896 110.517 cv
305.675 108.923 308.359 107.854 310.895 107.276 cv
310.895 163.677 li
300.983 169.4 li
.0613107 .313878 0 0 cmyk
f
286.96 177.496 mo
285.113 177.435 283.387 177.072 281.81 176.425 cv
281.159 175.937 280.547 175.386 279.976 174.775 cv
300.071 163.173 li
300.002 162.703 li
300.003 162.711 300.004 162.719 300.006 162.726 cv
300.983 169.4 li
286.96 177.496 li
.0326848 .25156 0 0 cmyk
f
279.976 174.775 mo
276.766 171.336 274.878 165.982 274.878 159.046 cv
274.878 158.312 274.899 157.57 274.941 156.824 cv
283.475 145.501 li
296.39 138.045 li
300.002 162.703 li
300.071 163.173 li
279.976 174.775 li
275.073 155.093 mo
275.716 148.444 277.912 141.445 281.204 134.896 cv
294.78 127.058 li
296.221 136.897 li
283.268 144.376 li
283.134 144.453 283.002 144.573 282.895 144.716 cv
275.073 155.093 li
282.133 133.114 mo
285.192 127.447 289.061 122.181 293.431 117.852 cv
294.612 125.909 li
282.133 133.114 li
.0649424 .328374 0 0 cmyk
f
274.941 156.824 mo
274.973 156.249 275.017 155.674 275.073 155.093 cv
282.895 144.716 li
283.002 144.573 283.134 144.453 283.268 144.376 cv
296.221 136.897 li
299.801 134.83 li
299.606 135.081 299.478 135.382 299.478 135.639 cv
299.478 135.897 299.606 136.051 299.802 136.076 cv
296.39 138.045 li
283.475 145.501 li
274.941 156.824 li
0 0 0 0 cmyk
f
281.204 134.896 mo
281.504 134.298 281.814 133.704 282.133 133.114 cv
294.612 125.909 li
299.801 122.913 li
299.606 123.164 299.478 123.465 299.478 123.723 cv
299.478 123.98 299.606 124.134 299.802 124.159 cv
294.78 127.058 li
281.204 134.896 li
.416388 .512078 0 0 cmyk
f
299.86 124.162 mo
299.84 124.162 299.82 124.161 299.802 124.159 cv
299.606 124.134 299.478 123.98 299.478 123.723 cv
299.478 123.465 299.606 123.164 299.801 122.913 cv
299.925 122.754 300.077 122.616 300.24 122.521 cv
300.378 122.441 300.508 122.403 300.62 122.403 cv
300.848 122.403 301.001 122.561 301.001 122.843 cv
301.001 123.264 300.66 123.802 300.24 124.044 cv
300.101 124.124 299.971 124.162 299.86 124.162 cv
0 0 .00976577 0 cmyk
f
299.86 136.079 mo
299.84 136.079 299.82 136.078 299.802 136.076 cv
299.606 136.051 299.478 135.897 299.478 135.639 cv
299.478 135.382 299.606 135.081 299.801 134.83 cv
299.925 134.671 300.077 134.532 300.24 134.438 cv
300.378 134.358 300.508 134.32 300.62 134.32 cv
300.848 134.32 301.001 134.478 301.001 134.76 cv
301.001 135.181 300.66 135.718 300.24 135.961 cv
300.101 136.041 299.971 136.079 299.86 136.079 cv
f
323.135 108.937 mo
322.063 108.323 li
322.43 108.511 322.787 108.716 323.135 108.937 cv
.101106 .372747 0 0 cmyk
f
290.523 179.19 mo
288.309 179.19 286.259 178.767 284.421 177.949 cv
284.434 177.958 284.447 177.967 284.46 177.977 cv
283.519 177.562 282.634 177.043 281.81 176.425 cv
283.387 177.072 285.113 177.435 286.96 177.496 cv
287.149 177.503 287.339 177.506 287.53 177.506 cv
291.267 177.506 295.475 176.298 299.919 173.749 cv
300.444 173.448 300.964 173.133 301.482 172.803 cv
316.212 163.412 327.943 142.506 327.943 125.211 cv
327.943 117.046 325.327 111.076 321.015 107.839 cv
321.372 107.986 321.722 108.147 322.063 108.323 cv
323.135 108.937 li
323.385 109.096 323.629 109.264 323.869 109.439 cv
323.858 109.434 323.847 109.429 323.835 109.424 cv
327.755 112.282 330.311 117.357 330.825 124.266 cv
330.825 124.272 330.826 124.278 330.826 124.284 cv
330.826 124.29 330.827 124.295 330.827 124.301 cv
330.889 125.141 330.92 126.008 330.92 126.901 cv
330.92 144.805 318.351 166.575 302.896 175.439 cv
302.558 175.633 302.221 175.82 301.885 175.999 cv
297.818 178.163 293.971 179.19 290.523 179.19 cv
.217716 .505882 .00842298 0 cmyk
f
290.507 179.196 mo
288.314 179.196 286.283 178.781 284.46 177.977 cv
284.447 177.967 284.434 177.958 284.421 177.949 cv
286.259 178.767 288.309 179.19 290.523 179.19 cv
293.971 179.19 297.818 178.163 301.885 175.999 cv
297.812 178.166 293.96 179.197 290.507 179.196 cv
330.827 124.301 mo
330.827 124.295 330.826 124.29 330.826 124.284 cv
330.826 124.289 330.827 124.296 330.827 124.301 cv
330.825 124.266 mo
330.311 117.357 327.755 112.282 323.835 109.424 cv
323.847 109.429 323.858 109.434 323.869 109.439 cv
327.772 112.301 330.313 117.373 330.825 124.266 cv
f
327.909 109.667 mo
320.497 105.415 li
315.207 102.381 307.935 102.799 299.92 107.397 cv
283.792 116.647 270.667 139.38 270.667 158.063 cv
270.667 167.468 273.991 174.085 279.35 177.158 cv
286.762 181.41 li
281.404 178.336 278.079 171.72 278.079 162.314 cv
278.079 143.632 291.205 120.898 307.332 111.648 cv
315.347 107.051 322.62 106.633 327.909 109.667 cv
cp
.181582 .527123 0 0 cmyk
f
279.313 161.606 mo
279.313 179.51 291.883 186.861 307.332 178 cv
322.786 169.136 335.356 147.365 335.356 129.462 cv
335.356 111.565 322.786 104.214 307.332 113.078 cv
291.883 121.939 279.313 143.71 279.313 161.606 cv
cp
307.332 179.43 mo
291.205 188.68 278.079 181.003 278.079 162.314 cv
278.079 143.632 291.205 120.898 307.332 111.648 cv
313.537 108.089 319.297 107.035 324.037 108.148 cv
331.62 109.929 336.59 117.258 336.59 128.754 cv
336.59 147.443 323.464 170.177 307.332 179.43 cv
cp
.257023 .623712 .0386053 0 cmyk
f
278.079 162.314 mo
280.253 131.709 305.824 105.013 324.037 108.148 cv
305.442 103.773 278.521 131.571 278.079 162.314 cv
cp
level3{
gsave
clp
[6.01579 29.7106 -29.7106 6.01579 300.875 116.449 ]ct
/2 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~'Pd[K'l*dL'l*dL(2NsN(2NsN(2X$O(Ms-P(N'3Q(N'3Q(iB<R(iKBS(iKBS)/oQU)/oQU)K5ZV)K>`W
)K>`W)fboY)fboY)fboY*-2)[*-2)[*-;/\*HV8]*H_>^*H_>^*d%G_*d.M`+*IVa+*R\b+*R\b+F!kd
+F!kd+a<te+aF%f+aF%f,'j4h,'j4h,C0=i,C9Cj,C9Cj,^]Rl,^fXm-%,an-@Ppp-@Ppp-[u*r-\)0s
."D9t."M?u.=hI!.=hI!.Y7X#.Y7X#.Y@^$.t[g%.t[g%/;+!'/;+!'/VO0)/VO0)/qs?+/qs?+/qs?+
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.01579 29.7106 -29.7106 6.01579 300.875 116.449 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~',2,p'GM5q'GV>t'bqGu'bqGu'c%Q#()@Z$()@Z$()Ic'(Ddl((Ddl((Dmu+(`4),(`=2/)&X;0)&X;0
)&X>2)B'M4)B'M4)B'P6)]K_8)]K_8)]Kb:*#oq<*#oq<*#ot>*??.@*??1B*Zc@D*Zc@D*ZcCF+!2RH
+!2RI+<VdL+<VdL+<VdM+X&!P+X&!Q+sJ3T+sJ3T+sJ3U,9nEX,9nEY,U=W],pai`,paia-71&d-71&e
-RU8h-RU8h-n$Jl-n$Jl.4H\p.4H\p.4H\p.Olnt.Olnt.k<,#.k<,#/1`>'/1`>'/M/P+/M/P+/M/P+
~>
<~C2.KuC2.KuC27U#CMR^$CM[g'Ci!p(Ci+$+D/F-,D/F-,D/O6/DJj?0DJsH3Df9Q4Df9Q4DfBZ7E,]c8
E,]f:EH,u<EH,u<EH-#>EcQ2@EcQ5BF)uDDF)uGFFEDVHFEDVHFEDYJF`hhLF`hkNG'8%PG'8(RGB\7T
GB\7TGB\7UG^+IXG^+IYH$O[\H$O[\H$O[]H?sm`H?smaH[C*eI!g<hI!g<iI=6NlI=6NmIXZ`qIt)rt
It)rtJ:N0#J:N0#J:N0#JUrB'JUrB'JqAT+JqAT+JqAT+K7ef/K7ef/KS5#3KS5#3KnY57KnY57KnY57
~>
0 0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
156.586 187.897 mo
156.547 174.15 li
153.11 172.152 li
153.149 185.9 li
153.151 186.716 153.44 187.29 153.905 187.561 cv
157.342 189.558 li
156.877 189.288 156.588 188.714 156.586 187.897 cv
cp
.423011 .71606 .150362 .00448615 cmyk
f
170.743 159.869 mo
170.271 159.595 169.617 159.634 168.896 160.05 cv
155.697 167.67 li
154.265 168.497 153.105 170.502 153.11 172.152 cv
156.547 174.15 li
156.542 172.499 157.702 170.495 159.135 169.668 cv
172.333 162.048 li
173.054 161.631 173.708 161.592 174.18 161.867 cv
170.743 159.869 li
cp
.181582 .527123 0 0 cmyk
f
170.743 159.869 mo
170.271 159.595 169.617 159.634 168.896 160.05 cv
172.333 162.048 li
173.054 161.631 173.708 161.592 174.18 161.867 cv
170.743 159.869 li
cp
.0802014 .418494 0 0 cmyk
f
155.697 167.67 mo
154.265 168.497 153.105 170.502 153.11 172.152 cv
156.547 174.15 li
156.542 172.499 157.702 170.495 159.135 169.668 cv
155.697 167.67 li
cp
f
174.937 163.532 mo
174.932 161.882 173.765 161.221 172.333 162.048 cv
159.135 169.668 li
157.702 170.495 156.542 172.499 156.547 174.15 cv
156.586 187.897 li
156.591 189.543 157.758 190.204 159.19 189.377 cv
172.389 181.757 li
173.821 180.93 174.981 178.926 174.976 177.28 cv
174.937 163.532 li
cp
.257023 .623712 .0386053 0 cmyk
f
150.27 171.687 mo
149.799 171.413 149.147 171.452 148.427 171.868 cv
92.9975 203.87 li
91.5652 204.697 90.4091 206.699 90.4138 208.35 cv
90.4528 222.097 li
90.4551 222.915 90.7434 223.49 91.2086 223.761 cv
94.6458 225.758 li
94.1806 225.488 93.8922 224.913 93.8899 224.095 cv
93.8509 210.347 li
93.8462 208.697 95.0023 206.695 96.4346 205.868 cv
151.864 173.866 li
152.584 173.45 153.236 173.411 153.707 173.684 cv
150.27 171.687 li
cp
.181582 .527123 0 0 cmyk
f
92.9975 203.87 mo
91.5652 204.697 90.4091 206.699 90.4138 208.35 cv
93.8509 210.347 li
93.8462 208.697 95.0023 206.695 96.4346 205.868 cv
92.9975 203.87 li
cp
.0802014 .418494 0 0 cmyk
f
150.27 171.687 mo
149.799 171.413 149.147 171.452 148.427 171.868 cv
151.864 173.866 li
152.584 173.45 153.236 173.411 153.707 173.684 cv
150.27 171.687 li
cp
f
154.464 175.352 mo
154.46 173.702 153.296 173.039 151.864 173.866 cv
96.4346 205.868 li
95.0023 206.695 93.8462 208.697 93.8509 210.347 cv
93.8899 224.095 li
93.8946 225.741 95.0582 226.404 96.4905 225.577 cv
151.92 193.575 li
153.352 192.748 154.508 190.746 154.503 189.1 cv
154.464 175.352 li
cp
6.10361e-005 9.15541e-005 .0191043 0 cmyk
f
166.823 176.026 mo
165.204 178.118 162.946 179.046 161.789 178.095 cv
160.632 177.144 161.008 174.669 162.627 172.577 cv
164.246 170.486 166.504 169.558 167.661 170.509 cv
168.818 171.459 168.442 173.935 166.823 176.026 cv
cp
168.486 169.443 mo
167.004 168.225 164.111 169.414 162.038 172.093 cv
159.964 174.772 159.483 177.942 160.964 179.16 cv
162.26 180.225 164.635 179.45 166.597 177.447 cv
169.847 180.118 li
170.147 180.365 170.73 180.125 171.15 179.583 cv
171.57 179.04 171.667 178.401 171.367 178.154 cv
168.117 175.483 li
169.576 173.066 169.781 170.508 168.486 169.443 cv
cp
f
180.284 298.269 mo
180.191 298.152 180.044 298.093 179.897 298.109 cv
176.784 298.469 li
176.597 298.491 176.446 298.629 176.409 298.811 cv
176.387 298.919 176.406 299.026 176.458 299.116 cv
176.616 299.275 li
177.246 299.639 li
93.4102 348.041 li
93.4728 348.34 93.5298 348.639 93.5903 348.938 cv
178.113 300.139 li
179.107 300.712 li
179.218 300.777 179.354 300.789 179.476 300.743 cv
179.596 300.698 179.691 300.601 179.733 300.479 cv
180.356 298.681 li
180.404 298.541 180.376 298.381 180.284 298.269 cv
cp
f
112.788 359.316 mo
93.9042 348.414 li
93.9042 288.625 li
93.9042 288.387 93.7105 288.192 93.4711 288.192 cv
93.2317 288.192 93.038 288.387 93.038 288.625 cv
93.038 348.664 li
93.038 348.818 93.1209 348.962 93.2545 349.04 cv
112.355 360.067 li
112.572 360.124 li
112.721 360.124 112.867 360.046 112.946 359.908 cv
113.067 359.701 112.995 359.436 112.788 359.316 cv
cp
f
95.0089 288.096 mo
93.7638 286.658 li
93.6665 286.546 93.5134 286.49 93.3704 286.514 cv
93.2233 286.536 93.0981 286.634 93.0389 286.77 cv
91.7937 289.646 li
91.7193 289.818 91.7633 290.018 91.9029 290.141 cv
91.9849 290.214 92.0873 290.251 92.1913 290.251 cv
92.4078 290.194 li
94.8981 288.756 li
95.0097 288.691 95.0875 288.58 95.1087 288.451 cv
95.1298 288.324 95.0935 288.194 95.0089 288.096 cv
cp
f
114.435 360.509 mo
114.076 358.641 li
114.048 358.495 113.943 358.37 113.807 358.319 cv
113.669 358.265 113.511 358.287 113.392 358.375 cv
110.876 360.243 li
110.725 360.355 110.664 360.55 110.723 360.727 cv
110.757 360.831 110.827 360.914 110.918 360.966 cv
111.134 361.025 li
114.009 361.025 li
114.138 361.025 114.261 360.967 114.344 360.866 cv
114.426 360.767 114.459 360.636 114.435 360.509 cv
cp
f
175.608 262.657 mo
189.946 254.379 li
175.608 246.101 li
161.27 254.379 li
175.608 262.657 li
cp
.0802014 .418494 0 0 cmyk
f
175.608 321.264 mo
189.946 312.986 li
189.946 254.379 li
175.608 262.657 li
175.608 321.264 li
cp
.257023 .623712 .0386053 0 cmyk
f
161.27 312.986 mo
175.608 321.264 li
175.608 262.657 li
161.27 254.379 li
161.27 312.986 li
cp
.423011 .71606 .150362 .00448615 cmyk
f
155.171 295.104 mo
169.509 286.826 li
155.171 278.548 li
140.833 286.826 li
155.171 295.104 li
cp
.0802014 .418494 0 0 cmyk
f
155.171 333.064 mo
169.509 324.785 li
169.509 286.826 li
155.171 295.104 li
155.171 333.064 li
cp
.257023 .623712 .0386053 0 cmyk
f
140.833 324.785 mo
155.171 333.064 li
155.171 295.104 li
140.833 286.826 li
140.833 324.785 li
cp
.423011 .71606 .150362 .00448615 cmyk
f
134.734 318.223 mo
149.072 309.945 li
134.734 301.667 li
120.396 309.945 li
134.734 318.223 li
cp
.0802014 .418494 0 0 cmyk
f
134.734 344.863 mo
149.072 336.585 li
149.072 309.945 li
134.734 318.223 li
134.734 344.863 li
cp
.257023 .623712 .0386053 0 cmyk
f
120.396 336.585 mo
134.734 344.863 li
134.734 318.223 li
120.396 309.945 li
120.396 336.585 li
cp
.423011 .71606 .150362 .00448615 cmyk
f
114.297 341.822 mo
128.635 333.543 li
114.297 325.265 li
99.9588 333.543 li
114.297 341.822 li
cp
.0802014 .418494 0 0 cmyk
f
114.297 356.662 mo
128.635 348.384 li
128.635 333.543 li
114.297 341.822 li
114.297 356.662 li
cp
.257023 .623712 .0386053 0 cmyk
f
99.9588 348.384 mo
114.297 356.662 li
114.297 341.822 li
99.9588 333.543 li
99.9588 348.384 li
cp
.423011 .71606 .150362 .00448615 cmyk
f
185.349 100.693 mo
183.463 99.597 li
182.359 91.7257 li
184.245 92.8216 li
185.349 100.693 li
cp
f
184.245 92.8216 mo
182.359 91.7257 li
187.582 82.5802 li
189.468 83.6761 li
184.245 92.8216 li
cp
f
178.654 100.714 mo
176.768 99.6183 li
183.463 99.597 li
185.349 100.693 li
182.191 100.91 li
178.654 100.714 li
cp
.110719 .436713 0 0 cmyk
f
171.968 108.389 mo
170.082 107.293 li
176.768 99.6183 li
178.654 100.714 li
171.968 108.389 li
cp
.423011 .71606 .150362 .00448615 cmyk
f
177.843 100.246 mo
177.821 80.3844 li
174.37 89.9961 li
167.003 95.6607 li
172.244 98.7894 li
171.157 107.921 li
177.843 100.246 li
cp
0 .445411 .444862 0 cmyk
f
182.721 85.1379 mo
180.835 84.042 li
189.532 80.7318 li
191.418 81.8278 li
182.721 85.1379 li
cp
.0571298 .35761 0 0 cmyk
f
170.765 110.991 mo
168.879 109.895 li
170.195 98.8397 li
172.142 100.118 li
170.765 110.991 li
cp
.423011 .71606 .150362 .00448615 cmyk
f
182.1 86.4844 mo
180.215 85.3885 li
176.746 79.7567 li
178.632 80.8527 li
182.1 86.4844 li
cp
f
174.559 89.8355 mo
172.673 88.7395 li
176.744 77.3986 li
178.63 78.4945 li
174.559 89.8355 li
cp
f
185.349 100.693 mo
184.245 92.8216 li
189.468 83.6761 li
182.1 86.4844 li
178.632 80.8527 li
175.181 90.4644 li
167.814 96.129 li
173.055 99.2576 li
171.968 108.389 li
178.654 100.714 li
185.349 100.693 li
cp
191.418 81.8278 mo
185.254 92.6176 li
186.555 101.909 li
178.653 101.934 li
170.765 110.991 li
172.048 100.213 li
165.864 96.5221 li
174.559 89.8355 li
178.63 78.4945 li
182.721 85.1379 li
191.418 81.8278 li
cp
.257023 .623712 .0386053 0 cmyk
f
165.864 96.5221 mo
163.978 95.4262 li
172.673 88.7395 li
174.559 89.8355 li
165.864 96.5221 li
cp
.0802014 .418494 0 0 cmyk
f
131.496 131.785 mo
129.61 130.689 li
128.505 122.818 li
130.391 123.914 li
131.496 131.785 li
cp
.423011 .71606 .150362 .00448615 cmyk
f
130.391 123.914 mo
128.505 122.818 li
133.728 113.673 li
135.614 114.768 li
130.391 123.914 li
cp
f
124.801 131.807 mo
122.915 130.711 li
129.61 130.689 li
131.496 131.785 li
128.337 132.002 li
124.801 131.807 li
cp
.110719 .436713 0 0 cmyk
f
118.115 139.481 mo
116.229 138.385 li
122.915 130.711 li
124.801 131.807 li
118.115 139.481 li
cp
.423011 .71606 .150362 .00448615 cmyk
f
128.247 117.577 mo
126.361 116.481 li
122.893 110.849 li
124.779 111.945 li
128.247 117.577 li
cp
f
130.685 131.317 mo
129.58 123.446 li
134.803 114.3 li
128.247 117.577 li
127.436 117.108 li
123.968 111.477 li
120.517 121.088 li
113.149 126.753 li
118.39 129.882 li
117.304 139.013 li
123.99 131.338 li
130.685 131.317 li
cp
0 .445411 .444862 0 cmyk
f
128.868 116.23 mo
126.982 115.134 li
135.678 111.824 li
137.564 112.92 li
128.868 116.23 li
cp
.0571298 .35761 0 0 cmyk
f
116.911 142.083 mo
115.025 140.987 li
116.341 129.932 li
118.288 131.211 li
116.911 142.083 li
cp
.423011 .71606 .150362 .00448615 cmyk
f
120.706 120.928 mo
118.82 119.832 li
122.89 108.491 li
124.776 109.587 li
120.706 120.928 li
cp
f
131.496 131.785 mo
130.391 123.914 li
135.614 114.768 li
128.247 117.577 li
124.779 111.945 li
121.328 121.557 li
113.96 127.221 li
119.201 130.35 li
118.115 139.481 li
124.801 131.807 li
131.496 131.785 li
cp
137.564 112.92 mo
131.4 123.71 li
132.701 133.002 li
124.8 133.026 li
116.911 142.083 li
118.194 131.305 li
112.011 127.614 li
120.706 120.928 li
124.776 109.587 li
128.868 116.23 li
137.564 112.92 li
cp
.257023 .623712 .0386053 0 cmyk
f
112.011 127.614 mo
110.125 126.519 li
118.82 119.832 li
120.706 120.928 li
112.011 127.614 li
cp
.0802014 .418494 0 0 cmyk
f
158.424 116.238 mo
156.538 115.142 li
155.434 107.271 li
157.319 108.367 li
158.424 116.238 li
cp
.423011 .71606 .150362 .00448615 cmyk
f
157.319 108.367 mo
155.434 107.271 li
160.657 98.1255 li
162.543 99.2214 li
157.319 108.367 li
cp
f
151.729 116.26 mo
149.843 115.164 li
156.538 115.142 li
158.424 116.238 li
155.266 116.455 li
151.729 116.26 li
cp
.110719 .436713 0 0 cmyk
f
145.043 123.934 mo
143.157 122.838 li
149.843 115.164 li
151.729 116.26 li
145.043 123.934 li
cp
.423011 .71606 .150362 .00448615 cmyk
f
155.175 102.03 mo
153.289 100.934 li
149.821 95.302 li
151.707 96.398 li
155.175 102.03 li
cp
f
157.613 115.77 mo
156.508 107.899 li
161.731 98.7531 li
155.175 102.03 li
154.364 101.561 li
150.896 95.9297 li
147.445 105.541 li
140.077 111.206 li
145.318 114.335 li
144.232 123.466 li
150.918 115.791 li
157.613 115.77 li
cp
0 .445411 .444862 0 cmyk
f
155.796 100.683 mo
153.91 99.5873 li
162.606 96.2771 li
164.492 97.3731 li
155.796 100.683 li
cp
.0571298 .35761 0 0 cmyk
f
143.84 126.536 mo
141.954 125.44 li
143.27 114.385 li
145.217 115.664 li
143.84 126.536 li
cp
.423011 .71606 .150362 .00448615 cmyk
f
147.634 105.381 mo
145.748 104.285 li
149.819 92.9439 li
151.705 94.0398 li
147.634 105.381 li
cp
f
158.424 116.238 mo
157.319 108.367 li
162.543 99.2214 li
155.175 102.03 li
151.707 96.398 li
148.256 106.01 li
140.888 111.674 li
146.129 114.803 li
145.043 123.934 li
151.729 116.26 li
158.424 116.238 li
cp
164.492 97.3731 mo
158.328 108.163 li
159.63 117.454 li
151.728 117.479 li
143.84 126.536 li
145.122 115.758 li
138.939 112.067 li
147.634 105.381 li
151.705 94.0398 li
155.796 100.683 li
164.492 97.3731 li
cp
.257023 .623712 .0386053 0 cmyk
f
138.939 112.067 mo
137.053 110.971 li
145.748 104.285 li
147.634 105.381 li
138.939 112.067 li
cp
.0802014 .418494 0 0 cmyk
f
104.573 147.329 mo
102.687 146.233 li
101.583 138.362 li
103.469 139.458 li
104.573 147.329 li
cp
.423011 .71606 .150362 .00448615 cmyk
f
103.469 139.458 mo
101.583 138.362 li
106.806 129.216 li
108.692 130.312 li
103.469 139.458 li
cp
f
97.8783 147.35 mo
95.9925 146.254 li
102.687 146.233 li
104.573 147.329 li
101.415 147.546 li
97.8783 147.35 li
cp
.110719 .436713 0 0 cmyk
f
91.1922 155.025 mo
89.3063 153.929 li
95.9925 146.254 li
97.8783 147.35 li
91.1922 155.025 li
cp
.423011 .71606 .150362 .00448615 cmyk
f
101.325 133.12 mo
99.4387 132.024 li
95.9704 126.393 li
97.8563 127.489 li
101.325 133.12 li
cp
f
103.762 146.861 mo
102.658 138.989 li
107.881 129.844 li
101.325 133.12 li
100.513 132.652 li
97.0452 127.02 li
93.5945 136.632 li
86.2267 142.297 li
91.4676 145.425 li
90.3812 154.557 li
97.0673 146.882 li
103.762 146.861 li
cp
0 .445411 .444862 0 cmyk
f
101.945 131.774 mo
100.059 130.678 li
108.756 127.368 li
110.642 128.464 li
101.945 131.774 li
cp
.0571298 .35761 0 0 cmyk
f
89.9889 157.627 mo
88.1031 156.531 li
89.4188 145.476 li
91.3658 146.754 li
89.9889 157.627 li
cp
.423011 .71606 .150362 .00448615 cmyk
f
93.7834 136.471 mo
91.8975 135.376 li
95.968 124.035 li
97.8538 125.131 li
93.7834 136.471 li
cp
f
104.573 147.329 mo
103.469 139.458 li
108.692 130.312 li
101.325 133.12 li
97.8563 127.489 li
94.4055 137.1 li
87.0378 142.765 li
92.2786 145.894 li
91.1922 155.025 li
97.8783 147.35 li
104.573 147.329 li
cp
110.642 128.464 mo
104.478 139.254 li
105.779 148.545 li
97.8775 148.57 li
89.9889 157.627 li
91.2717 146.849 li
85.0881 143.158 li
93.7834 136.471 li
97.8538 125.131 li
101.945 131.774 li
110.642 128.464 li
cp
.257023 .623712 .0386053 0 cmyk
f
85.0881 143.158 mo
83.2022 142.062 li
91.8975 135.376 li
93.7834 136.471 li
85.0881 143.158 li
cp
.0802014 .418494 0 0 cmyk
f
315.996 197.082 mo
315.996 196.135 li
319.885 193.889 li
319.885 194.836 li
315.996 197.082 li
315.996 194.51 mo
315.996 193.564 li
322.785 189.644 li
322.785 190.591 li
315.996 194.51 li
321.158 194.101 mo
321.158 193.154 li
327.417 189.541 li
327.417 190.488 li
321.158 194.101 li
315.996 191.939 mo
315.996 190.992 li
319.885 188.747 li
319.885 189.694 li
315.996 191.939 li
324.058 189.856 mo
324.058 188.909 li
330.846 184.99 li
330.846 185.937 li
324.058 189.856 li
328.689 189.753 mo
328.689 188.806 li
332.897 186.377 li
332.897 187.324 li
328.689 189.753 li
315.996 189.368 mo
315.996 188.421 li
322.785 184.502 li
322.785 185.449 li
315.996 189.368 li
321.158 188.959 mo
321.158 188.012 li
327.417 184.399 li
327.417 185.346 li
321.158 188.959 li
315.996 186.797 mo
315.996 185.85 li
319.885 183.604 li
319.885 184.551 li
315.996 186.797 li
334.17 186.589 mo
334.17 185.642 li
343.098 180.488 li
343.098 181.435 li
334.17 186.589 li
332.119 185.202 mo
332.119 184.255 li
334.948 182.622 li
334.948 183.569 li
332.119 185.202 li
324.058 184.714 mo
324.058 183.767 li
330.846 179.847 li
330.846 180.794 li
324.058 184.714 li
328.689 184.611 mo
328.689 183.664 li
332.897 181.234 li
332.897 182.182 li
328.689 184.611 li
315.996 184.225 mo
315.996 183.278 li
322.785 179.359 li
322.785 180.306 li
315.996 184.225 li
321.158 183.816 mo
321.158 182.869 li
327.417 179.256 li
327.417 180.203 li
321.158 183.816 li
336.221 182.834 mo
336.221 181.887 li
343.098 177.917 li
343.098 178.863 li
336.221 182.834 li
334.17 181.447 mo
334.17 180.5 li
343.098 175.345 li
343.098 176.292 li
334.17 181.447 li
332.119 180.059 mo
332.119 179.112 li
334.948 177.479 li
334.948 178.426 li
332.119 180.059 li
324.058 179.571 mo
324.058 178.624 li
330.846 174.705 li
330.846 175.652 li
324.058 179.571 li
328.689 179.468 mo
328.689 178.521 li
332.897 176.092 li
332.897 177.039 li
328.689 179.468 li
336.221 177.691 mo
336.221 176.744 li
343.098 172.774 li
343.098 173.721 li
336.221 177.691 li
334.17 176.304 mo
334.17 175.357 li
343.098 170.203 li
343.098 171.15 li
334.17 176.304 li
332.119 174.917 mo
332.119 173.97 li
334.948 172.337 li
334.948 173.284 li
332.119 174.917 li
336.221 172.549 mo
336.221 171.602 li
343.098 167.631 li
343.098 168.578 li
336.221 172.549 li
0 0 .00222782 0 cmyk
f
315.925 217.645 mo
315.925 216.698 li
319.815 214.452 li
319.815 215.399 li
315.925 217.645 li
315.925 215.073 mo
315.925 214.126 li
322.714 210.207 li
322.714 211.154 li
315.925 215.073 li
321.088 214.664 mo
321.088 213.717 li
327.346 210.104 li
327.346 211.051 li
321.088 214.664 li
315.925 212.502 mo
315.925 211.555 li
319.815 209.309 li
319.815 210.257 li
315.925 212.502 li
323.987 210.419 mo
323.987 209.472 li
332.82 204.372 li
332.82 205.319 li
323.987 210.419 li
328.619 210.316 mo
328.619 209.369 li
332.826 206.94 li
332.826 207.887 li
328.619 210.316 li
315.925 209.931 mo
315.925 208.984 li
322.714 205.064 li
322.714 206.011 li
315.925 209.931 li
321.088 209.522 mo
321.088 208.575 li
327.346 204.961 li
327.346 205.908 li
321.088 209.522 li
315.925 207.36 mo
315.925 206.413 li
319.815 204.167 li
319.815 205.114 li
315.925 207.36 li
323.987 205.276 mo
323.987 204.33 li
332.82 199.23 li
332.82 200.177 li
323.987 205.276 li
328.619 205.174 mo
328.619 204.227 li
332.826 201.797 li
332.826 202.744 li
328.619 205.174 li
315.925 204.788 mo
315.925 203.841 li
322.714 199.922 li
322.714 200.869 li
315.925 204.788 li
321.088 204.379 mo
321.088 203.432 li
327.346 199.819 li
327.346 200.766 li
321.088 204.379 li
323.987 200.134 mo
323.987 199.187 li
332.82 194.087 li
332.82 195.034 li
323.987 200.134 li
328.619 200.031 mo
328.619 199.084 li
332.826 196.655 li
332.826 197.602 li
328.619 200.031 li
f
68.7702 205.554 mo
68.7702 204.607 li
72.6596 202.361 li
72.6596 203.308 li
68.7702 205.554 li
68.7702 202.982 mo
68.7702 202.035 li
75.5588 198.116 li
75.5588 199.063 li
68.7702 202.982 li
73.9324 202.573 mo
73.9324 201.626 li
80.1907 198.013 li
80.1907 198.96 li
73.9324 202.573 li
68.7702 200.411 mo
68.7702 199.464 li
72.6596 197.219 li
72.6596 198.166 li
68.7702 200.411 li
76.8317 198.328 mo
76.8317 197.381 li
83.6203 193.462 li
83.6203 194.409 li
76.8317 198.328 li
81.4635 198.225 mo
81.4635 197.278 li
85.671 194.849 li
85.671 195.796 li
81.4635 198.225 li
73.9324 197.431 mo
73.9324 196.484 li
80.1907 192.87 li
80.1907 193.818 li
73.9324 197.431 li
86.944 195.061 mo
86.944 194.114 li
95.8717 188.96 li
95.8717 189.907 li
86.944 195.061 li
84.8932 193.674 mo
84.8932 192.727 li
87.7217 191.094 li
87.7217 192.041 li
84.8932 193.674 li
81.4635 193.083 mo
81.4635 192.136 li
85.671 189.706 li
85.671 190.653 li
81.4635 193.083 li
88.9947 191.306 mo
88.9947 190.359 li
95.8717 186.388 li
95.8717 187.335 li
88.9947 191.306 li
86.944 189.919 mo
86.944 188.972 li
95.8717 183.817 li
95.8717 184.764 li
86.944 189.919 li
f
81.8746 187.291 mo
81.8746 186.344 li
84.2529 184.971 li
84.2529 185.918 li
81.8746 187.291 li
85.5258 185.183 mo
85.5258 184.236 li
89.6507 181.854 li
89.6507 182.801 li
85.5258 185.183 li
81.8746 184.72 mo
81.8746 183.773 li
87.1521 180.726 li
87.1521 181.673 li
81.8746 184.72 li
81.8746 182.148 mo
81.8746 181.201 li
84.2529 179.828 li
84.2529 180.775 li
81.8746 182.148 li
90.9237 182.067 mo
90.9237 181.12 li
95.8778 178.259 li
95.8778 179.206 li
90.9237 182.067 li
88.425 180.938 mo
88.425 179.991 li
93.0804 177.303 li
93.0804 178.25 li
88.425 180.938 li
85.5258 180.04 mo
85.5258 179.094 li
89.6507 176.712 li
89.6507 177.659 li
85.5258 180.04 li
94.3532 177.515 mo
94.3532 176.568 li
95.8219 175.72 li
95.8219 176.667 li
94.3532 177.515 li
90.9237 176.924 mo
90.9237 175.977 li
95.78 173.173 li
95.78 174.12 li
90.9237 176.924 li
f
187.495 339.543 mo
176.517 338.539 li
176.901 337.139 177.9 336.008 179.636 335.005 cv
187.495 339.543 li
cp
.692714 .656947 0 0 cmyk
f
187.495 339.543 mo
182.449 345.26 li
178.074 343.973 175.749 341.339 176.517 338.539 cv
187.495 339.543 li
cp
f
187.495 339.543 mo
195.353 344.08 li
191.881 346.085 186.824 346.547 182.449 345.26 cv
187.495 339.543 li
cp
.0802014 .418494 0 0 cmyk
f
187.495 339.543 mo
198.472 338.539 li
199.048 340.639 197.958 342.577 195.353 344.08 cv
187.495 339.543 li
cp
f
187.495 339.543 mo
192.54 333.825 li
195.822 334.791 197.896 336.439 198.472 338.539 cv
187.495 339.543 li
cp
0 0 0 0 cmyk
f
187.495 339.543 mo
179.636 335.005 li
183.108 333.001 188.165 332.538 192.54 333.825 cv
187.495 339.543 li
cp
.257023 .623712 .0386053 0 cmyk
f
207.096 328.209 mo
210.834 334.287 li
208.509 334.764 206.299 334.798 203.933 334.395 cv
207.096 328.209 li
cp
.692714 .656947 0 0 cmyk
f
207.096 328.209 mo
217.809 330.036 li
216.761 332.085 214.322 333.572 210.834 334.287 cv
207.096 328.209 li
cp
0 0 0 0 cmyk
f
207.096 328.209 mo
203.933 334.395 li
198.016 333.386 194.635 329.799 196.382 326.383 cv
198.129 322.967 204.342 321.015 210.259 322.024 cv
212.626 322.427 214.448 323.149 215.952 324.279 cv
207.096 328.209 li
cp
.257023 .623712 .0386053 0 cmyk
f
207.096 328.209 mo
215.952 324.279 li
218.208 325.973 218.858 327.986 217.809 330.036 cv
207.096 328.209 li
cp
.0802014 .418494 0 0 cmyk
f
173.33 355.54 mo
182.084 350.486 li
181.155 349.95 li
172.402 355.004 li
173.33 355.54 li
cp
167.957 358.643 mo
172.082 356.261 li
171.154 355.725 li
167.028 358.107 li
167.957 358.643 li
cp
160.572 362.906 mo
166.709 359.363 li
165.78 358.827 li
159.644 362.37 li
160.572 362.906 li
cp
155.511 365.828 mo
159.324 363.627 li
158.396 363.091 li
154.582 365.292 li
155.511 365.828 li
cp
150.831 368.531 mo
154.263 366.549 li
153.334 366.013 li
149.902 367.995 li
150.831 368.531 li
cp
146.775 370.872 mo
149.583 369.251 li
148.654 368.715 li
145.846 370.336 li
146.775 370.872 li
cp
138.818 375.466 mo
145.526 371.593 li
144.598 371.057 li
137.889 374.93 li
138.818 375.466 li
cp
172.82 352.924 mo
179.563 349.031 li
178.634 348.494 li
171.891 352.388 li
172.82 352.924 li
cp
168.798 355.246 mo
171.572 353.644 li
170.643 353.108 li
167.87 354.709 li
168.798 355.246 li
cp
166.622 355.43 mo
159.966 359.273 li
160.894 359.809 li
167.55 355.966 li
166.622 355.43 li
cp
158.717 359.994 mo
152.061 363.837 li
152.99 364.373 li
159.646 360.53 li
158.717 359.994 li
cp
145.917 368.456 mo
151.742 365.093 li
150.813 364.557 li
144.989 367.92 li
145.917 368.456 li
cp
141.861 370.798 mo
144.669 369.177 li
143.741 368.641 li
140.933 370.262 li
141.861 370.798 li
cp
139.685 370.982 mo
135.368 373.474 li
136.297 374.011 li
140.613 371.519 li
139.685 370.982 li
cp
168.288 352.629 mo
177.042 347.575 li
176.113 347.039 li
167.359 352.093 li
168.288 352.629 li
cp
162.914 355.731 mo
167.04 353.35 li
166.111 352.814 li
161.986 355.195 li
162.914 355.731 li
cp
155.53 359.995 mo
161.666 356.452 li
160.738 355.916 li
154.602 359.459 li
155.53 359.995 li
cp
153.353 360.179 mo
149.54 362.381 li
150.469 362.917 li
154.282 360.716 li
153.353 360.179 li
cp
145.788 365.619 mo
149.22 363.638 li
148.292 363.102 li
144.86 365.083 li
145.788 365.619 li
cp
143.612 365.804 mo
140.804 367.425 li
141.732 367.961 li
144.54 366.34 li
143.612 365.804 li
cp
139.556 368.146 mo
132.847 372.019 li
133.776 372.555 li
140.484 368.682 li
139.556 368.146 li
cp
167.778 350.012 mo
174.521 346.119 li
173.592 345.583 li
166.849 349.476 li
167.778 350.012 li
cp
165.601 350.197 mo
162.828 351.798 li
163.756 352.334 li
166.53 350.733 li
165.601 350.197 li
cp
161.579 352.519 mo
154.923 356.362 li
155.852 356.898 li
162.508 353.055 li
161.579 352.519 li
cp
153.675 357.082 mo
147.019 360.926 li
147.947 361.462 li
154.604 357.619 li
153.675 357.082 li
cp
140.875 365.545 mo
146.699 362.182 li
145.771 361.646 li
139.947 365.009 li
140.875 365.545 li
cp
136.819 367.887 mo
139.627 366.265 li
138.698 365.729 li
135.89 367.351 li
136.819 367.887 li
cp
134.642 368.071 mo
130.326 370.563 li
131.255 371.099 li
135.571 368.607 li
134.642 368.071 li
cp
163.246 349.718 mo
171.999 344.664 li
171.071 344.128 li
162.317 349.182 li
163.246 349.718 li
cp
157.872 352.82 mo
161.998 350.438 li
161.069 349.902 li
156.944 352.284 li
157.872 352.82 li
cp
155.696 353.005 mo
149.559 356.548 li
150.488 357.084 li
156.624 353.541 li
155.696 353.005 li
cp
148.311 357.268 mo
144.498 359.47 li
145.426 360.006 li
149.24 357.804 li
148.311 357.268 li
cp
140.746 362.708 mo
144.178 360.727 li
143.25 360.191 li
139.817 362.172 li
140.746 362.708 li
cp
138.569 362.893 mo
135.761 364.514 li
136.69 365.05 li
139.498 363.429 li
138.569 362.893 li
cp
134.513 365.234 mo
127.805 369.108 li
128.733 369.644 li
135.442 365.771 li
134.513 365.234 li
cp
161.807 346.565 mo
162.735 347.101 li
169.478 343.208 li
168.55 342.672 li
161.807 346.565 li
cp
160.559 347.286 mo
157.785 348.887 li
158.714 349.423 li
161.487 347.822 li
160.559 347.286 li
cp
156.537 349.608 mo
149.881 353.451 li
150.809 353.987 li
157.466 350.144 li
156.537 349.608 li
cp
148.633 354.171 mo
141.977 358.014 li
142.905 358.55 li
149.561 354.707 li
148.633 354.171 li
cp
135.833 362.634 mo
141.657 359.271 li
140.728 358.735 li
134.904 362.098 li
135.833 362.634 li
cp
133.656 362.818 mo
130.848 364.439 li
131.777 364.976 li
134.585 363.354 li
133.656 362.818 li
cp
130.529 365.696 mo
126.212 368.188 li
125.284 367.652 li
129.6 365.16 li
130.529 365.696 li
cp
.0390326 .32462 0 0 cmyk
f
342.289 230.787 mo
340.486 231.828 337.563 231.828 335.761 230.787 cv
333.958 229.746 333.958 228.059 335.761 227.018 cv
337.563 225.977 340.486 225.977 342.289 227.018 cv
344.092 228.059 344.092 229.746 342.289 230.787 cv
cp
.134981 .462776 0 0 cmyk
f
343.641 228.878 mo
343.641 249.97 li
343.652 250.661 343.201 251.353 342.289 251.88 cv
340.486 252.92 337.563 252.92 335.761 251.88 cv
334.87 251.365 334.42 250.693 334.409 250.02 cv
334.409 228.927 li
334.42 229.601 334.87 230.273 335.761 230.787 cv
337.563 231.828 340.486 231.828 342.289 230.787 cv
343.201 230.26 343.652 229.568 343.641 228.878 cv
cp
.423011 .71606 .150362 .00448615 cmyk
f
326.343 226.457 mo
326.325 232.71 li
324.53 230.226 li
324.547 223.974 li
326.343 226.457 li
cp
f
353.762 224.177 mo
353.744 230.429 li
351.904 233.02 li
351.921 226.768 li
353.762 224.177 li
cp
.177218 .581048 0 0 cmyk
f
325.5 232.743 mo
325.482 238.996 li
321.21 237.968 li
321.215 231.716 li
325.5 232.743 li
cp
.423011 .71606 .150362 .00448615 cmyk
f
356.848 231.999 mo
356.843 238.251 li
352.362 239.325 li
351.481 235.662 li
352.38 233.073 li
356.848 231.999 li
cp
.257023 .623712 .0386053 0 cmyk
f
326.115 233.662 mo
326.097 239.914 li
325.86 239.608 325.663 239.307 325.482 238.996 cv
325.5 232.743 li
325.681 233.054 325.878 233.356 326.115 233.662 cv
cp
.423011 .71606 .150362 .00448615 cmyk
f
352.38 233.073 mo
352.362 239.325 li
352.169 239.627 351.943 239.928 351.684 240.221 cv
351.702 233.968 li
351.96 233.676 352.186 233.375 352.38 233.073 cv
cp
f
334.128 237.941 mo
334.11 244.193 li
333.589 244.08 333.067 243.948 332.562 243.797 cv
332.58 237.545 li
333.085 237.696 333.607 237.828 334.128 237.941 cv
cp
f
345.003 237.7 mo
344.985 243.953 li
344.474 244.089 343.945 244.207 343.417 244.306 cv
343.435 238.054 li
343.963 237.955 344.491 237.837 345.003 237.7 cv
cp
f
332.58 237.545 mo
332.562 243.797 li
328.281 244.829 li
328.299 238.577 li
332.58 237.545 li
cp
.257023 .623712 .0386053 0 cmyk
f
328.299 238.577 mo
328.281 244.829 li
324.257 242.506 li
324.275 236.254 li
328.299 238.577 li
cp
.423011 .71606 .150362 .00448615 cmyk
f
349.491 238.77 mo
349.474 245.022 li
344.985 243.953 li
345.003 237.7 li
349.491 238.77 li
cp
f
353.489 236.447 mo
353.471 242.699 li
349.474 245.022 li
349.491 238.77 li
353.489 236.447 li
cp
.177218 .581048 0 0 cmyk
f
343.435 238.054 mo
343.417 244.306 li
341.65 246.789 li
341.667 240.537 li
343.435 238.054 li
cp
f
335.997 240.533 mo
335.979 246.785 li
334.11 244.193 li
334.128 237.941 li
335.997 240.533 li
cp
.423011 .71606 .150362 .00448615 cmyk
f
341.667 240.537 mo
341.65 246.789 li
335.979 246.785 li
335.997 240.533 li
341.667 240.537 li
cp
.257023 .623712 .0386053 0 cmyk
f
353.762 224.177 mo
351.921 226.768 li
352.159 227.065 352.364 227.371 352.545 227.682 cv
356.842 228.71 li
356.848 231.999 li
352.38 233.073 li
352.186 233.375 351.96 233.676 351.702 233.968 cv
353.489 236.447 li
349.491 238.77 li
345.003 237.7 li
344.491 237.837 343.963 237.955 343.435 238.054 cv
341.667 240.537 li
335.997 240.533 li
334.128 237.941 li
333.607 237.828 333.085 237.696 332.58 237.545 cv
328.299 238.577 li
324.275 236.254 li
326.115 233.662 li
325.878 233.356 325.681 233.054 325.5 232.743 cv
321.215 231.716 li
321.201 228.432 li
325.665 227.353 li
325.858 227.051 326.084 226.75 326.343 226.457 cv
324.547 223.974 li
328.545 221.651 li
333.025 222.725 li
333.545 222.593 334.073 222.476 334.61 222.372 cv
336.369 219.893 li
342.039 219.889 li
343.917 222.485 li
344.438 222.598 344.959 222.73 345.465 222.881 cv
349.738 221.854 li
353.762 224.177 li
cp
.0802014 .418494 0 0 cmyk
f
344.252 230.361 mo
341.365 232.028 336.685 232.028 333.798 230.361 cv
330.911 228.694 330.911 225.992 333.798 224.325 cv
336.685 222.659 341.365 222.659 344.252 224.325 cv
347.138 225.992 347.138 228.694 344.252 230.361 cv
cp
f
341.638 228.852 mo
340.195 229.685 337.855 229.685 336.411 228.852 cv
334.968 228.019 334.968 226.668 336.411 225.834 cv
337.855 225.001 340.195 225.001 341.638 225.834 cv
343.081 226.668 343.081 228.019 341.638 228.852 cv
cp
.774777 .759884 0 0 cmyk
f
346.416 227.304 mo
346.416 229.934 li
346.434 231.039 345.712 232.148 344.252 232.991 cv
341.365 234.658 336.685 234.658 333.798 232.991 cv
332.372 232.168 331.65 231.092 331.633 230.012 cv
331.633 227.383 li
331.65 228.462 332.372 229.538 333.798 230.361 cv
336.685 232.028 341.365 232.028 344.252 230.361 cv
345.712 229.518 346.434 228.409 346.416 227.304 cv
cp
.257023 .623712 .0386053 0 cmyk
f
372.054 241.348 mo
370.251 242.388 367.328 242.388 365.525 241.348 cv
363.723 240.307 363.723 238.619 365.525 237.579 cv
367.328 236.538 370.251 236.538 372.054 237.579 cv
373.856 238.619 373.856 240.307 372.054 241.348 cv
cp
.134981 .462776 0 0 cmyk
f
373.405 239.439 mo
373.405 260.531 li
373.416 261.221 372.966 261.913 372.054 262.44 cv
370.251 263.481 367.328 263.481 365.525 262.44 cv
364.635 261.926 364.184 261.254 364.174 260.58 cv
364.174 239.488 li
364.184 240.162 364.635 240.833 365.525 241.348 cv
367.328 242.388 370.251 242.388 372.054 241.348 cv
372.966 240.821 373.416 240.129 373.405 239.439 cv
cp
.423011 .71606 .150362 .00448615 cmyk
f
356.108 237.018 mo
356.09 243.27 li
354.294 240.787 li
354.312 234.535 li
356.108 237.018 li
cp
f
383.526 234.737 mo
383.509 240.989 li
381.668 243.581 li
381.686 237.329 li
383.526 234.737 li
cp
.177218 .581048 0 0 cmyk
f
355.264 243.304 mo
355.247 249.556 li
350.975 248.529 li
350.98 242.277 li
355.264 243.304 li
cp
.423011 .71606 .150362 .00448615 cmyk
f
386.613 242.559 mo
386.608 248.811 li
382.127 249.886 li
381.246 246.223 li
382.145 243.634 li
386.613 242.559 li
cp
.257023 .623712 .0386053 0 cmyk
f
355.88 244.223 mo
355.862 250.475 li
355.624 250.169 355.427 249.867 355.247 249.556 cv
355.264 243.304 li
355.445 243.615 355.642 243.916 355.88 244.223 cv
cp
.423011 .71606 .150362 .00448615 cmyk
f
382.145 243.634 mo
382.127 249.886 li
381.933 250.187 381.707 250.489 381.449 250.781 cv
381.466 244.529 li
381.725 244.237 381.951 243.935 382.145 243.634 cv
cp
f
363.892 248.501 mo
363.875 254.754 li
363.353 254.64 362.832 254.508 362.327 254.358 cv
362.345 248.106 li
362.85 248.256 363.371 248.388 363.892 248.501 cv
cp
f
374.768 248.261 mo
374.75 254.513 li
374.238 254.65 373.71 254.768 373.182 254.867 cv
373.2 248.614 li
373.728 248.515 374.256 248.398 374.768 248.261 cv
cp
f
362.345 248.106 mo
362.327 254.358 li
358.046 255.39 li
358.063 249.137 li
362.345 248.106 li
cp
.257023 .623712 .0386053 0 cmyk
f
358.063 249.137 mo
358.046 255.39 li
354.022 253.067 li
354.04 246.814 li
358.063 249.137 li
cp
.423011 .71606 .150362 .00448615 cmyk
f
379.256 249.331 mo
379.238 255.583 li
374.75 254.513 li
374.768 248.261 li
379.256 249.331 li
cp
f
383.254 247.008 mo
383.236 253.26 li
379.238 255.583 li
379.256 249.331 li
383.254 247.008 li
cp
.177218 .581048 0 0 cmyk
f
373.2 248.614 mo
373.182 254.867 li
371.414 257.35 li
371.432 251.098 li
373.2 248.614 li
cp
f
365.762 251.093 mo
365.744 257.345 li
363.875 254.754 li
363.892 248.501 li
365.762 251.093 li
cp
.423011 .71606 .150362 .00448615 cmyk
f
371.432 251.098 mo
371.414 257.35 li
365.744 257.345 li
365.762 251.093 li
371.432 251.098 li
cp
.257023 .623712 .0386053 0 cmyk
f
383.526 234.737 mo
381.686 237.329 li
381.924 237.626 382.129 237.932 382.309 238.243 cv
386.607 239.27 li
386.613 242.559 li
382.145 243.634 li
381.951 243.935 381.725 244.237 381.466 244.529 cv
383.254 247.008 li
379.256 249.331 li
374.768 248.261 li
374.256 248.398 373.728 248.515 373.2 248.614 cv
371.432 251.098 li
365.762 251.093 li
363.892 248.501 li
363.371 248.388 362.85 248.256 362.345 248.106 cv
358.063 249.137 li
354.04 246.814 li
355.88 244.223 li
355.642 243.916 355.445 243.615 355.264 243.304 cv
350.98 242.277 li
350.966 238.992 li
355.429 237.913 li
355.623 237.612 355.849 237.31 356.108 237.018 cv
354.312 234.535 li
358.31 232.212 li
362.79 233.286 li
363.31 233.154 363.838 233.036 364.374 232.932 cv
366.134 230.454 li
371.804 230.449 li
373.681 233.046 li
374.203 233.159 374.724 233.291 375.229 233.441 cv
379.503 232.414 li
383.526 234.737 li
cp
.0802014 .418494 0 0 cmyk
f
374.016 240.921 mo
371.129 242.588 366.449 242.588 363.562 240.921 cv
360.676 239.255 360.676 236.553 363.562 234.886 cv
366.449 233.219 371.129 233.219 374.016 234.886 cv
376.903 236.553 376.903 239.255 374.016 240.921 cv
cp
f
371.403 239.413 mo
369.959 240.246 367.619 240.246 366.176 239.413 cv
364.733 238.579 364.733 237.228 366.176 236.395 cv
367.619 235.562 369.959 235.562 371.403 236.395 cv
372.846 237.228 372.846 238.579 371.403 239.413 cv
cp
.774777 .759884 0 0 cmyk
f
376.181 237.864 mo
376.181 240.494 li
376.198 241.6 375.477 242.708 374.016 243.551 cv
371.129 245.218 366.449 245.218 363.562 243.551 cv
362.136 242.728 361.415 241.652 361.398 240.573 cv
361.398 237.943 li
361.415 239.022 362.136 240.098 363.562 240.921 cv
366.449 242.588 371.129 242.588 374.016 240.921 cv
375.477 240.078 376.198 238.97 376.181 237.864 cv
cp
.257023 .623712 .0386053 0 cmyk
f
353.506 258.153 mo
351.703 259.194 348.78 259.194 346.978 258.153 cv
345.175 257.112 345.175 255.425 346.978 254.384 cv
348.78 253.343 351.703 253.343 353.506 254.384 cv
355.308 255.425 355.308 257.112 353.506 258.153 cv
cp
.134981 .462776 0 0 cmyk
f
354.858 256.244 mo
354.858 277.336 li
354.868 278.027 354.418 278.719 353.506 279.246 cv
351.703 280.286 348.78 280.286 346.978 279.246 cv
346.087 278.731 345.636 278.059 345.626 277.386 cv
345.626 256.293 li
345.636 256.967 346.087 257.639 346.978 258.153 cv
348.78 259.194 351.703 259.194 353.506 258.153 cv
354.418 257.626 354.868 256.934 354.858 256.244 cv
cp
.423011 .71606 .150362 .00448615 cmyk
f
337.56 253.823 mo
337.542 260.076 li
335.747 257.592 li
335.764 251.34 li
337.56 253.823 li
cp
f
364.978 251.543 mo
364.961 257.795 li
363.12 260.387 li
363.138 254.134 li
364.978 251.543 li
cp
.177218 .581048 0 0 cmyk
f
336.717 260.109 mo
336.699 266.362 li
332.427 265.334 li
332.432 259.082 li
336.717 260.109 li
cp
.423011 .71606 .150362 .00448615 cmyk
f
368.065 259.365 mo
368.06 265.617 li
363.579 266.691 li
362.698 263.028 li
363.597 260.439 li
368.065 259.365 li
cp
.257023 .623712 .0386053 0 cmyk
f
337.332 261.028 mo
337.314 267.28 li
337.077 266.974 336.88 266.673 336.699 266.362 cv
336.717 260.109 li
336.897 260.42 337.094 260.722 337.332 261.028 cv
cp
.423011 .71606 .150362 .00448615 cmyk
f
363.597 260.439 mo
363.579 266.691 li
363.385 266.993 363.159 267.294 362.901 267.587 cv
362.918 261.334 li
363.177 261.042 363.403 260.741 363.597 260.439 cv
cp
f
345.345 265.307 mo
345.327 271.559 li
344.806 271.446 344.284 271.314 343.779 271.163 cv
343.797 264.911 li
344.302 265.062 344.823 265.194 345.345 265.307 cv
cp
f
356.22 265.066 mo
356.202 271.319 li
355.69 271.455 355.162 271.573 354.634 271.672 cv
354.652 265.42 li
355.18 265.321 355.708 265.203 356.22 265.066 cv
cp
f
343.797 264.911 mo
343.779 271.163 li
339.498 272.195 li
339.515 265.943 li
343.797 264.911 li
cp
.257023 .623712 .0386053 0 cmyk
f
339.515 265.943 mo
339.498 272.195 li
335.474 269.872 li
335.492 263.62 li
339.515 265.943 li
cp
.423011 .71606 .150362 .00448615 cmyk
f
360.708 266.136 mo
360.691 272.388 li
356.202 271.319 li
356.22 265.066 li
360.708 266.136 li
cp
f
364.706 263.813 mo
364.688 270.065 li
360.691 272.388 li
360.708 266.136 li
364.706 263.813 li
cp
.177218 .581048 0 0 cmyk
f
354.652 265.42 mo
354.634 271.672 li
352.866 274.155 li
352.884 267.903 li
354.652 265.42 li
cp
f
347.214 267.898 mo
347.196 274.151 li
345.327 271.559 li
345.345 265.307 li
347.214 267.898 li
cp
.423011 .71606 .150362 .00448615 cmyk
f
352.884 267.903 mo
352.866 274.155 li
347.196 274.151 li
347.214 267.898 li
352.884 267.903 li
cp
.257023 .623712 .0386053 0 cmyk
f
364.978 251.543 mo
363.138 254.134 li
363.376 254.431 363.581 254.737 363.762 255.048 cv
368.059 256.076 li
368.065 259.365 li
363.597 260.439 li
363.403 260.741 363.177 261.042 362.918 261.334 cv
364.706 263.813 li
360.708 266.136 li
356.22 265.066 li
355.708 265.203 355.18 265.321 354.652 265.42 cv
352.884 267.903 li
347.214 267.898 li
345.345 265.307 li
344.823 265.194 344.302 265.062 343.797 264.911 cv
339.515 265.943 li
335.492 263.62 li
337.332 261.028 li
337.094 260.722 336.897 260.42 336.717 260.109 cv
332.432 259.082 li
332.418 255.798 li
336.882 254.719 li
337.075 254.417 337.301 254.116 337.56 253.823 cv
335.764 251.34 li
339.762 249.017 li
344.242 250.091 li
344.762 249.959 345.29 249.842 345.827 249.738 cv
347.586 247.259 li
353.256 247.255 li
355.134 249.851 li
355.655 249.964 356.176 250.096 356.681 250.247 cv
360.955 249.22 li
364.978 251.543 li
cp
.0802014 .418494 0 0 cmyk
f
355.468 257.727 mo
352.582 259.394 347.901 259.394 345.015 257.727 cv
342.128 256.06 342.128 253.358 345.015 251.691 cv
347.901 250.025 352.582 250.025 355.468 251.691 cv
358.355 253.358 358.355 256.06 355.468 257.727 cv
cp
f
352.855 256.218 mo
351.412 257.051 349.071 257.051 347.628 256.218 cv
346.185 255.385 346.185 254.034 347.628 253.2 cv
349.071 252.367 351.412 252.367 352.855 253.2 cv
354.298 254.034 354.298 255.385 352.855 256.218 cv
cp
.774777 .759884 0 0 cmyk
f
357.633 254.67 mo
357.633 257.3 li
357.651 258.405 356.929 259.514 355.468 260.357 cv
352.582 262.024 347.901 262.024 345.015 260.357 cv
343.589 259.534 342.867 258.458 342.85 257.378 cv
342.85 254.749 li
342.867 255.828 343.589 256.904 345.015 257.727 cv
347.901 259.394 352.582 259.394 355.468 257.727 cv
356.929 256.884 357.651 255.775 357.633 254.67 cv
cp
.257023 .623712 .0386053 0 cmyk
f
93.3394 265.344 mo
95.4072 264.15 97.0836 261.506 97.0836 259.438 cv
97.0836 257.371 95.4072 256.662 93.3394 257.856 cv
91.2716 259.05 89.5953 261.694 89.5953 263.762 cv
89.5953 265.83 91.2716 266.538 93.3394 265.344 cv
cp
6.10361e-005 9.15541e-005 .0191043 0 cmyk
f
82.6515 243.132 mo
83.8153 242.46 84.7588 240.972 84.7588 239.809 cv
84.7588 238.645 83.8153 238.246 82.6515 238.918 cv
81.4878 239.59 80.5444 241.078 80.5444 242.242 cv
80.5444 243.405 81.4878 243.804 82.6515 243.132 cv
cp
f
95.5685 264.322 mo
94.4639 266.465 92.2149 267.764 91.1104 266.896 cv
89.5392 267.803 88.2655 269.812 88.2655 271.383 cv
88.2655 275.358 li
88.2655 276.027 88.8079 276.256 89.477 275.87 cv
97.2019 271.41 li
97.8709 271.024 98.4134 270.168 98.4134 269.499 cv
98.4134 265.524 li
98.4134 263.953 97.1398 263.414 95.5685 264.322 cv
cp
f
73.3458 302.847 mo
74.5096 302.175 75.453 300.687 75.453 299.523 cv
75.453 298.359 74.5096 297.961 73.3458 298.633 cv
72.1821 299.305 71.2386 300.793 71.2386 301.956 cv
71.2386 303.12 72.1821 303.519 73.3458 302.847 cv
cp
f
74.6003 302.271 mo
73.9786 303.478 72.713 304.209 72.0914 303.72 cv
71.207 304.23 70.4902 305.361 70.4902 306.245 cv
70.4902 308.483 li
70.4902 308.859 70.7955 308.988 71.172 308.771 cv
75.5196 306.261 li
75.8961 306.043 76.2014 305.562 76.2014 305.185 cv
76.2014 302.948 li
76.2014 302.064 75.4846 301.761 74.6003 302.271 cv
cp
f
55.8503 285.14 mo
55.2287 286.346 53.963 287.077 53.3414 286.588 cv
52.457 287.099 51.7402 288.229 51.7402 289.114 cv
51.7402 291.351 li
51.7402 291.727 52.0455 291.856 52.4221 291.639 cv
56.7695 289.129 li
57.1461 288.912 57.4514 288.43 57.4514 288.054 cv
57.4514 285.816 li
57.4514 284.932 56.7346 284.629 55.8503 285.14 cv
cp
f
83.906 242.557 mo
83.2844 243.763 82.0187 244.494 81.3971 244.005 cv
80.5127 244.516 79.7959 245.647 79.7959 246.531 cv
79.7959 248.768 li
79.7959 249.145 80.1012 249.274 80.4778 249.056 cv
84.8252 246.546 li
85.2018 246.329 85.5071 245.847 85.5071 245.471 cv
85.5071 243.233 li
85.5071 242.349 84.7903 242.046 83.906 242.557 cv
cp
f
54.5959 285.715 mo
55.7596 285.043 56.703 283.555 56.703 282.391 cv
56.703 281.228 55.7596 280.829 54.5959 281.501 cv
53.4321 282.173 52.4887 283.661 52.4887 284.825 cv
52.4887 285.988 53.4321 286.387 54.5959 285.715 cv
cp
f
131.509 274.526 mo
130.887 275.732 129.621 276.463 129 275.974 cv
128.116 276.485 127.399 277.615 127.399 278.5 cv
127.399 280.737 li
127.399 281.113 127.704 281.242 128.081 281.025 cv
132.428 278.515 li
132.805 278.298 133.11 277.816 133.11 277.439 cv
133.11 275.202 li
133.11 274.318 132.393 274.015 131.509 274.526 cv
cp
f
130.254 281.717 mo
126.888 283.66 124.149 282.503 124.149 279.137 cv
124.149 275.77 126.888 271.45 130.254 269.507 cv
133.621 267.563 136.359 268.721 136.359 272.087 cv
136.359 275.453 133.621 279.773 130.254 281.717 cv
cp
93.3393 277.338 mo
87.226 280.868 82.2533 278.766 82.2533 272.653 cv
82.2533 266.539 87.226 258.695 93.3393 255.165 cv
99.4526 251.636 104.426 253.738 104.426 259.851 cv
104.426 265.965 99.4526 273.809 93.3393 277.338 cv
cp
79.4507 299.833 mo
79.4507 303.2 76.712 307.519 73.3458 309.462 cv
69.9794 311.406 67.2408 310.249 67.2408 306.883 cv
67.2408 303.516 69.9794 299.197 73.3458 297.253 cv
76.712 295.309 79.4507 296.467 79.4507 299.833 cv
cp
54.5955 292.331 mo
51.2293 294.274 48.4913 293.116 48.4913 289.75 cv
48.4913 286.384 51.2293 282.065 54.5955 280.121 cv
57.9618 278.178 60.7005 279.335 60.7005 282.701 cv
60.7005 286.067 57.9618 290.387 54.5955 292.331 cv
cp
82.6518 249.748 mo
79.2854 251.691 76.5468 250.534 76.5468 247.168 cv
76.5468 243.801 79.2854 239.482 82.6518 237.538 cv
86.018 235.594 88.7567 236.752 88.7567 240.118 cv
88.7567 243.484 86.018 247.804 82.6518 249.748 cv
cp
130.254 268.892 mo
128.28 270.032 126.519 271.92 125.289 273.991 cv
102.131 268.872 li
103.937 265.77 105.041 262.444 105.041 259.496 cv
105.041 253.176 99.8684 250.781 93.3393 254.55 cv
92.1016 255.265 90.9098 256.149 89.7893 257.154 cv
85.8721 247.645 li
87.9467 245.302 89.3718 242.296 89.3718 239.763 cv
89.3718 236.058 86.3569 234.784 82.6518 236.923 cv
78.9466 239.062 75.9317 243.818 75.9317 247.523 cv
75.9317 251.228 78.9466 252.502 82.6518 250.363 cv
83.6018 249.815 84.5033 249.09 85.3234 248.26 cv
89.2119 257.699 li
84.89 261.832 81.7884 267.741 81.6546 272.675 cv
61.2239 283.306 li
61.2648 282.983 61.3155 282.656 61.3155 282.346 cv
61.3155 278.641 58.3006 277.367 54.5955 279.506 cv
53.3832 280.206 52.2608 281.202 51.2778 282.334 cv
39.9454 276.471 li
39.8309 276.412 39.6378 276.514 39.5122 276.702 cv
39.3866 276.888 39.3782 277.087 39.4927 277.146 cv
50.7402 282.965 li
49.0135 285.179 47.8762 287.837 47.8762 290.105 cv
47.8762 293.81 50.8905 295.085 54.5955 292.946 cv
57.7775 291.109 60.4367 287.344 61.128 283.97 cv
81.6528 273.29 li
81.7594 277.541 84.1998 279.876 87.7664 279.757 cv
78.0117 295.846 li
76.8015 295.372 75.1594 295.591 73.3458 296.638 cv
69.6406 298.777 66.6257 303.533 66.6257 307.238 cv
66.6257 310.943 69.6406 312.216 73.3458 310.077 cv
77.0507 307.938 80.0658 303.183 80.0658 299.478 cv
80.0658 297.809 79.4314 296.665 78.42 296.073 cv
88.3456 279.701 li
89.8626 279.546 91.5514 278.986 93.3393 277.953 cv
96.6229 276.057 99.5904 272.98 101.718 269.566 cv
124.898 274.69 li
124.054 276.301 123.534 277.981 123.534 279.492 cv
123.534 283.197 126.549 284.471 130.254 282.332 cv
133.959 280.193 136.974 275.437 136.974 271.732 cv
136.974 268.027 133.959 266.753 130.254 268.892 cv
cp
f
130.254 275.101 mo
131.418 274.429 132.362 272.941 132.362 271.777 cv
132.362 270.614 131.418 270.215 130.254 270.887 cv
129.09 271.559 128.147 273.047 128.147 274.211 cv
128.147 275.374 129.09 275.773 130.254 275.101 cv
cp
f
51.6649 269.741 mo
51.6649 268.767 li
55.6636 266.459 li
55.6636 267.432 li
51.6649 269.741 li
51.6649 267.098 mo
51.6649 266.124 li
58.6443 262.094 li
58.6443 263.068 li
51.6649 267.098 li
56.9722 266.677 mo
56.9722 265.703 li
63.4064 261.988 li
63.4064 262.962 li
56.9722 266.677 li
51.6649 264.454 mo
51.6649 263.48 li
55.6636 261.172 li
55.6636 262.145 li
51.6649 264.454 li
59.953 262.312 mo
59.953 261.339 li
69.0342 256.096 li
69.0342 257.069 li
59.953 262.312 li
64.715 262.207 mo
64.715 261.233 li
69.0407 258.736 li
69.0407 259.709 li
64.715 262.207 li
51.6649 261.811 mo
51.6649 260.837 li
58.6443 256.807 li
58.6443 257.781 li
51.6649 261.811 li
56.9722 261.39 mo
56.9722 260.416 li
63.4064 256.701 li
63.4064 257.675 li
56.9722 261.39 li
51.6649 259.167 mo
51.6649 258.193 li
55.6636 255.885 li
55.6636 256.858 li
51.6649 259.167 li
59.953 257.025 mo
59.953 256.052 li
69.0342 250.809 li
69.0342 251.782 li
59.953 257.025 li
64.715 256.919 mo
64.715 255.946 li
69.0407 253.448 li
69.0407 254.422 li
64.715 256.919 li
51.6649 256.523 mo
51.6649 255.55 li
58.6443 251.52 li
58.6443 252.494 li
51.6649 256.523 li
56.9722 256.103 mo
56.9722 255.129 li
63.4064 251.414 li
63.4064 252.388 li
56.9722 256.103 li
59.953 251.738 mo
59.953 250.765 li
69.0342 245.522 li
69.0342 246.495 li
59.953 251.738 li
64.715 251.633 mo
64.715 250.659 li
69.0407 248.161 li
69.0407 249.135 li
64.715 251.633 li
0 0 .00222782 0 cmyk
f
105.926 246.092 mo
105.926 245.118 li
109.925 242.809 li
109.925 243.783 li
105.926 246.092 li
105.926 243.448 mo
105.926 242.474 li
112.906 238.445 li
112.906 239.418 li
105.926 243.448 li
111.234 243.027 mo
111.234 242.054 li
113.702 240.628 li
113.834 241.526 li
111.234 243.027 li
f
113.834 241.526 mo
113.702 240.628 li
114.687 240.06 li
114.818 240.958 li
113.834 241.526 li
0 0 0 0 cmyk
f
114.818 240.958 mo
114.687 240.06 li
117.668 238.339 li
117.668 239.313 li
114.818 240.958 li
0 0 .000640879 0 cmyk
f
105.926 240.804 mo
105.926 239.831 li
109.925 237.522 li
109.925 238.496 li
105.926 240.804 li
0 0 .00222782 0 cmyk
f
114.214 238.663 mo
114.214 237.689 li
114.33 237.623 li
114.461 238.52 li
114.214 238.663 li
0 0 0 0 cmyk
f
118.976 238.557 mo
118.976 237.583 li
123.302 235.086 li
123.302 236.06 li
118.976 238.557 li
114.461 238.52 mo
114.33 237.623 li
121.194 233.66 li
121.194 234.633 li
114.461 238.52 li
0 0 .000640879 0 cmyk
f
111.234 237.74 mo
111.234 236.767 li
112.988 235.753 li
113.12 236.651 li
111.234 237.74 li
0 0 .00222782 0 cmyk
f
113.12 236.651 mo
112.988 235.753 li
113.973 235.185 li
114.104 236.083 li
113.12 236.651 li
0 0 0 0 cmyk
f
114.104 236.083 mo
113.973 235.185 li
117.668 233.052 li
117.668 234.025 li
114.104 236.083 li
124.611 235.304 mo
124.611 234.33 li
125.904 233.584 li
125.904 234.557 li
124.611 235.304 li
0 0 .000640879 0 cmyk
f
125.904 234.557 mo
125.904 233.584 li
133.79 229.031 li
133.79 230.005 li
125.904 234.557 li
0 0 0 0 cmyk
f
122.502 233.878 mo
122.502 232.904 li
125.41 231.225 li
125.41 232.199 li
122.502 233.878 li
118.976 233.27 mo
118.976 232.296 li
123.302 229.799 li
123.302 230.772 li
118.976 233.27 li
0 0 .000640879 0 cmyk
f
126.719 231.443 mo
126.719 230.469 li
133.79 226.387 li
133.79 227.361 li
126.719 231.443 li
0 0 0 0 cmyk
f
124.611 230.017 mo
124.611 229.043 li
125.904 228.297 li
125.904 229.27 li
124.611 230.017 li
0 0 .000640879 0 cmyk
f
125.904 229.27 mo
125.904 228.297 li
133.79 223.744 li
133.79 224.717 li
125.904 229.27 li
0 0 0 0 cmyk
f
70.5681 327.081 mo
70.5681 326.107 li
80.3769 320.444 li
80.3769 321.418 li
70.5681 327.081 li
70.5214 324.465 mo
70.5214 323.491 li
78.2685 319.018 li
78.2685 319.992 li
70.5214 324.465 li
70.5016 321.832 mo
70.5016 320.859 li
74.7424 318.41 li
74.7424 319.384 li
70.5016 321.832 li
81.6856 320.662 mo
81.6856 319.689 li
85.2898 317.608 li
85.2898 318.581 li
81.6856 320.662 li
79.5771 319.236 mo
79.5771 318.263 li
81.1145 317.375 li
81.1145 318.349 li
79.5771 319.236 li
76.0511 318.628 mo
76.0511 317.655 li
79.0061 315.949 li
79.0061 316.922 li
76.0511 318.628 li
82.4232 317.593 mo
82.4232 316.619 li
85.2898 314.964 li
85.2898 315.938 li
82.4232 317.593 li
80.3148 316.167 mo
80.3148 315.193 li
85.2898 312.321 li
85.2898 313.294 li
80.3148 316.167 li
0 0 .00222782 0 cmyk
f
349.163 115.721 mo
350.965 114.68 352.426 112.375 352.426 110.573 cv
352.426 108.77 350.965 108.152 349.163 109.193 cv
347.36 110.234 345.898 112.539 345.898 114.342 cv
345.898 116.144 347.36 116.762 349.163 115.721 cv
cp
6.10361e-005 9.15541e-005 .0191043 0 cmyk
f
350.454 149.172 mo
351.618 148.5 352.561 147.012 352.561 145.848 cv
352.561 144.684 351.618 144.286 350.454 144.957 cv
349.29 145.629 348.347 147.117 348.347 148.281 cv
348.347 149.445 349.29 149.844 350.454 149.172 cv
cp
f
349.199 150.045 mo
348.315 150.555 347.598 151.686 347.598 152.57 cv
347.598 154.807 li
347.598 155.184 347.904 155.313 348.28 155.096 cv
352.628 152.586 li
353.004 152.368 353.309 151.887 353.309 151.51 cv
353.309 149.273 li
353.309 148.389 352.593 148.086 351.708 148.596 cv
351.087 149.803 349.821 150.533 349.199 150.045 cv
cp
f
351.106 114.83 mo
350.143 116.698 348.182 117.83 347.219 117.073 cv
345.85 117.864 344.739 119.616 344.739 120.985 cv
344.739 124.451 li
344.739 125.034 345.212 125.234 345.795 124.897 cv
352.53 121.009 li
353.113 120.672 353.586 119.926 353.586 119.343 cv
353.586 115.878 li
353.586 114.508 352.475 114.039 351.106 114.83 cv
cp
f
320.205 148.734 mo
319.709 149.697 318.699 150.28 318.203 149.89 cv
317.498 150.298 316.926 151.2 316.926 151.905 cv
316.926 153.69 li
316.926 153.991 317.169 154.094 317.47 153.92 cv
320.939 151.918 li
321.239 151.744 321.483 151.36 321.483 151.059 cv
321.483 149.274 li
321.483 148.569 320.911 148.327 320.205 148.734 cv
cp
f
358.788 110.955 mo
358.788 116.262 354.47 123.073 349.163 126.138 cv
343.855 129.202 339.537 127.377 339.537 122.069 cv
339.537 116.762 343.855 109.951 349.163 106.887 cv
354.47 103.823 358.788 105.648 358.788 110.955 cv
cp
356.559 146.158 mo
356.559 149.524 353.82 153.844 350.454 155.787 cv
347.088 157.73 344.349 156.574 344.349 153.207 cv
344.349 149.841 347.088 145.521 350.454 143.578 cv
353.82 141.634 356.559 142.792 356.559 146.158 cv
cp
319.204 154.41 mo
316.552 155.941 314.395 155.03 314.395 152.378 cv
314.395 149.726 316.552 146.323 319.204 144.792 cv
321.856 143.261 324.013 144.173 324.013 146.825 cv
324.013 149.477 321.856 152.879 319.204 154.41 cv
cp
313.594 125.95 mo
310.227 127.894 307.489 126.736 307.489 123.369 cv
307.489 120.003 310.227 115.684 313.594 113.74 cv
316.96 111.797 319.699 112.954 319.699 116.321 cv
319.699 119.687 316.96 124.007 313.594 125.95 cv
cp
369.145 90.7215 mo
369.052 90.6344 368.861 90.7061 368.72 90.8766 cv
356.918 105.366 li
355.038 104.269 352.262 104.482 349.163 106.272 cv
345.319 108.491 341.966 112.558 340.215 116.71 cv
318.95 120.767 li
319.794 119.156 320.314 117.476 320.314 115.965 cv
320.314 112.26 317.299 110.986 313.594 113.125 cv
309.889 115.264 306.874 120.02 306.874 123.725 cv
306.874 127.293 309.879 128.71 313.594 126.565 cv
315.556 125.432 317.308 123.56 318.538 121.503 cv
339.938 117.42 li
339.294 119.132 338.922 120.841 338.922 122.424 cv
338.922 124.329 339.454 125.8 340.364 126.804 cv
324.372 145.059 li
323.698 143.22 321.649 142.765 319.204 144.177 cv
316.214 145.904 313.78 149.742 313.78 152.733 cv
313.78 155.724 316.214 156.752 319.204 155.025 cv
322.195 153.299 324.628 149.461 324.628 146.47 cv
324.628 146.146 324.587 145.857 324.533 145.58 cv
340.685 127.143 li
342.528 128.794 345.64 128.786 349.163 126.753 cv
349.266 126.688 li
350.132 143.181 li
346.579 145.404 343.734 149.968 343.734 153.563 cv
343.734 157.268 346.749 158.541 350.454 156.402 cv
354.159 154.263 357.174 149.508 357.174 145.803 cv
357.174 142.198 354.314 140.921 350.747 142.823 cv
349.879 126.302 li
355.191 122.865 359.403 116.004 359.403 110.6 cv
359.403 108.274 358.615 106.59 357.303 105.625 cv
369.055 91.1985 li
369.197 91.024 369.237 90.8105 369.145 90.7215 cv
cp
f
314.848 118.759 mo
314.227 119.965 312.961 120.696 312.339 120.208 cv
311.455 120.718 310.738 121.849 310.738 122.733 cv
310.738 124.97 li
310.738 125.347 311.044 125.476 311.42 125.258 cv
315.768 122.748 li
316.144 122.531 316.45 122.049 316.45 121.673 cv
316.45 119.436 li
316.45 118.551 315.733 118.248 314.848 118.759 cv
cp
f
319.204 149.194 mo
320.133 148.658 320.886 147.47 320.886 146.541 cv
320.886 145.613 320.133 145.295 319.204 145.831 cv
318.276 146.367 317.523 147.554 317.523 148.483 cv
317.523 149.412 318.276 149.73 319.204 149.194 cv
cp
f
313.594 119.335 mo
314.758 118.663 315.701 117.174 315.701 116.011 cv
315.701 114.847 314.758 114.448 313.594 115.12 cv
312.43 115.792 311.487 117.28 311.487 118.444 cv
311.487 119.608 312.43 120.007 313.594 119.335 cv
cp
f
331.895 105.038 mo
331.895 104.065 li
335.893 101.756 li
335.893 102.73 li
331.895 105.038 li
331.895 102.395 mo
331.895 101.421 li
338.874 97.3915 li
338.874 98.3652 li
331.895 102.395 li
337.202 101.974 mo
337.202 101 li
343.636 97.2856 li
343.636 98.2593 li
337.202 101.974 li
331.895 99.7511 mo
331.895 98.7775 li
335.893 96.4689 li
335.893 97.4425 li
331.895 99.7511 li
340.183 97.6096 mo
340.183 96.6359 li
347.162 92.6063 li
347.162 93.58 li
340.183 97.6096 li
344.945 97.5037 mo
344.945 96.5302 li
349.27 94.0326 li
349.27 95.0063 li
344.945 97.5037 li
331.895 97.1076 mo
331.895 96.134 li
338.874 92.1044 li
338.874 93.078 li
331.895 97.1076 li
337.202 96.687 mo
337.202 95.7133 li
343.636 91.9986 li
343.636 92.9722 li
337.202 96.687 li
331.895 94.4641 mo
331.895 93.4904 li
335.893 91.1818 li
335.893 92.1555 li
331.895 94.4641 li
350.579 94.2507 mo
350.579 93.277 li
359.758 87.9778 li
359.758 88.9513 li
350.579 94.2507 li
348.471 92.8244 mo
348.471 91.8508 li
351.379 90.1718 li
351.379 91.1455 li
348.471 92.8244 li
340.183 92.3225 mo
340.183 91.3489 li
347.162 87.3193 li
347.162 88.2929 li
340.183 92.3225 li
344.945 92.2167 mo
344.945 91.243 li
349.27 88.7455 li
349.27 89.7192 li
344.945 92.2167 li
331.895 91.8206 mo
331.895 90.8469 li
338.874 86.8173 li
338.874 87.7909 li
331.895 91.8206 li
337.202 91.3999 mo
337.202 90.4263 li
343.636 86.7116 li
343.636 87.6852 li
337.202 91.3999 li
352.688 90.3899 mo
352.688 89.4162 li
359.758 85.3343 li
359.758 86.3078 li
352.688 90.3899 li
350.579 88.9636 mo
350.579 87.9901 li
359.758 82.6906 li
359.758 83.6643 li
350.579 88.9636 li
348.471 87.5374 mo
348.471 86.5638 li
351.379 84.8847 li
351.379 85.8583 li
348.471 87.5374 li
340.183 87.0354 mo
340.183 86.0618 li
347.162 82.0322 li
347.162 83.0058 li
340.183 87.0354 li
344.945 86.9297 mo
344.945 85.956 li
349.27 83.4585 li
349.27 84.432 li
344.945 86.9297 li
352.688 85.1029 mo
352.688 84.1292 li
359.758 80.0471 li
359.758 81.0208 li
352.688 85.1029 li
350.579 83.6766 mo
350.579 82.7029 li
359.758 77.4036 li
359.758 78.3773 li
350.579 83.6766 li
348.471 82.2503 mo
348.471 81.2766 li
351.379 79.5976 li
351.379 80.5713 li
348.471 82.2503 li
352.688 79.8157 mo
352.688 78.8421 li
359.758 74.76 li
359.758 75.7337 li
352.688 79.8157 li
0 0 .00222782 0 cmyk
f
293.397 37.1404 mo
290.469 38.8309 li
290.469 35.9029 li
293.397 34.2124 li
293.397 37.1404 li
cp
0 .005066 .0374762 0 cmyk
f
59.3763 233.579 mo
57.9123 234.424 li
57.9123 232.96 li
59.3763 232.115 li
59.3763 233.579 li
cp
f
365.767 72.7542 mo
362.839 74.4446 li
362.839 71.5167 li
365.767 69.8262 li
365.767 72.7542 li
cp
f
190.186 70.6529 mo
187.259 72.3433 li
187.259 69.4154 li
190.186 67.7249 li
190.186 70.6529 li
cp
f
84.1157 211.525 mo
81.1878 213.215 li
81.1878 210.287 li
84.1157 208.597 li
84.1157 211.525 li
cp
f
70.5048 174.768 mo
67.5768 176.459 li
67.5768 173.531 li
70.5048 171.84 li
70.5048 174.768 li
cp
f
62.1644 228.961 mo
59.2365 230.651 li
59.2365 227.723 li
62.1644 226.033 li
62.1644 228.961 li
cp
f
171.494 61.5048 mo
168.566 63.1952 li
168.566 60.2673 li
171.494 58.5768 li
171.494 61.5048 li
cp
f
286.46 25.4488 mo
284.343 26.671 li
284.343 24.5542 li
286.46 23.332 li
286.46 25.4488 li
cp
f
362.457 69.6821 mo
360.34 70.9042 li
360.34 68.7874 li
362.457 67.5653 li
362.457 69.6821 li
cp
f
336.953 162.572 mo
334.837 163.794 li
334.837 161.677 li
336.953 160.455 li
336.953 162.572 li
cp
f
160.291 84.4719 mo
158.174 85.694 li
158.174 83.5772 li
160.291 82.3551 li
160.291 84.4719 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 19.2.1
%%For: (\722\756\770\740) ()
%%Title: (2012.i101.015.F.m004.c9.business intelligence isometric.eps)
%%CreationDate: 12/30/2020 11:15 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6H!B:L(F]4\4jPqA!H8,QbeAT84//Z%\?>o76it1)h:$eEHU%CSWffW!/?u+"!.TsV$C+P4cDe/$P,aM$K[t'CQ$,<ar=e]4
%Se/dP*qYNgqlc!=,NVhk:5)5QQ$uADpBnK4Oh9GFVJ:E9i^s-2g7D6B%Sn@rSZJjFG>CPj.SZiTc`o,@7?oZthNE1+/kk1iq?9s7
%l9[(9!.DlKr(F0r77Fc="!XCTN&Q$.G@JT!`F5>a-kcN"]Z:C9r]j9o"Wp-aj;<sXiK:%Z8"Sf`H%ppc%/aZYH(HklZKNB]5!K2^
%Nd-R?BI_.F8XFa\ecmTJ*YNr"nBdA^CJnO,)8piU;"1_+n=V+[T(<FAl/GkdF<??h#kQ+37LFbLlR,)ps+au(5G?DfL\<D+SjFTS
%E)6`=LI;9+.C0*O!<F\?@j4e%QfM1;Q$P3O0h&?Uee9h<fY:P(+?U&Lii+Wp$#p@m(3g?_;.0Y?MJQB/:!fS[aPR^-Hc0tN93#+R
%[32XHMTS_V[]*/:nRZ'morGOLK3k<lR:s\#<3+.kE&k"k;'i:V2C@s4';?c:Fh%`<XJpUnL58>BXCl2E<aPVG,Ae`$,j-2Y?.,l1
%Tco0R4VWsr6OB8Q"<j1Rio(QmgZ3!)M<^ki<kCI,9`^LQ>Z^2_3t`/kWZ4HrHC`TOl;4U.as.b<9J42HB`,_.c/N(WTtkiT-at\M
%8a7UIC,6DFHs/q:e*UmJCSCarU9=k@L]F2I[CZ0Up]Wm7-MeaH(L6HMVEkB^N>hfnY;>4,n5<*[n1^nYrD'M$e,K?i+0TEjfooLk
%ZH%4R_+t.Ss!(5NO#0KKs*3sok",8;_*9>\i#`28@!4C!2ei?XjJoLBoFPG&klbU+/iMftV=Ca.)bp5Cp1q4edr`stWoq%m#%''%
%b)V66rZPOF$sX>Q/r4*go\<q=@!M8D3NU;pmjs^0(89+K!1t4i5Z`&#.Spq2[Jmb:%o*Tq@bAI@9i)$WLb>89d`.H+&]S>_rc2&c
%1EN<nFShQ/C)qubB\!Un"]];1\kT-<No(),TlYMUUF(Kq(_U4-Pp,K<nc<>jLtoUb75NSG#Ge/Cqd9sk!GmgoUWVZgV=^T^@QYrB
%;H/_?S#eF(XJ',e2pbqpQRm/Je-!3C6>$;EJp!&V;8G9&`be!@0'"HelP(:9's\46"IRQNMh"I2VBSl'KQg(?]uodfj%P3'_^0a?
%qn!DPjgK!f4>,%9CA]t6,ZX^(LMHr"khh(VUJ!2l/T([cGG.e3do!O@-i/9oiO=rr.Vi>AWc(6(0'(-':[@c1+uc3F)feBNW3-;B
%6N8\!#u-1+g+@=YqKF*\;_Q67i5RuI!M)PSVqo=[`1ZZR%%M:NpF@L'4,PZ$Nd2*9N2jXK\"r8:f*^t3CXdb(VmLW^pDE[:^)OBG
%>44rU7TFpMmu?s6^AK:aW$\`s.9.*SrFN]?/,0&Js8B]!I<>F+E$+IRs"a;rG=DNh4i]F0<R!#)loM+dC)O&IMcf"cjd0pQ]jL6a
%Y3QWSg:Q1tYP)k7UWSqWY9>MJW3ur2j#"nA$1Vo:hiitd_Gq@$'g#:s1(m#E.[&:\<<8^#_GeU[L4of1fC1%b\R"V%q`u+A)\qmN
%%/j`hGVnhT?!q&\6Wd4f<pI9GBda]l!aKUF4KkX]"sPMNi6WAbd^Cko@ug"0Ak6_,BT=^m(R>mJ4aG8BSR+uBU=Q.DHEuBkD]>GG
%NLWo=E&*$O3$Jd*B5eO9HNle9X/l_ErEe;9VhKB<S.;8%8o]J62J+D(-XB_ui*s`&`Ctt7I[>AG7U@OUE^%Ga0Z6hRDJM6/a?&LQ
%E47O=8Nf]YnZ8D2O%*(;&aQR>2Ao&SMN#.X4Wlo*Gt$L<AO)oKB?W,s5a+g'hG[ef;Z+r0af_MsMA=o"U[fcaA$YWX^[hXoBPu)A
%"cF)7il"e3F6\suaJKB#;-t7j5:,:--PK#+Rt;5pDj2a(<3[gY3n?5K0c)9fbnr;QqasXB-C@@PO,Pr+C%>o8#\/clB!gR^!AD?F
%MaIj(QZTiSTDK.Qrr.iH,hht"JZK=f^"i$EJ/"S/QdEOunphW3Xms'7UrJj7d+pgG_/j:L%K0e<oelo.UHBe,'`?h]n1n.@qY+>-
%J,cqNpKo15Z6Vs2U]<V')2Fh0r1qCjRA!0/U1fFX=GijV8u1J9PG"(<MG!pIf)`&#-+G4eimM(dbO>X1ne;TUMW]LP!IdF#c6rB$
%T,%\t!0%8k^^.$WiVE]V+'M5DBg0e<feenido;c0'<+YTSP#`AWC0?P#q8'WV:ZKGU/P$K9G,B?17_)bP84mQ)Fu+5KU@=_[$VJi
%@R?$3U*tg_K#ieMaG@2oM53ZJ)>Hc2.3U,cXSQQ+2@Mqmn6[@W:Pq`BOQ;U1P"d]')LeV1M<cshNL,<Y4-U!a!^RE3Ko.#W7V%IS
%\?JM[!l:NU.j+nqH\M]Y->=MhJQ@e.")*DRj]Caq\d15cO;6.=/kb^[7@SE'<5>`b!aZQ&"HGC?Ob=bF02tDC'<.[^==3OXbsM?A
%<ZqZt=1_=[F;&bd#$hDi^d7U#B_3AM3H'XEKDML]#i]5'!Z2+Hk.uS9:gbn$a=[RlPJTeR!+QY8?[4=]*fQ%(6"UCY,bb)jQL`EI
%`l"9j(lX:O9EqXFQlNtsYjiQsL!@DEiCd;J!#p]uTcXJK"FLtC-GuXI'U+'>3$U+>__E^[0]4AtOs0#tSYf?$J)$h,E=[HG"K!S1
%64NDoT$U5n8W@<<J.V($"1pkM,D$p^^n/?C_6u+,AL-P6YW2o(Nrpon_:HS)*3:1^V8*=HdKK=I'"e8ThLSCRk5\9Y%OE^(j66^E
%,h&ab^`Oj8M.@e6`L/!&A,oY&K=tGF=;3#$'TC(nYlclc@isW!\-II1),J6#nP"ObhPUuCoI??g&q!#:Ll(m4/I!Lr3_$%J:Lqi2
%TONkH!E3RWE]CliBMfhpQR"giL9n\<CA/VJ%i'b;<rXfl1AhVN1Z2oni]O.@p.dH\itCE05\CsfJ[\hC_"Pj1T'tRDil2Xk?+_Nk
%j'hI=$Uaq8g5<-sq!<jQ\(fC0R9#UCkELQ7W[.P`N(6a+s.>V2L5-qnN?FjEPc#Jili:Euf;2?38jcIV]%k::P\2r,mL:84?bIOp
%OVf/9U";4)T%tSIg9*Mg^.E(sKPJS#^!W;Lf9TSE(f4T@mOU1Vhbd_DJf>A@?HfofjW>:Tr3P$,r,BKhO86$lcb7,uS?PK;7`s$g
%0B?rpPc>,B&CA(7e*qN!gCD0T4OpYd_qW4:0^!uCEQ?4r\]A)a0DAJW?'/doN_sS([gX1I$U\d5fMh9OXBFn30c\o/kXO27kdbsY
%a?aDo<gL=;7[N$0+BCH#B*<ZibTTuVc($D1ql6-!D#qq?*GRJcm=+B6dZ_DU;F!=J94p&;E,llUZ^mmsRcQABFAMB)\OZpA7@_>m
%ej2BW1u3jnL7n-9[A)7(.rs3C#BCEe-h6Y]h!IQ)"A4$(M)kC)k&)hDXjth1Gj<h5\bmU#E3_6gJDHGpo0cY)]*2_X26pF3(7'&Q
%a/haRru32pRP$n;W1I]qG;Zg5MQr_18XIuSD@qVH/puktBX\o6XbM#6l3UKY]Dp]\*D:Y(Xtt8q?b5g32V@i&j!4Ho(i,0SojVe]
%,KtRqUq+Ung+$q+4>gJ+AlgK>s"er50"83+/i*2?hMq!$9@Wc/>Z/=05:/tIR0rX5h.83P5gCs"GJR$WY.KS8-JZ79l#p$RLr(]d
%.[!t$k@qHaBF$XPVFV48V$IUR_Jd9ns.]!#r^P<")mah/+5Q]1$ZLQI@lL-G.[>I`O,e!q_3,g`DW5_I?e)l[C`YsgMiV$:MHr[e
%jtf^/Cb[s/kJ\Uu$!pQaPB1/fJ+(HV0BGfB2V<;["sg.1Rk57N[Aon;2r$r@!'8^TN7:m3Y.VRPNqR`W'7n\ur(Sp'G'#GPBEt0u
%TKfT&)U]E=ns@m`B"j4fJ*ttbbh-^&o+tQ/hsDmk4#*/(`V'=>DT:#!IP&.]IsU,F1GaK$iM^3[opth)q5Jl.c^&2fF4%XNMqP<]
%m6VWqBPnIi/pNbjo&S_[=_o-+ai_F%3QD`0$Qe(_X6(CMQ)#qD7SE0[EP5![*C&_?QR#27cLdGQ7_5h!s4JO*N!g5iPjN+"Dk8^I
%Q1__I3cglC\-<\K2<<:+npe3)m,AbFeJe!n%=)3FXO`J7CWL!g5qC$>M[?J]>!p=""K`kH7+>da=fiXHer>.a+00PEe[k9ch0?>F
%]NR8nI8`ZEbg'tZG]@?k%?2f'qWZ!Q4.tc5A3]R+H*^XPdJM2h&?;D8d9LWL>%)<:\-ppEf4tq>h9*tK5.>Xa7C&rCCAk<*eClT[
%D7ae5+)3@:mp#F?AG51&$;.H]qV?.*dDE_7L28_7[[JB:[u!V^Y01iI$LV5\_Q[@GCXI'XVTQTN/m"g:0"!&ZEil4a(2)okr>JUI
%Y*.Sjr7Piam+4f.hjltV"W%OhdSH^iGBI6B!-2C\`joJI<oKOkfg$MCS>U(!$6K$)h492,o-Xj\"-'tXP*],7h+U"Sj9gQY4oJ.]
%Oond\oT*#7(AM1fJOSrRVBJ-(R9r(E1lVA?F(;BFEu?@G^<#r/AI!:)Iq6rsl>#<i2=[u@GkkF95;^Vo9Y?b!0R3S.2=[u@GZdbR
%X<q7S'//'SioPZ1iamSQn*B?3=dTMkU,dI%l5?BNG?Dh^L9q=Q5lYS;j"A9'_k1rTbC*cPRtD>S#?ECo^:T(`YelA><X2[L25Ybl
%"5M`$(gR"6W%,K4UeG%2=p;qMG06lD\/7=ZH>m,[k-Vq?dCfWgppg+@Ompf;`mlM5?gAE(:WR[$K%&ufVn&XSm+8i,eJ1/=EkuOI
%quTs4\mo1u/pX97BpLOcqVmIO^X.gF/-c\'`],FVSHQr/`a<gC(i(03`_RLCXj-qD@V:5%\?p:5&&%a!'5X^Z04q_]H)@$'J*_js
%02Qd)oVutkH>[tHPC6EnR!sFF/aZ`Des1U')K`OTEoDC[>aN:^f5Y-[e+d'^[oH?aX_MZ"NKdGBdYrL2,-<(iPhqH,&U'Gsr,DD]
%MZGai]lU`"G%p<a,sTR^7N&"H95-h%DYoi+c2*<+F:$M0^3"PFD+I[oHh(tJ[P,C6?jY0Oqqc;bL<7lX[es._>$`66[fhh;Femo5
%Mb+9m%;6QLAbE@Ygg?BDc*u'D1OWGo\#$gWEBBdPNFk23gMtQs;P(>'8mI]=EW%)\h*SdQ[W"uaPnYf=;RFT'IQJ^R2oleT$@h^Q
%q'+/C0164S9m2R2c0>c/`HXslo`k6W-+X$uVL4pDY,aM&=2AkgSFS-h/d;iE*ZS7"O=tQl>eNG;MN,du)jbOKq:G<i]!o@u$MJOZ
%OtW87rerL8*dRZ\.[EsWC:[C/8a;_@\/B3&ok*L.T_W/d@9rAihq!ZJV,s(leE2"""i6H<e^X^!%d80m(FECg23t)ASC-Hm^>,m$
%H1>hVIU9[PqKf]U!Y$dKC2(*d]%M)Pm^LKXVgNQ^L3DK8LQ\&,>AR*lP+XfOk8Gn*%jsMnq(qHfTO]si964O`BACJC#H]Q,mS;H_
%[+$<^<RXaAg"KoIM6D?Ka&gCZrqm^To<b3f59hE6,&LW\6S^u8iKT9c2p4#oG0^,_pL36!rC_OZ`0]4_pPD<*9A7Z(/<Z[&"N1um
%+FH=bYiM8Z_J\6"=N5IZF'?'B^;8*TMmj"Zc&.fNU&IZ(#jL&[:"D+X50*J[7?_[d._Ci2;Tqm6*Z*;`R,MhiduP"&3I?r`^KnBT
%8iQ=+PUt%*#gZRRZg:</k,i7Vf6:h`\S_nn6QC3.5Y7<rh3sfP(`#s2^YI>ZkL-_kcT4;h%`hOAHl-,52j7QBI>j@"hXVF`e^Xrg
%=7p^D`U_>kZ2?s'I&Y;Qn?jqqDdE[dR('f&.q)[.K<*a5^;=_??Z>1HjYpOL\(^?KgY_^GZXC)7)h';eBOTjmDY.4:$%;J&:Na4E
%I<4B:+iI*tm7/@o3_st:]*M]2S%tjP\5TKn>0Dmf0\F#tOjrjJO%J3DkluKtma;UaORlpQ<SFb>iip=XUfL5J2hN@pkkoI[[L3lo
%<@[rJ?^9Ej:cO!g`>7c+or;n1a:5(nZ/I&0Z&?`@IYJ`-/L`(F]XUqp<Oo!6>o`pGb8jaNV-Jl&#!4KhJ-8kmo-/rhXXZJF@Q8O%
%D#iiVnb=oh+AuEX\T.t*DB`]G?e"pm.k.XLl9ue<s1raoQY2Fh20Cra;=N'aKeCS=s*/&MPc#U;N\W63Als0:2JiG5ZuMQnqSs.#
%/mc*`l3#E5i!$K5)Vh7"@]jP8&)3V4.>"a@F"Y%3ATKAkRr!/eP^('L23'AV$X%X\H]nq3r#[[K(L<\,<Mf.rY1s)K="[`XVG-h;
%lR:j**g/V:h&2[<BkXMIGHk&SnpJ4.o5Q;,kFr>bSo<`d<h=7"4WhcW)m^9T+hP@cB)jnE`HTAJGGXTi-7]aI?He'N2pAclY@EU5
%Fgtquc).*nDY,[S"3:jPb1Ju$g[bKta;]C'`L*7$*q7C3S*aos4BYc,5ICoX+n"cB>dbG$QMrI]2[;5mqPdD#iR"PWErG7lSG'.!
%lUuWHeEU*#-,8!aH2D^%jX&O7h@Ffh5T=\6@W$=bog8OtA-K%"X;sfR&qgXJ]'/0dP&SC[JrcF1q!X*"T.\dk3VOMgTIHpGX&kc7
%s.prHplP%]Dld:$<kWGn@!*WjNJH&<S:=e1<Yoe*^#eIsN[II2)cnt=c4#`V3!fN-9^gDGs&e*q\]"(6UK">g"9$fA%Y&R6_s2cN
%71C.fhWe?_eX1^W\_='gOR[b,<F`F:j,YJTX*_[so'l"l>\1B,_h(=@bZB48@Pq3`Eapti?G3s*OdgX2]0W_TQs'2I-uPDSn/Wq;
%Ai+u.WM$:0NCD*u>eI&IRaIN"=D'LdZ&krhn-*D\h!hP:d9,$Un$:XEC.;\jUTnKq=j:W]Ai,fb7YCJ>1E*FK=csY^05q]GQT9nS
%169(9VbiJpB9jUaE,_=e=r#B`mW85*1EDCBJ+[CoO`%oU"kT3r/VD(+FCW:V^(lS$]%:C7<W"X?]1&8Wpc%qVbqk,]h5db^01ra\
%S;!U"=l$0`)XjfJH`Q\nC:s;5O7umiQ)jH3<uCCS_98@`pk[88k3CKID\32$/d/R#n>unBWr_*m^pb6OI<(#5`K$E8^X.KaoG)O#
%]@*mZ)"Y#P8b6VcL]0&f\U,3B?bMU#5;LA+__/BtYO:,4s5?FSALmHrg69(G]_q3@2uZc'qT54f<c2a8`r:Ln/@tHL8s<(hV?L#G
%lb=<9I"D$"^;;F"fu:1.H0fkf=+gH#"(1&g=2*TJROcWdFBee)COn+di?_b;/A'$rQc2P.fM1mS<WX(<5g'dbQ@(\KmUE1WfoXp)
%=Y7dr>]D]gr)dN:WcmW94lQ#1IB51Wr`m*@drg!`esu3Gq?f68/'k[!-aK(EW7B<a:cHTL9=.8>h2WsbjHeThSP#HL$oomGRWGa`
%[M0r,_INOh5("Ur+(mBg5J"tq/AQtJW.fHG0':ZLa2b_uAm'Ld&m\mk3mC5I[XW@>e*Jh2puP,g(>e=^N2N#_l@8E+(<a3NV5DH,
%:D`W"2+:O$mFY;!-VtWMltL?X,&Mck\8ZpT?#.!5"U:G4+-QJ+qCsE<F*`b9Uq:^b#3=R&<>Y"djglriDSjYV'ietkP)CRL.[!sq
%e_H\AA-8A=;f/Z(_NRQV9#&oKZN%hfPT>!d?Hn2X<S\WkBgBq$%2VU*>tPn'1JIgb5rmoe`M>-Hq#qT4<NA_fq<!RB!U*cY(/e@N
%\MBVE5=NC)306#i'i&<<$9M*7?YLmF)ePCIqI6iGAWc+f?"qlag\M`DM=QAH+fg!eXXL!'22nBdMrI2mb7],%HVqf(A[N=cJPIY!
%P.`8N,&;/ZfbT&j9'%Sj7<-5hZ:(24?BbU4lce"3nhp09\?`&eGL^&708^]\QGpnHp7crUbSFY@MCT]OGcUj:HVrQPZRf/W4'--^
%EDMQE=an6!jseL8^,X<d%^2-CQLAdMjUoEQV.-#1I&U$RnUYO6CE1]\%r:5*e-/Oh(t%-_+YCmj5I*K+FI2[aT<EQ,jQDPo=ZO'C
%kNH/U[Jn\sSVo+&3P(KN><+``F;s`i8\CkReUbWUALo<W3Rc[cBVbqCKgKBs!pt9B5Pb2[ZOVF2(s`P(++BjB@qCe+WbQ+uPL03_
%L?DNN96G3QkB[kVSFt6=4AAGJWmhJh0gSI$VXD=iI\ed]nSZ,U2@0F3SE0SKegAb!31*)WHA31[.)nUe"TF1*-t@8VpQI6Kcf08S
%f__Ab?*K'I[e@Co^EJg15<SK^s2_O:kE4q@pqWOUn..^(n:2\?1CO6@0@)e4I\A@IfWL*(X/!giV?kL.qIM7bTV#EpQ!D200IQE2
%`I$MFcVhaf>$uUk54Gr#Z6FZ=BqAd2#t^71LJ'%]&O!UCe-p%LIJX+p4,-OL;"bnjd<"SuGTo9#^Z",tZ6R.i"Tf&EF9g6:]@)V9
%)f6TN]4VM7.ee7p_-E[m\:O(@8Bd%6#rMWH:_\^?/.s5KR$=>jV+@@G)9V/I#5XK1NPAN/1+`&J@ds)h+VD2Krr/rp);"'N8"Qs#
%6&n'j.qq<L4&His;nUL=B55KU`fSs\Tu+Q+pij"SAn!Z(8.5Y[&Bj6Q+Kom6^S(<CFiS1Z(C_$_07I%$d4/o]C?ki*]B#+&8Jk.P
%;HfoXetH#?%m"XhA_/CsAr45__E/Ia@fMh9P=$c!%ta%qe]_sK1+DF)]M)%&2I?<NmI&.V8af,]-7f.U*mDh\#Lmjd?^JL->eRuX
%E2lrQatq'^QkBdKB-A*C/,6@HfaE]<$T_4NHZ!/?_A(\>J#?3BqbEQJQYsIGlO$'1]@`F/aD`Bg\LYP[SO2D,HaeN5(IR-nT9Xl7
%VmR;UrV]S.NH?J2cCu-_G3E72rsQFfc@2VP^S^10R<#e1I0&te#s<K7<@V@rNAE-EftEUrFUH1Wm_Zh/fP\T1%c1GrN.ks_?B$gl
%c=ZZ*F1[llI6mW7\ImB9WC9LrNs/qu*)/cKVX[U9HB;+ej]_+X='Q`VJVj2)BjpQ;lkk`XD1&22DtB)uAScTr87s`IhNB5];Fbr^
%'NL_3m8OKUpd,et1$5`n_4IISjW5[FBKE&\9=\O'A#6@cI5'DiFEFXfbMB=ZP;b09%etb)$T-m.6SmTrP,e00q>13Z681pR'OY-,
%"k:Q3E`WZ1.kCgirj<16c]&lZI?*(5U@C9KU2m:c=*)Jo6._23G/`U!3X`diD"j]IH:gj+l#Pq7#/(TGc-A&eC1!%2+FA)EFR@uo
%PD@CV1]H,H'5,6i#a.lp`:'o]'OfhOpP#98-2448e=3i.q(osFs-f=_Wk"GYas:iNN\iTLmqH(lRf_U`E4R\/WRC-Wcru&HBc^`f
%_4/6ZI]]LF1[JVh<SHE[D)=+0)E@'pQZ>`5=3oX$Q*=(,aa;-0<B2A+dZ8)oSOuW0TZ`"_a"r%mDdCP4(GrfeNV'9S4GoH2]VQXO
%+R=ncS^q#_hT]i$iG2mi[>a9>lD<.\HH+-N>4lBdj[dZq;c,$kQ?A8<mO93untb[bd%Dq`b&T@jLW%e&Q2-g!4'cc%<fa%_8uj'A
%<MTb'$o$O8&"nK"=jNoaYkI6+,^k>l$pTE)+0FEfa&dS5nimngT4Gf,f`#2p1S2e^<Rk9n2J!.i5=fdAj5$<02$^CA)>(W+aV_5f
%bCu'@Hh-_d=Z&KJ@F2\1lu#=rTX4O$\l*se7$Du^IsOKJRKAH1-lfI7MKr"&hs$ebM<Cb0oOQ;D2d,UBV>V:uTfTLY:%i7$"cGg@
%*U9!)L+[U7CnYeBE"#NF;C-]Sb#Bo,<U"`X)HmUGa.ph#S+V^r7\oT_5Y8U\j=j3(VP5]JlR?P3MPU!hR\X!cm4e?I.>AH^!dQ1i
%H.WsFKBqc"]A&HiFSLur%asigQ(MR19_<G&%e/4Qn/7oe>FgUQ+!btKbL5`f:_N9@K4lqPp_3&KGb7R1SHb7PKn6SS=U(1Vg>A]D
%ES+!/h&nia9CGJ\[%;A>kt,I*2Xp?'SB=j.hst$p>ts^]Y'dNX1N$^,-O"ONI`J`]k^M<3cXU2T-AV2dLn@VVg[JHW75iU1)]m3&
%'94R*rEcDZRoP:bp=`"<o2<3WQg1lSTQTT>D<hrffQn6F=9:Pg%uBrb9_--7V5De''"0217%0-8XcDCT8_rNB)0i7odB!]fA]3>S
%oIW^n,(_u!Ad;Ts0'q4MC::NB'>,dXN]+_F93TARcH_3t=kXt(f&Nj3JK)1b4+4Lu'ZI/HF`h\0aBk)mpJg8`PhC*/rr;$-I1[[I
%meH)0h_P3.Ir4I`eP4-BH6rCAqaF`gVbm@i*opEK&LJOWa/X.LX]*R1Ep[(6)XVJOjLedIh_Uhs%t2Bu%GUXqDuA,HDk1/17q302
%>]83^JZ_K(qI0e&VVI7pq>c0c!P)u]qN%s)Q%"&u/dsUlVU<tFndfRLU\n>eRep._VYun3PQd>OX$7phQ#6PrQPEdqJ@/PT1(_NA
%2ENg]lN:+_h>&rU^U;u,B,<EN]=W!hHD]Q%lN=g=Va(7<f7-ahJL@C2iTL(Q5aDYc`RkCLc15Opb_49bId?o1Ru[*A=[&&8W57_;
%)<u[@)0)MkEMaUne'.%D>H_CXf[9`h`S3VN+^_CQ_&u?O.NYPtWJYW7QS&Am?q.(p?=7JEJ3ZM\!F1[u(h(IOrV",o:9k9]nq8.V
%,gCs1S(Smj/"e`H2i]:o4SMR")u;Y.$!V-G@?T`sc:sVg(UN(W/nhW-jsu@X)p_CG2".\=clSDQ'oS:0)QB0@=4D\!p=u5TXNiWY
%j2(3UT_Eb'iuK3GrBoIF-tfZ+I2oL,\(<s/Wn8uV1pmZFeK.DTR"<IYkXdUleAV6uPE6PP4jR,TbZO?:e.%B1[-o)X`t*]u;T0]V
%7NO(?>[mnD;X=8MTWAe1WciLt0@V[A7(%o6\jGjs'NH2`db6,?Q!ek)&O,9SDJBba/b)ciki%Wp'=AZ-o4:*cNO,VsT;kA@9PDYM
%eb.RXa\S)@r`V2Y_be-C/S\8TVXQEC.8p,)W`2gg2lr1()ea%EdB[TQ3_"tWN[L%c8.a9q'q&%IdJLjpE)#QmR09f/<.ALKnlIP@
%df5^MkmnE!fSuYf(rfO:iRI*O\)`JWVRqV<>IJ.7KKEr`4&Q6Vduaj6]%6:@Wr"ggeU!mMl<*S;eA1Og39C4=`ji+9=2)eB='!@W
%fEgdkeso@'d`8cc.6OD1S_fF'XK(*]7Qhg3`#6%F<D'50[%Za*^0rNQ(3F#)jER8o8G49k@5.9)Qh&.=lnB9s],u[XBTO<Qh5FJ<
%"rjngE'-`$LtoQNAX$[DkQpb^3;X84MXi.B"B%h_`6F-pnNE!5Vk`K>"?4PoU*u/-BR3[]Np1c6m[;WFH(Ij6BCTFdQP8!c4Km`\
%e2FsGDn7S;NY=)&]7U2H[<m?J7PiJI^7Qh):=o&YoZZXOD[>eYF*&:XSB#rMOu[sg.@f;g)k"re^@UsZ:Tl_HRdtd6[sVMcs4@S$
%$>_nSrc@iVT^bo7r?=bKLNOVc/]IO`\dBN;0&W'la<kA:et?]_JH4?Tp!\6f5&>)pYNaY2mMLA3ii`YlL`W:ok6>ni^(N_=/,3mb
%\=bqQ_='aNn&:!t>7Eb"p<hJ)TZM)*j#caA)aX9PZQ%.F)F!PYU$Cm<dOjj\YF&9I'tt*!iBrF>:GYRFIn*kLd+;+jp#+Ye5"P09
%A.qq;XQ-Jg2^6VgZ)o07-<Y]Ls2j)<SOU1q,(,fl<'MG$o7u(B@Q.8BQeo=nR<2o-K)YI.V9A1eLK&-VBHqZJVk7t4iVoXHGq=MS
%I*LE=;E=T<9!(<GLt?G5o&n?DcFP(W\7;A\PsT]h<8&9`lo&#P5t`P$*W<g+7O#LFR3LF(hA_0WVs?D9cC,::FmoPNU?YR(%'4?;
%4@=BmZ%.67,bjlHG`oZY'$Oj^8R)r?"o@a?9P+r^pQtEnlJZ>!]t;9lMYuH0qf=H6d+hE8C:DsN`$>#FBL]!`Z1g=+@FM/`Zfam:
%:s6:"W,=NNj"7Cicg54`k8\\D\P=XO8!.3U1f)-J%kE#]S^3gGoQn:CoB1#_pr"+6kiob59C:b1]XSVj-^Aum]thXs*Y6+:\U2Dq
%mq\=Z/9:I8gc_V?)8>c/?B*<Q)U3DccI6?6V]S.6>H<<;hh$]HGk$m<<HDBk>XFFLF@'OtaumGnXjM.%Os>TRnHg(jn)>1'kI#Q>
%mqi1@Br[JYPBnVo95^$T67D1neO#==.WKc\0Ig1'U-Gn<s7EGtaH1U_\'jjDW^gu6DsE&XjjfQ$n)86s;<fq@(>+*,Glq]gn)!Gf
%\;cd0O=l'Nf'@fPhpsQ39d"n*2^($qlNZVUH5&\<mbRO32P22M[@Pg8GF]),]c0(9n`Kg2Ml^;:6=de/6hS878/F/Pp.7+-%:8fB
%hOWuqCN&DkrT4QU6NQXn?.nrbXhodYm..HK?L+_?l2DF\AN0@D^"goeZ^3%HFKZ6;V7g>m3V#YB][,GJ"ht'(h;>m(]a"e_kMF,B
%rOOr=-A1/CA38mI5-2GBe!p3F2cFs^H&jjEO5AZ;B?bc9lGpS`C#d0ZFr1X4$_(DHHVoeRhI>o;nQlg:=5N9BS'QG^mA.Gi0Dc33
%k4//&pHDr_O5AJ$]AkJM?P^?*gWmC><^"NN)k,:J2E-I;D_#l&ma]V#=mp_!k2"eHToONWSCI;8FV:Udc,A>5cel7Gncb54KJ1j2
%GkDZH;Ue4#V_(0oA)AKN52g>$mu'ZhO1p5uC!RUEn(rK7`b!PaGs5Ya\Ykt_b<I&=qp)7?N:0ZXB`"rYf-T;p!=_33<M/`Vk^Dud
%>Ca:#bu$[d$6!T[Fe3uOJri?5H<XJ+R]iZnYAH%MNO=:7^0(gY\YD$F^(])M9ffd2[&!-DhJ9L,(;"t+?V?q1T<B7MM9K0&VRaHB
%Ge@G88oOU#[C`i^f%Q>?nZ>@d8RI\I`R``^Fn,`Mf%QJ4``dRB?=3Gt+4f#PG*;Oki,c?3:..n7elhHACL)=8H!`cql$1gD.<95&
%LlR8A:P1UmqW1IrJ,L]6af[kr?5M1haP+OXmI[3ZhL+_af/pZ^Gf(KfmfT#<c.fT&7^0Z#\3Z]Xm1$37%rUa)D'!L=Lg"dCgULp5
%S=]'P2MulA[W1Krh/5?Uc1d4_S&0$T]t>+=3jhRqdp&*)c)kUN@Pb[Ml>/5g0=i#MO:Rg8-12!pRp#1UAFoH%g"n8smd+lK?Y%?L
%&tq"KFd[[1Co;0fS,H1AAo"`"'A<f8]=2"goi$)cH4bS\8t9S=<pmV&h'tN.*,aR\rm')9^N$hbj6hM'XaKPJX4N:N,&au6Yj_7?
%CZ;Ig'=ipKs%V_Qe!]F%rtKjV^XOlRqB$fUMSFJmansTk_>/G7'45,t+]e`Wa^?:-kOSq0_rknsOF9oI",1^#)Rqq*h?7.Bmn#c)
%-m:EuG?&%[2cB+\mI98Ug,A\iHJ^nK@[c%AoX_\`Z)L=LGFJHB>umfBmABIHYhdc7*eJr.r@(8Dg.O,Gj=:I6Y='se[ZaUA2lF-2
%;"A`fJo@PR38!h.npk>ms0@sCTea0bS\:-YY`nKePb%D<GAZO2WBfoO?Kq)WX5(>oq:_ZW.(!t*%.THV4;:#,^BpI02(`pp516.V
%a.(OS1ORj]p$;??31+qM%<J"M2&pCR&=W+1[JqS$S_mW^9.*e2@J..4meVt.^"q&sAU.@UY-GU\rmC?*H)*t!hHq9fmt*U+]C1I:
%1?%uJpB^V1X[sM<;MI1!("S3,HKp55?dL@O#/oRlcCY=u,^C0X-23=K#+:[2;t<P5>dmBR26qX0\>D1@PrM5"D[!*B/ZhnualbbN
%Fuu4jWcF6"hXbMeF<FS"di9$GV3C93'j]`2a7PS**i%W`Fb0)=S.gF-g$L)<bl/ZuaW01AIE_*PHB43Wf"4VB?LP29k&ue#Dg3@n
%9dVgOX53@I>7&gdp3gSCkI.i5LR^WD*c[UdDNQGT(14SWl;tN?nSXQJIUkEE$rf#2_I]?8DY`T#Wl\=bD4Bup;6W&D^Cg1"N]P$K
%1;O7j#LP=n3JkG+CZdEEUu[_kR+T(>L_o<qT(je=KB3Jf4-=CAmNN:cpq5P!%^V9Z\^?6^V>V+$M6<JL>*MTj1XT0:WuEXeT(::o
%c1+iA-P8:aKR]!;M^@8F]gAKWgQR<2^tsG*rcLGIGaI2MfWGGPc_O$As5eS*AA<30dK_ke'E)<'<IQtg45%n"]\K,''fbD*S^#&K
%.+p^F37FK0cTCs>Tp45%*U4Y:N:!3LG@PWahMN'H)r=])ea15fcVMeF/NkNPFS2dX^T$,?ibr%!,I+Z.HqT83rDqpR6g0Bi7!:00
%d47LJP74(#e&aS75=cQ:^#NY*S@q\"htF*"rqrje3^+(0;bo?3GcL@]>"nC&*[p9+YT68A4aQ.&A\3)Oft)IpAtlmH0ln[#Y;552
%?8q20"ST0<89iGB!bVd5p1^:BRXG\NoHQ[b8KO]8HLp@/OZka>D6*?b:?gg^(CpZ*E`Wd:AF<19lGnH>F`r-TY6BuFV8gu(j'"W+
%nXi$f:\O7LY>6c^8He4Uo^[Gs^WZ)\;!?,RHuU[NSSqat]U]6tn+GprP";11Xq^0n/J7ZI"o3K)/C((6c>M:BZa86>A*Q1(RYdW6
%SdF][_:RR)Inr#4$<0Ar/*%0^qh:BnF77!C<9mls)9mAF0)@L,bsa5*"YTbc"lf*7IcE)bL#'Yif%JSnEED#0.V<lXbJiZ95c<]9
%4U+PGl#<h*M"o:hoj4bJ[9^=L]1P2U7'>s9Z&:-G'Q%0_chlerC#e.D]!e#U]*Ta?%%t.ff5"GHpVM[R7^!i.Dn2X@\(gMI5C-OP
%SlY92YNu*llKP<rp[g]WpKgFjh+&CZ_u%kW7([B6"8N2-f%kd7U$L#8e`ZM>@pm(2I8"N,pQ(BscG>_=.D,t#St]k[o$c,X1&n&7
%<;r;J\@(L@msXS+iO?!s_H0h'Q^j]/?RiOEi+mkboj<o"ZMF@pd&T_'\alM;(q[MEmULsFeB\j^b0eC!TmU.Z/sQ%rnmt6LlWjU]
%9!M#Q<4%jZ<98;gDq0aQTiYIM%fr(Y-<Rg_J"MhQAG!/s+2(`jk;TmK>-f!>lSM&nlK?.2Q[6!=GoQBE45)+L[]UQa;qDcH0b@>;
%Xs+BKq^dd@dl4F+ah8E2K<;UX4h';_2q;[73YghIh7&E?m\MQ>or_*5/`1F2TG?33[T_!Vk.&+d(Ur,_/b6/Pfd6@"*Br9-NfWBC
%X\h:7lVPOq>,P2EH0o92mkLJ\(L@X)pR@]6e%Kj*emm[:C].h6cZTC02=^\e$jP3,2&oD]4(19$]^<pF(FGR/AC!5;gD&PH;6i&6
%YWLX+\Vh@XUbXUC;E<Iee*`VuUKOgQVCE<rc@)q/A>FcPlnfS]SOE7T]`gDrm<<pPJ1@qB5\\i6;TIF%TF?#7d"C`Wj-i$Zg01>H
%CFqQCI;^(no6sg6T@SP'.A:;,5Vg"gm_Ps,N6gT6!Nh!^s(O#s;27_+\^]iPb&']fb]7^P.d>@l2"QIZB@,?[b$^fs#ZHB+ol2i^
%]$`X)o]D-][VIk51g)8j=rU%Bcumh'^^q-SL1fG7b>/d5c;qiVDU\FlcXI@&C[6`>e6U4>"k;jnNAPNVV\p9gAjDdDHLJJC2pq=F
%(Hc.&T]<a(CPr\:n9]U_[<K\/T%o7!ePd91Mq(VSOcXGOXL;t&c:[N5eG(+,C!'V6K\Vf#N$V$mRJ#4`-i"ns:H6rUn^0gi"Cno$
%G]%=#EXHKk*fRR`$0#s8`JpB;,\2U-SBL(plLJ$D0inNkXje&1FGkpDT"8mR1IP(RI/=b(5NjBQar,\$8rf8MYNT.mlK+ia?qmd0
%*cV]4./o`e8m:BkiqX-Q?+:7U)D;YMn/!\kH2NEKWPQUm8"A<&\aD3G*kS_I&\1Ti^GkGY>jg_NA6rZm7#IQ"B[A?)[X=")$NG+l
%_M"MKYq:9f'ZVsr:<elXrA#"Zf'Zh<I[j0ie6V:e3t7<2dV%%=1%ki&mA?@T#8WkGf5.fielZ^[U79XCeE]RV?Rt\k(XS7<TO@Y*
%9E%='m&o4F8<[Z,"IjrQUp9*<@tueh$FEhR2#nNc+f[f&cQ6<A$ig]I6K.&<Ufi>FE6L5cXXk=$Y#6-ud5K!_mQ3b[nr+I8d:^b'
%N*pne@hNBS_@OkCLbVVg8Z:%*a(U'9L.uaeO?L7AM$jD"3J.SQisM0%LN<u\Yr.4*%bc:aS%]o(dC#LtMjRt.6>bA.JMpopcEWNP
%f'5]11DgLe2(ML*+O5@k+Y9W*DN5XD3NQ\S)soWgC^H?fD,k8=N\I>\=h>U=Qr4s/`gHr>Y[]9o\idDrB84X`5quf8+5.F//###W
%lrD'Tl9W#a+]tHW1e$&q!/OlA,o^B<Q$OC-%J+*')J[@G)E1EaG($[>'FT2Tf%U?agi5:0qJ:=9&2\-STgnkkCM7s5->X-H._=&J
%):Y`)%^FZo(NK`H.;;AY-ag"8Q2?D[=JJO`^2Wd:MS\,B<A:q@&NC3O4!!!KAi]^bc-2\(+Up2&4<UAR;B9G,WA1:IF1UF.\ACf^
%V2D.EbAEg1lDV`61`A`Yj8`S@X3nD>iqR"LQ.gkYUM9TQR)AO?LZ%%6r`3"0h)V>kcU3PVSo$>/osXTSj5'6D,o%la?0AANdbJ"O
%G*P3MAI]s\a0!gXhQQF:1j(9aO:8Hb&Dbi?WkLj%a.go=mF^8jV]4rn:qM6)(<q2K$gP6gW#o=+@sa/>9IfoEPuK`U<W@S"?bHPp
%Hn)H7iU=+deD!oR\I\)G>?\`[cP:edhuU=<c_Qs$S&Cf-FTZ;T2<),.[^C6aXRXmY&!-6Y1425&WuWh`'\dD8Smmh"\.q^)D"KO_
%CpaI\E.;G*@8)c_4l,U@3W(d59/Lt:#(KE0HK93)<?^u&Z+\&W)l"Q!\sn)M5ATb&o,TE^HP7R]D*;26XgJT^DP_(id"lW>?mT)e
%0Droro+Kl;DpXui`7`Ed>"cWQ,j#%!_=d>%,?h';:%V!`VJH!^JXRj--!j[(?R*_bEAaG-*,^K&i+#!C05eKK"p2'nE<GUEi1eh!
%Z$<mdeI(`:7X+[Zj1aMTf8l#G-7c(UmPXVV^ErJ11f95\a^#4+9V1\L6T]<TjU3YmLV*IR/=G6s]1MII/6\'0jW:q>"$W\I#PYC%
%%hYhSp4V0`BQ!lD#Mf"k'$CB$_d0WH<uiQT!A7n4k]JaYOABYiWEj4V1ZJr$lNdrT*^&I`0F4<pb.\jJ^B>'&Hfh6>S+MO<TA3#Q
%)Qck\<":b[Q3\NOUj&ce@=@$Lk[o;t>(&JZ`mPi'%.0T5=:5R'-&r3U4:Ok)rVMoe8nN#[lV40]E-J)E(CYN6]iF'ge6=V,gHBgX
%9@DC;Jh(26llDp/%cX<SV&(ed=&.d%MFK',kF_1nTMkGHIJ\?C+7t_i]FJe,D@Tkae?FC4$11J\eV`T@mS[_"$3UmjU,Rgk:s4A9
%rB^^l'?oi`-Dp*g.jf:_F,6Y<Y_p_W"LiT,#u,dgm7etop9(m9aq-1?$E]m'p\Xq`8gP.h0cP[N=[Fh]3oJ.a/6_?7ihb[As'ou-
%8CQ/_QLo*<0.K=nUR:e[&g-M@rhV#Ur0s6BZGBi'Vp!$8G"U?Y*C;CF7gG7q4Yl5]HoCtE9OaRI$b^/6ae"/a\MmhM]mq8+U%mJ*
%M4[![:,C#GYs=Buj_?,FD;AVr3^sV4KZ`]>$leAUq>L3/;/'lsKF"s<L:NSq;q^;f%(Iq`nD5+Y(:hgVdQ7e;JPSA@Cr]Tm`F+oj
%)sNQ"Y,g*98lsuUlO5ojW5)U)BZO7SNbl/>VCr$Ba\IKca7mUif(pWd1`Ds'jL;J/QYJ$WHp(6l.f94(d6MR7Ll7Tp[<h2NP`mk:
%iSkX"lii7<j.Jn'koK/Mb%u*\>7c0h9NR\ORhc3E.&pgfl-5!c4S[(tXn\aHfs\e(84VSF[i#+MYoSjsg_JRWATR(_/V'0iM;LEk
%k2/h-,D9lOVJ>Y'B1GM&b[b#]h?IQp*,o*ddpgKF:G!;H!)5uEYuT\9YaX+j4/L(`FQCCMR/$&pn6hl`nPaLqQ?#hkb]sdk.<TZO
%'[#d=f`6JY\Z'MV%J\@cCa5Vp'4E/iLS:D2O1<q--?`\OjU4S&Qg!$9B_D?*^$/g`UJHYu>g=>[CoC1)!pabRr"T1jg@aeYTL$Og
%qunP^R:/gqr%'.Qf&D$cQ4lft!+/;0rJEpE.)Qek;uus/J6&8*A2]j:6a`rt\`6I0e.L3Q<?*U@(QM6`W&T[(*.0Ng?igeCMYVl4
%j2$cU4GMQQ^^*eQ#IlY@<"WUW4PdmtBR^*a*$Vk@B_;Ii27`eaVM*;1&L/)/%JB:rPl[Ut%K$K?*!+(kL@\h,%6?8!5u>3[cZ![0
%DqOgHcM=-r%P1ka1P6:T&B>'3p^uf`&-JdCf,.KA"#MXPO!>j/*<!9p0GGVKJ:?IgKcu8K![IV;A.D0lO.R?%KF#Ii%U$g]5[!$`
%WI73g#(84.)JC:3aJ.I'1,_C-<6%tt2DCYtK):=U#*M>[!=bd4J3et#*7YMK)KIW'dgbl'>'_kZ/W1RL2`>_D&i%<[:t\XtaO!2,
%h/')V`nAIhR-0%C)JkF)hki%R9kNQLCD`UM.C@Kh8>-5k34TDDnUHBTg`%Y/CuBIH9bf?Q(oL@9@lnXS1*U5g!D21K@J2B![Xe5d
%pTPg1Hji67?LBm(bfp^D:kJrjEIc.3^X5abqf%^])es*^1o$7-6Tm@bGb@@//NE.I9tNVT?H=nJC#7LDKZ/`D$b&3,<VWWV"Tg&6
%G9*hPFEsX$>XiBt1#@ptf'4WE!hXR(,$MX$IF<jNaC]T?qZ7\PqDha]e\BbhbImI>gT`/(n-7@n[msJt%BU.>*]3AjjY!;14$+i3
%`Y^]O,RHck=HXA,I!(V1[NJ!J4H(6X!?+WI+2-!5icK8?(lqmk/-YQo7aR/%4rr@V0r^ASGK,XinKQ",gVp4<Z'T7&KDAffo;N(1
%1,3dD@uZ'm"2b/7JKabaHB4[G'88^bfQ-TnN1*VLkiC9[&Fn/jeKl7K4<@k,NqMekEG`YIUShApjQ>IYV!VolRI-Th\s];T\HHFY
%O5[oG-Tl:BK//o^#4H`2K3I=2X!d]g<P.H1GEp#IBPI<+BoEL7b4dSFGf'iPA,PJ(n7F,L_4355E#V$fUu#uqP0+`Q)m-M+lB$j@
%PL(Z^YK/j%bGp:&$k3k11ZpBj:ENg<Q#RA.EB=m22rc#3)g=XmCE190&*>SV;Y<lEd(jTd+1sp(H+oP["RhMcb/&PFPS`s*)AE[n
%at\-UJcUN\_st@6k6a^]"FubD6^&R:6h*kS[8CBAJH3s8;:+HVU%(KK-lf5<_pO?_W+$F>fT]0p^f!%WH$q[a;qX7HQ=pKN'_5s;
%Q8ot&pVIko*&jn'YeFG>C0*^f[36GfdtT=2d5?f9U>`q[pGSMN"u=Mc-H9\iT=3?,l$!)lg(7Hi<e7rTp"]k(YN1`X(PN]FF4WH/
%k9]tK)tAimicQR_W*0^d3j3Cp?+#'d?S2ocPB(:q[ND%mU$eCcai:)7&j47L]NG%''F#G0:D1q$+H/Yp[A!+[cm7"[U.Oa!nH2FX
%#?)I-UtS]Q'PboiTANG9WVHs;Eu6clI4B!TJihqLi8M*9DIFs`Z09<#%n=2@YELUR4laLtoaPH<Y>_\VY;hca^;!Ic8F^H7K>U0f
%O!QAaJ:@_Z&9-0Z;E+R&+j7.SeQ1<\a%*D703[ZXhVt@^kmdlK]lZXg164..-oq\EI.c^aMl:6pg*FF,%c@P'Ci9Xif\K[c4cG7S
%ba@DLS#J.f(PcU]S]t80[Ln-C\c.Zs'\$eC`SOP0K=e&KO%iB;S3V.dk59n7h7V!q'D[uLeYU=b<;<a;_CmVQ@TJ?WA_K^sEYDD+
%e9TZ1eF%01Ap*>R\jgMF+[<`9?L=0aAlJT(42'<[;=LIrXn)YGOc,_aM=WoZ%t/lZ9aA/<RVi%DW-q4+\Fm7R!DRc.DVgXlmAO9N
%7;an#[apD!?q`V;AK8S]G4)jbgper'RrF$F?"&'pOPtUE-$RZ+35OP(o%7hV0pOdKSbe'dnCMEh"MsPG4oI^ST2N'pWg;Mh:A]#h
%(4SkV$>NroM_ZY]lPiRfY+h!Gm[d_)9DKD[7M/uop4<-)InUB0rHR:ApF2h!$T/Lnc*fds0nRmR/gsGC)fh7bX3=5DYrdi.3d>Ro
%R-S).C%$flH2%f)X</8$SU-Yc]&#0b5ghu5rB6D8CLU]4!Em_2W*od\G`*t6$RO:<;8]\"CYj+;On61eZm1_UR57,`*%tQ1gXAG4
%eS=o."N7O6qbW.]n$b&DR;9f8.>^`s_O<_d47>cmEdj^N)Itmu&%[E1>P9SV%q%N!e+dK'p-,2n#+Dr;;V=;%`Zgf[M*'d9ZcTQ7
%p#.$71t?&2WB?tsQ-2LG\Y4<kV#S*iKh+O8AGjK'H1C)Qdke>j_0#F#(t@r+Mk7#jCT70a'>m=$i?[JUb4^VAC9iR.mpRlR^@?f>
%HnSd^^$dos>7AB%dcPj1o<Pf]7af(_n1jn>euR_ce;kWBmA8!_D1CV'83b$cV+n-\?Oh.0G4Xi9S#I?P_g)[#\ZS+k:m@`_9JZSM
%l!l8gRn<"3fYOYe6*Jq"Vb;#9]W@%8CSCuK-AZXa3)p23'H/5RQ3r<!4/G6s[SOdplED/\46YHFe2FQlV@>Q5h!,n-Qoj3UdJbAs
%23(b%)[Euero[t9++?n^c.j1q:"#Kd!4eJOio;bB6Pmt6?A%4S]f9gN642R*'\3>0KjO]<Ni^qqH2ls,R]<g7*=$G1E;JbBqTp0#
%/m3O<YVq[c/B&I?2gD45@@nkfX/YZuZ6A@;ot=%(D>Wh(mYK`XouY9XEq_;2EjE/i,]M7%0pG7n21Hqc^[tYQ^%"H4..)'PRJ9("
%gZYkd2+gb*5'S<[&:b7:\jVQ9S3"dfOs=SG\'m"cAR\'r"U*^8B=ut\,`HfJ:^rNg$_h"E(_;=/AqS,fg\u^X!9HlOZaCnlgDJs)
%UD\Qa'c.gMB5<o7iO#!*kV1q-DWH,&:>@WmUGPmo6_T:7(LEPho>S+J*<$ttp-R`R(c2M/1Q1D.*s!W]J$cSjAt8B=Y1!;eq$B%q
%d]n[Fn3qGCm]dbILdQA"ckQ'X.SqYS2Ej*XXlClL=J*O>`q_M6=q)2"Bsf0442ohmg-8\/Gea\*87#7f.V9dM^geVd,_4`.q_n4U
%54\n,&6m1(MRiN)`D0@jo>[@rGn7D*/[HJMi?1!e2IN<m;t1K8<#."9k-?1TI,u=^3i4D;WD%ES2eK#g0ogIX[>b,2/)%t$p%@<a
%%6[O-Ea.t]N%lWtq<Eg&:O'2l:pHdUBo9fQK@/K$HP.F63%r4.r@@/C#/]Z)>YF<J&5/[_H@\\RbIjEaLm,/so>od"o!Fim)_Z7_
%d1A]_[ur@Z8"gO)J_^`#9:Ik9C$@M<9=0;?@q,-S+ZVZs"`Z'$D$_F]%BU/7q7nTi0XV^YjjEc`AE:9WRjWX5[r+!krJmCUq?\!t
%^jt2uFN5LU^B![YS5p;ADhV:C=1plfFf18urX;uhbo(;*EE-c4N%*T;b]teiA+SFP\E)5bE:pUgd_;:I`V)q.H0Ae87G==(EPG$)
%*jU.Q/-F=d8h"fS>jc62T;`US1jZB+i81V2qf6.J%FAL@2`bH$BKe\k\Flb7S"2F>GLG6l]Vsdp)]Ig`V[a@(DY'"R?kFu0"\3,k
%#MM![$&fR2[^J#T]K&7[O1:;=p<_(jaRsT%D6+\doqbEDTAEN;hQtNOZr[H@G-(k<jDgNEPg;;Eehn)=<tPXE7n8u6hGYg9gQG4T
%29''^AdoXc&?TH9L&_L'ZIsSuoU%7ti]!ht];Z3%g!GA2U`9KgAU#e*/86XI]X!uB4RBaoie:J^En]nrcDa3lHRHeU<$`tN;qoH4
%L#8ZSEr*M99-Y1UVDL#,&T#4L6/bGA:0r1d)G]XL/)9`mf;%.qWZT9^XV[(RCkYcTG5N$uC+56X7e]5]cJiLJcZRgTh\H$bl>V*-
%UYQ;bJdl76e(%!hDKDB2e'a]<c"?]U`@nXs.sLJ(BF].ece4t_:2K=ZdlU>303"iQ_j+N_?P&;@'r\ZkS1<F=QXFtA8(kM@c7=(*
%"#HCmp#_PP*+d@9`I77>U!+FQ?Q:(Q:36aOqrBnK+7ES3HUt42\>qr=(JOO;-aQ,8@<?p;\W])JeqfC&*>CZIlh=R&#DpYoSrZQ[
%]V!liYI@Ffm4!i=R`8*MS";hfTIJu#[NFp"a%u+*JjT^g-AS^FV=/aHcB%1P8FINg1G:iA&I60=6`%0`+cb;]Gtlj/R4YeAO3ro'
%UVg['g3\#[D.5M$4XkSj2L,a:60).Z4rs4_(i3PE@XOWtb&1aM:qR[)RpZAAZQ;j^#M3'>C:1OBY*=.1BN0%dQF2+08GXtfMq`;H
%O?`9?k]<[E0.$E1(n"E5'Y]Kd\VY*A3AVr-BScB&UTs%3<J#/P8n@4dr^=_`C2DL:%K&\h$APMG!Q0p323#qi)=G-EHT+C#QfGu'
%2XRNO0%Or_T_A__Wgb,pMYCO0*Sdg1Vhk"B)i&glS(o?!][65c@,S&T7FS@X,jg!,oN3VjcLK3.Y5KBi_7<:8)[2.:WACiL'"s/W
%E^Xq<C(Ce5Sb3?T\;ceH];]t#iJR46&UY.0Y2/`Cqp.F6'BOM%(`ic;_NaFV"2FZc)E$:Tbqmr%pJ`L;VNj$6QLfoIB7mXpQM,C#
%Ui5g<?gT9_<OPZ3)L^is06MWmZb[A^^[d+3&/rQ8<@(Y17Z`Vq:'BHk.\3jp%Gmlt^S;LP/Ce<;C=fAs?\mXemaL-W@?]HP.!3q8
%/u.#CA]4VU2q[I;0VTZaNCP6JoI>Z&8Ua)=&Y?;VCIr2,p$C:f3qZN0>Xhq][9>0;n&j3VA_V"5+1FMq=tR*Y)V$=lG@HWh1@<$>
%J4CQ@aZm/9GT=WWSf4cS2$ju3A%ZM:<>uLZ$"pl@A.!.Ng=!",g3-7\BDP99#h6AlH3cN+n=>SW_G(\&!1A(+-rslre6&+>W;WSm
%JK_q*0F?0I?0leV!%8#a_AH=/Hfes+p'.]^+Ynn2F;iN;N<DYO0OAr.n4l+L2<9M\D[]ru@EfT6XS8(*pN'HbHuWfgXpF9>7DsE[
%AV.?7)VP\!r/o:IVuS/3c0ftS0b(ni34l^u\.<>-_=5th1RqrT7^'GV:U6dnq8T^cgZ[-F0r4cR[Ae[SfC4MNID/W$+'DY;E6E7=
%bug&7ITsOAXtZ6_#6Gq$HNGq)1@8qpMI$a-\cTF"1ump-"BeZg:.*K[>)"g6XJ9nQB5;"a!@+b&Ve_q3oZdB`k'4+J78i55CGQ"+
%c/>s5l)7P<0/e>1mI%>_FDC2L\>n7N477gT:)CRon7J52'VT]]rGm+Nh&*X_H;,?MSEhB7g)QstkaqM,Nf2#a=Ef(OnbE2XY8##m
%WoN&[j'2q*Q<lRCkY6K''uT%S?cp9qQX$mY/'),+"Ue;+Na9E?8\Qe.V4KI8n-X[qj-Ph(_c2BZWm>.bMiKTblElMA_%GSe$sb:&
%9UR+l_8QmjXIAWF42>tX&u<531foH+LTKDMaf!g5.r8JsV=ba*1MIeAV=h`HSE&T95bcJ>pkG<RH^RTQEp4i>MB!G,_W7M7'&g(8
%QjJGugrB,D?jtG*VI`]aUiotK\Z1]RNhNNjft5^Zh14k$/$iVoI++XO=T79#;Z>q5_sB@F!CYPP:[C0S:2HqK!+;p-mE^CJ::"16
%;46S#!!8].J.E'UIO5[mU;L)F5aWDj53-06=qfD/N5>]"K5;!2KhWr7T3q\:eisQNa.G^&T_\o?Z"I\MjG+DS`]B"i&grD+T)IlP
%M>jbBj)nPC46f33R;fAEL4^W]3j?JmD,9]4O=g0jSiT#][tU/_GmnT;BnO]FJ[bmLR;a5kCHG6bq+"HnZ<i_"OH/YI8BMUlH*Y"\
%7EM>qC0/ZtPG[2%B%4tu"$PYT;%$a%p@6cJ#;4Gg/egO2bc'Y.gSZ\eF5@"Sd,;gtPNL7aQd2@im&_Mbo?h=\B3u@.4)Wd6E6`ec
%&XGC;Rj@ED20LD'jLKQM9$)8DUl/IC;#A_?Z/<0,5TAn9ls:Xoi$B@DDMQ529`l_4?pA`[nNf'CQm=&%6uhk;T]*;7D/FO6Udo.Z
%K<ikNBDgkAG/P%52/l@=*N*#eD09?a)BCW-LL0-FU0l@9Whn'UL)W`DTEqSVL1"@$J?Y$ZP5>&/dUW1dn:Q2]U5,NI&&kjDKghj6
%o&"rmM1?u2`m]fQ=>TE$)LL/g\"=K(HM^C=gFq>#H"sse$Jc>DPtQBH*rjDJ2";4J(qtuS!=H!LcR346*aHF5DVNThi7k\TrGNEX
%K\Z*/b=C!iHHd9%5<e,9%tI:j-W\;'V'W,9W]p%%N\<&plb*M<TGpP2p/P>]R703OJj-,GhTBsolWQo[/%mRfLKV4K6^>7PoLq&)
%rSJWj*mg'cs1hSKjmp_PFH'1/e=01a-q-V=flUX`/=N_Qh)]Ufg6H/lD,lqifD\5+&+#XCNP4rcCSC@bMeR^n5WhHHOh3BqYJ:)]
%4E:#ZpA<`sp!JP9p_>+ZOqfAU&S<J`UhHjl6s)\X$qlE?"4(uh7sf,"<66fsB]TKqFpt#"T^9:G,WqurLF9r;r>Qearr!Wo_D$Xl
%[1FJ[PXhA8+,71OYb'AlRa6ee^JL,YIAH>XRUp"dP:Y[fC#n"*+;:m2A1/mh#e6!<KKN7p7$<uKmN!==(l;?2&i%;F49BpfG3X$_
%PEuj&qqXf]\oVOC.@4^/%j!]eq.r2%T/A8X!h9A;LZJB-0;7Krc`pqbE[Hkl3N7Uhk5Oi)!oCM#dOlnnVOVPD9a$Nm`6k2alt#)l
%lVXDm5K]h&<LVg1Y'[bHrBbp)Raa"L+?kL3*4eZDLTZ^g2C-dI6.2U\+?+C!1.$f!dLkQLWiS;._K!AM3_8buUrY7R0*CXh#l.nk
%VcZDV+(u_7IH1^>j.^6O/;gfjHlU&>F7?"q.5.oqLS:\$71u=l"HF7T-mhVd"G_kf0M)qbVt0RhZp9@;;IiY((`#)gpV9lq/-%L@
%0l36=)9P=1@[JDP&5.^[Q=*Nh$EDN:.caD0JbN!"#ZrO/Q%s>s$t1QI%LW>USelr7:-^[.pact-"f6ef-7DE^84Ek@S3TE'aG4J\
%U;3r?@?(R.6O\NL@<bb<(SE67",0(/k<(R7"rIJ2P0dJcclZk%J`]f96kB]8K\d7XJMYFK%H@JtTd'`IKEd_Jj"nj\'hNc5YX]%5
%k>)I+;ZhV#p8^3ND<.K`B$r#PquP.2%?B):-f4ZHaJLC_&:pOKo4U2/MDTsmQ(mIraWnJ:Pia!_"K2IFim+s>0YZ&f_QO:*:ISkL
%2AWR(MU#.p1G+-V'+F%V6rW$P-in_LT8V/B?pN"K'rtE@H=Er[J%1J.0nrKb7.>mYDK@?V6B![I+t[g<0A&KSMTJ/s6&lOHn`U0k
%'VaM!9sWD+g.Fs+*e]@*R^84mN(JORcZ?0b6i_N]!r")M[M"C(,fE04,Y;2hC63&F!mUn&[:p-K2G4uX1^`=iKK'/S0T&8\`5.cC
%'-n-u:s),SA-<Dm@L*#K_a/0*nW"g77i7@DW#:m&9-S)SB.F\t&&hu,]Z;5t.Hi\2<\T*+^`uUipJ[m,+!2guJMBc2_BbTa+@P04
%Q3Gd*Aet+V'T!fH0`id6l7e*I/-ZAF73#a%5dEZ.95#FbUhI&B(:):'i8X?g67tt%KMe)q"dG?MLe<:TMD,Eg/(1)C"-Q2B&K%+7
%0WP?122-s5O[i)"OC+-Y&k'c*i`;bP/>d"f.Q_a3UH-^X7fAK0IZg9:,)Lt@NF@e6-dY`Q/OPkt*cERR>8eim[Sg'M)M&k7PiRu!
%=E(<'@h_5g@'\(4);6QO$')uTTSBgN6ujD#H]b9b8Y`FgMNif4B_JYEE`NNKB,JMhTVmqB+CZ`l?[3]Ue;D(uB\3i/)TQ5D36&&?
%?p^Lg=HXSg,TV;E(?UTCNoVU8?-l$]>0Q+HG-m&1WiYoq;WoR$+KYj'V'7K.eP.%$NrL4\;l[82>aXXr2)YV1Z\C`i;H'6M^=cqS
%%^U8H(!Sq]aY]4n/Bq;Vj9uD"rrO&tL>rH+15]2<_3#oC9\,B(<GEFUI^Bg[6X6+5&V4AbJm`>PWC0PcQ;:_lQjO(pN$&ts"/B@#
%K,:b05S(Z_a&_78WE&5Jl*1"L.L6>Vdj%;S52:rjTta.AY<,?**o$K%ae85iaNb@^p6?AHONGAt8YenhqaV8gj#E>;8)-<:,9K3^
%m-YsQBZO5V&-HDcB+ZAmL;P$t,4P^0<f:!-E5E`ULEZdhK;SAFp%BMC!/`Z4*sMV',R#D^#b[L`K0^mEL$.gJNb!Ag8WF\YIkWc,
%(h1tq1,)V%8]jmNF@EQaU>]UU#dR$[(<[LM,T?Tc6^J5c^]\F.L;q7,,-qN;7SU5=*k<;f7c]:J(h;"fcA*U8-:^E^nA,D^1Enmb
%4qkT(2RL]uNpOPYKS`8=<R"DYRY^I\C="F66c)#(MBILj7M3s%'J<kAW#->-XD!J$4JX^W7V^3<89SZ&-gQS@BF;SKfdakgn6s0B
%BkD)9-j:'"<eleq7C*ILB_LEf0bDE>c:KlaS$k^rnhr$S4!A=f2+nt<Z^7+DMkW="3Vrc.jZ2^lA3hA!,OCm@YN7<("%>O5%*;f_
%We7AW[7Zls,6Z@g<(&Ns?Sm\FBgRl;G[A<<bo<JjT,C.A'_OlBJ](lJWA.TsQ9omG=tNpS/9EmfZm^`r;s0,a0Hb*Q,a;+L+[IR%
%dZu,rrXFa0T!k[)aatoE:)qXu<eO;lE[)L?6)<OSLW2Rk,?P9XZl):p3RD+eA5!GsMC`Q.#DWpZOor24ZR.%6LN5Xa&]tA5/WMTT
%1ZfeGV)2R'BT*dS`loRA[huJ;`"\1T)JHKk+aLsHBF#1uQ2nfbAHb/gNl4A^BWsrLoece(oG<8shM@%;Tg;,#R0HP#5=bg!1kT=P
%KI59;(;llA=gK_RTi;s['$G?.UgpZk5ce!c,8mibTTBjI1\he(_U(uJ2S9?1E/BjF\'danFL4T<8R=4\BaU\(8G*FQN06KrdZ,Lp
%bbElEC"eAGC<QNkV3#)AU-T3%UnK1k@7XWIi05<U#`&Ks)_>P(8]\M8g]NM_"2bDdUHZ"g^8[;MiYr?2TEbJc#d>9P\[ol8O['N)
%1[GB)*"Am4PA2LtTHr5oZPAmVO>Q6+V(hUn[,.Iq?HOJX6U`!6P"$&%AcW^q"ElS%Of@M#CFc`uSAH=Y=;eK91\tm;_Hqn08K(br
%/1!]1@)H"okU>R(9dA(u#pGJ/fhf\a/uU>Id$E?]U/f?U#S:Mjn5buq$qI"I@R\[FPVgU=k,d&QQf\_n`M7c'm+'KcJhT!'%d,5k
%$=BO,DB^!R=iSDM#1X9p.)W<qL<>&KU%rq[&bM#1#QnEq.)c>MSYb9C;#ZDe&^9d-J.a5GrA;fmd+A=&Ig.>m1C7hJ+>BZ;'7"Xu
%9`sEH"\HS<6D!9J5Kfb=Pr?HHJN*4TJ08Zq22qgq=AOpm&2J^!W0l9hOHq]=M&)>3,0?;1N[>W6OVrXBjg@_*0U[-NJlfgL!\#d<
%j_-36/c^bt!Qt]oF!P1?<,c.HDiLhY1cKs7)2Z\*)e-S*gQT^ST`ebMp*$pp%E8m7>mH!p9a3#-MrBYuZI+8/O_>.n/>@!ThW!m3
%VD+0*E0)S+QE.lJ9$:(H%Hd8WV8fGUMAUnbAC__=AJ<i)q](Yd:F"Y9T\N"'3iieU$0f/+LV:ct=g41F'.cYQO^JW\$sfc"N8="6
%l#o&C!JA;Dp+A.@I-AP3DW^tKmbVKp[UcoYS.itn3($8&-G48OH;VRaP6))a!!7`deI?C_2%]f&Hn@-q2r>uhJQ+a<(5lQU,8[h[
%mG2qE[q=;Sf^u&>4iK+!gd0\9<;KdFTjD6?TO(7aUN/YI<"A1`j[,f_k9[`IV_rp*H@`6l]JQ_hV!H=1J20g'brFVt;WTtrq]C9)
%XPGal/R[rGlVQ`i%3F2P%J3rrT_)b[2lg7h#.1bFr927)UC^(EoOML"`id$,.*d"N`'aG$F&;n)>c:?IH-)Z+di/7SN4#AASf]Il
%^`ko'-,+\B?d:]P$BZ=p'3d78LVT@4I`u>$9l(2SZ&ZSVqX.UeY.Y1Ump;]+$iKMu9WCj:YJV/1E5\'Or\eGpf=nbf379[]%b^/t
%K@cQ3TMF[!_3srO'#/$RX8SKT0OLVk93G*7[mg7Ip6ou7>7,L$p590pdHf[u8qUo<dlGF$a#lETLS3%1-NJbN[@qU$nUtkpd@W5A
%/WC./%B#3!!QmZY>(.B!&Glhe;!(['++gr.m>;UM<%:m1L"[Wql:&!c1__FDg+tCh7(E9Q9;"@3a`=L\kT3&Xr=El*1C1Y]i:;@`
%"31@f$t7A=C4!V?\<OAl#.nNZL:D$!qfLUNodl1VITFjJ8raEm>pS`G%JgV66KK/-n$!>mrB#IWk\Db=;,!L"_P,77EM6i#QnYKM
%Di%S2c;JDT[o]dId(j@_pVr&DY'\U,`$Ys!m<XVE[W1:n[rK9YAt2uM-rV^&1esjNQ>rPnPSkj!jtO9@BcW+^H4J%k>7(t^QZCDu
%$>UNWFAI2ilQAd+oc<9*CUH>sgB8YJ232SUk_s83TP5U(2+0IiF#6U9a@m7+Au5lqWbDNQ(fab;V?s\K7Qp4b1]]GqTX$CKTY#&O
%F-XQu!JjgKb;=dt>.5P1=O8l*-tK`#cn^/L/hu`h<@nlOar+2Y//),Sd1#V'9M@h[FgZ:,bJZ`B*_Bt3=Ne"p@W"J8-4jdbVN55T
%i/4tV:+R%dlLQc)*5pMV%d;+L#ILQ/H>Cap]&55TKJuQ>KWTQh99poWec5:a?4Y!,[4iYJ+=:TQo$@KD#\)$L&r-q.7J@E[SL-DL
%Qk\*e'oHc`OC%XCLTYpd==$(UX:dHaP6%=;U)F8M=9+ScBEQ:)JUZ\,*d.j=0r)rc4CakAf1S5:G)7.q]7`\n/chcK,s^i1r+8Dp
%F+`-lJ>R'0m1PeMOa;5l4J3CX<uX?aS&sY;Fuf[PHDY\=YG8Qa?!Xg1E+e3;ilr+g!QB`+m1T3(elm;Y]7bg,?/e2[?,E:EQf."o
%m44l=!r]&re>-TAi%WAe\d/]Xgmi+VblNP*/k`n=+3Of6(4n_?b6/SO-ptak=sddZRLR[r'3oHm<7;DgnM]b4Y@Eu>a>$@JnCT$,
%W0_]N/OjZF5^TE?,`XGVBPL\Rgb]pg6)X%k+IheqCObOlaO0>E3ZBC&56&$9e.@C^$$Vd_6ffj4fT'^<Y1`fE2p9.ORW.R)CUkW#
%_iN6<2gY+P)s&aUb&oV?#QSUS90.AeM@i-%?G#tUkcE$E(FcNI+Em57\09<GDUe:aO/a6%.-]BR*jMBd*^1'aD0d!'6==;^hK&^r
%VrG*P[\^'X^jKElNJMO[`I<Zq2':t2(Gu71PkrlR,()_fGVoO7$/9eRC4q5J)KB1iNGthq&U6a1esRG-f(EQ\QDkH(<J-uZ&WpG2
%W=79#E;@p)';n8e=96\H+Bl^8erf&7*#SH79dqeSJhnk=RAgd#/o+t&8:\i3>"V@,o@>-!Jq6kB:6,Ah\r<u\&Ql"q[bJ\C/%U$;
%#M4BB(@D5m_F$hWnE<^q4Lu'YM'8Gh=H83bXn-O[7p+E]nAkIlEL/uDb.npq3J1Bd5%NNuGi#I2&n]CTG_^1kY*U\.9JjA^2$:>&
%9:J2R:WgS!c9Y3pE2_54/lW>WouCllDG_@/1mE@c65Oqeh5_"=^"a[g%2[iD]u*3ARCLVG9K6":$%0!mF#.A/?VZOHThI/g/p\lM
%-RDITjPZplqnq@-N@%nrM'%>(?>abMrJ/uNYe-`<DInFS?msJQ'7b\7-E9aakU7*'C<D3"<LLXhX;[0L'A*A4Is<t5%%ZgJX\<,2
%AlB_K9OPM+Hal(d:=1u/1(iL7&'6=8>cRDSk2:9l</Ce>2!s9j?,Am&R;f+R-6-dc"IALMr`fYleVW\C#n2)6o:DloN$f!>GEC)D
%Z>&U`#VgVD5u5rAa!JF-%h6J2mm)2SN0W"3eqTE)^6G:3g2C!U9j)^q2#YmE@8_]./3b[&*d*plKo/b.98hX79m&_MeV<?G%n'X1
%q646,c-l_P<.'Zk[=A^7M2/P%EM6V.E2[Il$X.<EA\hKqR.Y10aD:BC(*Xp57n.)[].=d:mcjPS?t;_p4T]YS%e58pEEmAOA\uNm
%)hb-[On0Zp"dn__OARR]89>@ID;F6h[dN*NdleJrA=)/a7u#9m5>;t4!PRkU@4\?J^un`^18BIRi51_>Kbj@YR.?B%mPL\?4r0C2
%Gh=]0F*\WWjTFfsLZk!6HrMmdN#5ZO;cOH/4r.+-n4!g=ef+.^HuMpfgB78r-!jB[mVrf9H5t:G*XB'Y3T9gU74FlQ9quIZ;4k)i
%Rm0\jJi*NW?WmX<YA?_e<]i-5JYs))A+Jeo`5qS]?:G>+!m;+c`aimN^<Hp5YN&N[*9=I:LH;Qt6:E-?E!Z*ZL4O;]4_pVB_.`-+
%Zsd@%LN(p#Yf9=,f1S65eW($nC55/Vm6JZjC6oA3TCcqq)ob33CR5JT1H+/H67aPGoX&%7O3-80nO'a_)TF@g@llQOFsLZC5-tfI
%89oLp"uf.S:JC(nOOH6CFDDm,<NQA8VhB\>XTRI0N8pUS?t"rH]sS>D>S#\EJOMTYdtE9cjW1`\=pM>f7.],9#8_,5qk\!I9S"V:
%lQ&ONBU@Fm&>sXjcm]t?Zu^L9leK3J(^Rs\F<:<h4sTT+G-;Ea4dU2W0X0fmn2+S3>;,q`_Vh:f023_>gX3\@K6p9@%hf.+UGac*
%aW:$)\T^3q@DXE1d=Aq9:aF1ehPiX^5uNR*6jp^BJ8-jIM%5pm19[TCeWKUd$.@c;BIU7=f7J6V%@$G@)T)N+O')6%BMQfV&HTl%
%F<f+:h]AJ@;h*0@j-[MW3_fQ7p0N+bj0nL[;u7;snO(Z(ZetHWNG+&^H-$5XB@`iu1OGn`TmOg$`R>Y_MP\,-s0T?QfH]NA$"_B)
%8Cpgd8:@fSFFLh@eRa>WlX$a5oX5MWMm]^9@?sE>8ug7)03:8CM)`q.>mD-E>GtUR4EMA)7f?5p:n=H]P!,/021?tsAh)$f;F$mZ
%\<d8+Yd-]saJk2U]bmA&`^8jM]=K$L'c3llR1gS$%X*W15,hG05jZQhhqX+"W63gPdCdu@Wg)fPPb%M7A!.7?r*VIADh<G9+HK]o
%"5'pS>e/iLfTmOe[Pq(%nrB.['9/>CmX9mi4Ab>d%ml*&YXK1nW/R*oG/^B[1@9C%*cZ<&cr*FWd9Z'9[LV&f<l&%Cdg7b!oc:/L
%LK>2:;FiYf)VW/i[*[n#FK#)0/l\/-JiIOp*8\DrO-B(QVC&q:#P`iLP]"_XVaGsTqH_-CG:9,HK,FYVlPujrEHUd*b[c?rVP3<p
%Q4Y_.b?@_qNQsfql3M]?FQg:Qm'#PZ"k;)j'jJ:3D=Q?9C%U!E:=o2OGK.GeQ"Rc-?HK1+Qh6l=]iAC#D3\uK<EK%e6mj2;cR[;n
%^J3P5Q@K92b\52Vr.,/l&RjPBm1Rh$,@-`H,A1iuPr3_J[D.C'PWlAEqsAEtdml6k<gU+6hdIG3`TSs:r&q"VmC?@PFQRl9[>]kt
%87/Z%W_spINiD%KCT1;1,=6oh]6'D*3>mMSeTiI2nct<9S=bE>p5`1VSSUSh*G!f[YYB>3&GD#q4r39qpX7jilYUDB@om9qp8>=O
%$abENN;nQ66']*C@F4Q5__P7T)D/mO%g9\]Fm,;%]G1<Z&,[#$B[GJ(AWaS'0c[c3/*UmoqL,:o9m0]^(d8G4d^i0R$bn*d<a,[l
%Ue=Jt@Hjnd+8GBVYQ"=V$gHsi1t,BskX`A0cZ<]lO%<A<6*A(;"aOe-cp:qF02VA!N]<!`=p\kqb@o-B`-Q>t]r`ND3nI#pQ>dYJ
%G9^>hFf>1l02t+hpC@'/?";Yk4P%!kXr%WG+sTme>V\RT?5g7Bp,@@aVtt_$]lUr,6f8mB7M&G22:feR%O>)_HNJ-k0%VE2Jo!M5
%i3gUM<0t[Z\pgcV[q5>2Hm_f(_Xj'O5Z9N<0DuH(IBM0s^7[1Ip*l!2TY4)2l;tfUl4!'HS8$c\nZ1TTgogdt36lt)U'9(^c8p6m
%"mpHj:q$ugPUjS`_ktj>`ifMI9gX61KE:A9lX4'rM"Z,99"6!J#nB)fWAhup<;-k10m/Iq&ZY/q#Q',aAc3e9;C-aE.\JDnRMMTC
%6PcB\d1`4"UPr%B0@:n@hjP4Pl<A]]<.,QWr!\7tW8<WTW-\*SW88q3<;eo&>jiTkXSqQCEn:5r:q$.%9cBjS,8R-@;>8=BW-iLN
%*VN@EJ(+-^T*$G&;X!Yu:Uij1o5I%K>eQ;%dY-</DUZi0:'bO\Xl8>j"-'>>0`O4/6o&R^O2`j95UZTdTt"D%[9S19-qGY9]NANL
%r$ed#NbHBhg+kEgf?R^-a1uOLDS4b*P7a!:0C^"h!mnC;I'#t*6VL1SHV+kd._H3/'A.'=A$B-KgCu\ulp*T9+!PJKRQm:K`M4Gj
%"gh=#]%eYGo)RkaL4_[c+.Bp=TQVrB?8$"RIJWUH&$[iM>_^t_lGhD(OXNn,$b9Fa6QT&SArpMX5"2nrZlp(sd(4sYb?\^nlt&h&
%>N!AFgO_0)V-[g1K!LN+n/Xd2hWCpp=>W\FSZ^LnQ55uqhem,mJ[I4&(uS7cWctYNe9fd_Q_T&aCoR?8A%(F-&TA\T)_JO-\R@Y\
%HgpDKDO+O;giQ`#h5"944ELi24Lu;<P8hK#-D^P0,qTrJX8HFrQ9Rf/qj1g_&,q[@0W2loWAk`WP0_8@coSRT::?;o?$Fg?ZMgMk
%jD5ehrt8-QNgF[C+Sm7^rEM&TN0c_r^$,I"nb]i]Gj%s_H1WeIGZ:)!gu`*?,%lsW6m?M%9?JO>G!%ho^,S_+B+=RS/(<f[J-jO"
%LOPX'6IhO>q>tE*H2[;g9Y^3J%`BO*(ck"^b^PZ61is1W7;kn<^OW=JQq2N0fsn@;TkT#A03UD:J7T?a*UQ#pepa1\o+XJ==aaIg
%JX4J.$`*(EU&$73*eUqSn-@Qs%DsTPVAtaa@iP#r_GN5)`iEcI/RP]uYqbRpT_4TER%N18ce&u;p-[218%Z^%;ddakk\JYhF<$ac
%-6dd1;e25hWuYQ6!0Pe;:.uCYF=<X4E-(k!bKN9\h>BA,BMg^gMi*&toic[fKmOU/Y@SS7N4,q)s5/;&]4Nmos-d2jks,42Ih(<!
%IlJ_8"i1P%53bg$`](.t*)N;_5SC/KN6B4*^e%-F^aag>#:f/T3;$Z"=K6;:nd:79(q+q?$!M^>&I$S/*lP6Sg[,$mJ]!O^$f\8E
%ff(qL9%Bg#%*XGF$d]$o"<j5^EZ"B';)Sfh2@Fc(G_p'Fc!%O^l1M9Ort%$WC(#-NSS(V5dK$\`:,\Q#$MIaj"UQ1H`H<1IE=@f(
%*?2L,<YG51&u]%:%,_?lM[\B-::=1?p[ob7+$.M\(sOjkDB0jW72QP_boK[N)8TGn2[fqBTE]#A/W3thK8'UL`d-s#EbK(3c,.;J
%l'MbPp<`(h/k0/jBf1]Dd=XU1k(8nsU"^%m"^'p<U54<C+;_W5a=M`&C2;(A:Md=_@"G=kq:gMtpa-BR=<Fji5&*Q(iW,%l<m[^5
%n+r[r3fs*(k0.sXGsO@70P#(ebWD#"C#XBAOD9RB,6U?'24,oCAece?-,HB>)26:B5U:nZW/%B<"6kjg87@=CfY@l7='E]PB*Kp6
%9*7H;oO'umK3*l9Tm7t1VkGM*#<ojAL`bLo?nB+9J15_io+:&=$q<0NGCa6nFFA[*<e"6SNl[:j6G5Fc5Qt1K5jR<5+S>(hBTZ@D
%0k=i<=AIHd['%Pi#@G'$%t:0F*,2B]V<\/8T,h0@'oMDFnoCV[!U>K\6kc?p@M&sk&*`+XOo.XmP_:uV?cD*E<edsg]"U2'hY=m!
%;q2TP7W`D)8[+K^C%Q<E_$QJH2T8r.^0nH?nE.CWJ_?7R+g\+nL*-rhs+49+_lWB7Ma1I&YS+Y;_;S-V2h./1$$bb"o\mu=2_K+s
%ecs:f>JGmTfZ8p%Hg(rnDs1;^Q5#;1I%$!u*l>DmP[bi2M4XjkHDF3'@m14#rD.(,5S_8=n_7X=bSHaOJr/du;=S*=,AfM0B<X4E
%Bs@BcVG"$Y.HHt,Fl5lerds8el]URR#YucCf,:R5&;dBT.\Zo`Vg-(FUM,A)S84C@AieuVGHiW2KTA2fE'tBgJ:*Xr'AJUUS/?[7
%3J,Pd2\[P)MJkL"pl;=4K'I?k'6JEn"^YIL%@r7Wf`B]ZK@O"J(ZjD6<66GCkTOeQfS;k[>qNl^/p$phKn"Hu(c^%,A;+n[aRu1A
%I=Ne4E\M\tR#1CPXiR![lf.sK%Spk<KT0N@&@lh`6YeprJ=3]lUnM0Q(:88!.,S\k&hgN@//7S!VcgBFWe8#C2-G\Zl)>!C&cBm2
%4)0uD=D(ZI;C.Yf&$uKdk4o+Z+T0PK$VA,$6P?Mdf3(*fftSc?A=2VZ2<Z^2:u-=6GfP^@68!T$2U[9Ccdqc@9]E*e08FWR1Y8u<
%7_)6'W+6XF/iMqbr-gmRRWKdEE9ZX((`E"i3/t"@><(E]ZiNn2`@\#7h+n(RWIU4D1U\'fIVdBkAA=X*DNp7das]A%??<kmXVO'h
%HdqEl5:]C=;%lRmm_Yi2Ul\p"(3U0V"1s)B3VF_1c1#+9;`B^;g:\b%A;+("d7oFFjKn.c8R\BhaNm2N>akp&SK(pcG[]UUcn%NX
%G&6`K[>Jg5MOmebd$9<;4=M+9K><Y,F6]_FXJ+"0&ndD7oC[rZ\Q*M-J2Gk'8MHup&oWA%S`kIA%sF=tI`N=e854j/-qSd"^6ZW<
%)*7Xf8VVDOTQ3<`)Jsq;eOCR%1qrb-^T5ZAL=tO4=`]5M#-c6%ZQjTc1*SF;\rD=hVWIcAe3S5fo.08j@pFU+,^N2!SB+Mb5ddOF
%(&\s9%[q67dhkkg*^=%>b%6&NNA7_p"B\`\\3HV2Z!:s2RP>UoPn!s;K_"N3YJ(=-Ra<eL=L'phKpNc91jBj:R[m"p219U(o@$#>
%IAZp>=B,nJfTNqX#a48d61][\e>;`>J^b0qX9Ur+B:C=A&Led,@4hG`P)^"SQa3Vt:n^='_f-eb'i6$j#R;A^4.L;#fS&4:r"*_&
%p*!+H6@Pf3==$IC"9n.%H:E(*>ee1m>>sd@%e>ea*?`_e]-j(3(sAHVnX^#^'NG8Id6.6qJXrP#nVYQ/arbG-R80VjFiKib7@KF3
%S2`/^jo[(pX=+Go.2RQNLk^ahBG[JB,c=N(_?U,/4ib3XRXpiB77XVR]%*a_*q5E[^1^WhV&hl4e3NM8#\,llaOroW&C9ki$b?SC
%j9$1nR-i8bJX=M:(i+'2[K5YN'cTKeSZ/mN8^u]%0f#C7CkPZkLL9%W>plML#NY]/Iok*LNT_J?rsGY\il2h)T=D)JI?8-G]$h*u
%a6"BnlMT#:]'j$p>spAZ(&!]ri2]1Ul6T,g3KpjDR!bR"M8Q"75_A&/YtACsJ3S)=H<^O]f8hp,TU*sGRjO/*TX+*j&%U68Nr/&"
%6N?U`E?kI,s00fJIotJ)qPX?\n+e&O/aM<[monfp@e$iI=F[]^rf)EY6T'ZB*a5UZrqfb^AmsN7+_"^nY3mc$L=]f3ch1<uYuocn
%229\iD34F$WR<raSHhmhq_\rfWV\Mn?Vg\c_A^b1Dd7\h0;&::hu:f+s)#tZmTVcX?iE9o@/f_`mju8(<lUca)Q6t"M'Y&A"aT%*
%lQWXXRkCA4O8SQMHPhj&0f#+25iU^NMX<`h"c2u9Z.]rsL4Ol9hO,G#6.n.*W0o(G"1rHV5L%%gp'gft?f'oGPoRGUc8L9M04P[K
%Fqc3[=<c8L0`:j8.Ro\Nq,ikD[>Lm^oDegIs0)H7jc0:ONQJ,ORWe5ALM?ROCY+7A,mk3r<+*s@csZndFl4ads58s7nY>"Yh",ZI
%0Bu2^F"rQL#"p)!)6C-rf.P9Y!PXW"c7#h1BMm8b1B[,W^(H:>8$Rmu55E1$IWt5j0XlUFAK=<_,5PTRR&-#la?@=s(-!K_7SlFX
%rX;aB\]<+5Qt1.8Z?>UVq&p0GO]d&3o.9!]rNn%Ck1dM^gZO&$J&_E<nRF]=%SG#u(jna((0&S3XeQQG)R(6ggKIr6n![-WiTn7]
%23-3l<2lLgR\8cq=Ngf3U'_Y4LG&*hrLZ`1cAaa-2pjZnDdQ%`r?kfPe6$6mjhJMbA.c5^%qU5i=,3e*;Of6-TC,Ij=IPL-o<#(N
%?%f4-6$EVTkfhNdq>*?X,2XY*48OAWh)e=T(T7n<XtE?2%YdGJ1)hq@]guf^9/$E]38ZbLb*'"(#?"9($kN"'YO=7;7O"B..hp,#
%@tFAt*?+#!RfHhf>F.0c#RLJO<".^t:4:O?``d1N<f%B9`jc)@0G-_X)"84b+\<oa=tp1a@iuc;#\hI]bpRq_ZF$;(Ao[JffkQ;7
%hLkAXR',nJ%d;<-Ya(sN;FXM*m$Ieh2AfXQZ3_!>+d4$"`Z/o_lN%k=diJN!6r*nW]TKNq8/"A>([q0;cQeT]92N5q7_I`QqBD;i
%3012`N<iGs3:<0.JCM'LPkguD'UT.MF%c6p6#U6V.V/e5U=.eV3fCWg`/,EAUS^l3'71$61jNF3e.dKr:$p\;\'S9--X$F`4\o:D
%O+D$(GOTl*Ci5)_J%0^-p]HILN2eBJ?)24/XUFbb'`TN+U49amrVuJhS*Fji1AEN<+A2T^D+atk:EF8VG6Z^P>3h5:mG:O!T#](Y
%VY_O^p&SfZmP#(t!q4`HJhkoSJF%3m]@3*uB1A*pl`YcoZ.eB#18NQ11Eoo1T,'E5!"#DY.h]\nqB>1.ZfW#dR$n`0FUhH6h]n*^
%=YeLa](0c[WB/#[T3",j1cAjj7>$-T(fUTE2^C/o-03($-8\De*%-9f6oRG"lpWnOE`;ZP=?`4)4WsH,+`#6m\IhF/K,c&kb)fI)
%nkr`/^n\i\]#6#e.XY`#]Fj(?a[K<hUA2KbPTGdu#n4#E1P,Hkpo\#DU32HX!6>:2ctoF^0b'pmZqWDG[QpKoO?b&;2T0eR==\q:
%-:=IQ6S5S(/eX(g@\oC9GN>"\_)/3O^giTns%P.&;9KR_=5<`d(Pm`p58D*o3eP.DX3:m+PUqR(E%6*76WjOKK*B@2M4.!t:&q:l
%6mPM@dk.cbE/3E\#<K\:`MahYi][Y#BW%'ld$PBmcQN(Z%<ZH:1dep8$dHaW!436a.TYX3IQrD%/.C:7`WHbmlMOcLjR2Io1B16!
%0/[X\)7dQE!?,.qQ<5!%88q$JC@4Gf`Pr';4ER7^g#)[[M^Qk3YE./NohYJH^\mb3p*4a0pMXHtqId*;Bmc"3\hrbaJ+!(SFdlt/
%C+_[UIKs\#5!CA#M<Mu#E/(E`-De5&1G":?"3q<7!G<nW#WRIY4MM&iTb(JC"4"2S@su-1U7.!P1DNUm+hb\@/GWE\>[$5I3l,Y`
%R1WD'$U'1V^>;Cm\7In=*5m>j-g:SkPeI+d[l;g!Aqmd&"?DL:C-o@l.6uM,?!\$I+YpNCS%?&3#MX]H6PY'T>IKj'ARX7>R)qa]
%,fPa6KU,->V9h%MPMUQ_5UC(VVc-<93b8Fb77GZR6K?Kr+N?]Gq3&3<>oqoQ$@6Hp/>6.(UZ!O$Zm2UmqB[fQ5_KK(&MPqTX,@Us
%0e+PcmilYK2jCg\>dA(004Zl?fae@gat:66Zas_UJV^DG*o_Ks,Z9>t]DV.W4&2XX(I@tqc>>],IK=Cn4;*_9`.VV*+Yen70i:+,
%FnR!dRML$>m:dn','L]6'I(dTj7UAhrS'_X@]O*((JGr\UhIb80]^T(1,nKRTS65UdeY(kJoRUYJ/V#U\#f:N1@>fj&Ioi3GN+]%
%K=QtK7Y*pU$C!UIZ.'dd.*Sned+5_*T#Fm9*nncbOTk,WHBZ<>SY!+h$J[5f;4ZNR[=P-^P;ZW(^k*;T?-p0@mk!ZFT]04VU-?Q!
%a&JKo%4J,Zc8qt8H=U]Rad2k7k7.o6idq:O8[Q@;7$:(n.$UZ_Ks30r]Y+<&;b%%*:)_HL0O>7q_gfkl'#'IPqnW^VN:/?&`]199
%JZ[r?Eo#pl#5Pu6^\\=FlD19k&kQ47iD6"S0f<S<goF,R`*?*^Ld>L9T&eq$[QN,8YU\@DFVo^'g+BiQ$iOSg*]jYEjY+F_kE49&
%62sQOLhR*OguEcP@Dg[G;t+gia9@Gua;S*OOk7H3-OR-fITl631Et+3Xn")YZF\l;1%d\06TRb:,losSe@:&G.C(RY&@hNPr3SYa
%Q9g*9%$DV+*olPe@:;,eOQkj[7#*q7&]>aJP24EBdl,-e,(\MAJ7Jt,hH3jQM?[K.`!MpEfr:*5Q,Jc"_;d\=f,*c@]/OA_XN\_8
%l7TPH.(B,1i6Z.?D#-Dp`]oU<ECeNSFL`W^W(P5%A1_%OCOm;Fm$oha@,=/Z_?U4mKU67IPl-bOk^IJ<"//r.lq"_>\HXr?<o`;R
%JYK1P=aqC-.kST+H2S@3'eJ%McsHKVG/Qf(,F;>k`]0nD-]-_"N7HLH.:_EU&=qNgjK/M&<FX@e"ND(;&"#I--!?!%OJr+qBANfo
%*Afoi1Ub@`fn)Qb%g^:H[qndEF5@?OKpqH7;KE,7hQBR3QYO_L631Yum>%M(-Ol;,6Bb4G9\D?_nm&'LhSTr_7>`pl$>;Oh3^A2F
%Vq`VC!cij4(Rs8D4#B/Uc"4MG<cjR%M&@W_PufmJ4@n1JB![*$huO"!CL/o5d+/)fCj$W5rVMn?TcI9Q+Ln)C@@qGQHC/'R]<EI3
%h?inY6klM0j7G_2DB+8*;Ik!@9\6p"\mi.I#!sW)/_QG(7*dPNBra$C.AWljX1Xs6TNoW#aMI:+$`&KHBVkRgTa%Rs-/-RrE';h7
%be'Mdat5Y@fV59`PHd]k",J#C&dDtHCm*)FB,e1KpHl3]Xk<lV212ACbu?@[\OO?;\KH9UmdjTCQ:8d+983Z^j]3YW)JG9fiJCg!
%WC5jleQBm\4Yn9k6\.a$Xkj'BE`a0lD)VN2k?BVbq;s-JbH(rY).%>P6g[X\aI4M/[Di^[Z:\&tQYX@Q#Oq8Qncn^FJMLY>=8P="
%Q0Dmt,e6Mn1"n[aeIeA9LD[P`9_t43,s-mK]hFIfRZ79-iD^H+Ld<Hs-.:WP$;Ca/-qd;K`DCiY)jg>^m9IF;;5hD.+ZX"[#f;.r
%K%;ma1WTLc?0L9qnpTmR5;hiZQ4!fTCm!D!Q'p.O,nY7A+YBSL.J1&6^V/cLL.J0KJdQUt*sL3J1rbjOaZfp!H!!llU<a^&-[l^s
%&.b^!GY67>:b`,"iWRF#+$c6mnpoYg\RgE\o[e_(5H%D@bY9aKiR3e32%YTsBtesRYTH6OEW(SDX]msRaYMQo+]5UL*(4:N.%l.'
%3f(/]h;t?<=X>H=KNeS27W"%LF=[tsc'GJ@[VaE\,93#FONp9)WqLR)f]Z8%qtpU4mdirQeF\H&jXu$M?jh.0c1^q5?%"C7pp;(k
%rn-p?+-DbcMG;,<;s.:n59usM<Jt(tpi.E&[De6:`VHu>Cnu(eiglJgVST9$S8O.MBk*>l-PB*-BSQ/F-#.]X5[t_N@dFN;(j]fu
%3hkG+W(pU=L_%U<(G,SgZH"kddsMEV&)/A+D%!HT1OFF%K5a2gXs3jTlD:mrWA2\I,.h(rHN@osh:WF"Thp6%A2/>-0`^#t<Pp#O
%3a]eI7/4S:fhZ=+-,hJSI@H6hUD=YC6mg%nc_8:mLj>j6(a+"o$Q03s^'%"Ood8AZ\V&u>ODJ*/j>7=(!`@+<rMVR]&$P<^TK-.,
%]eJDaJo$_N&Ckc;/P/-dFa)+lS>0E;gC!oQU0fj_/=oPRQWHa`jR#rh"Up%G!s2c;(&\hK]:*r.e9'(S12c*N1%_GECiAQ7[PdP*
%:@9\M<4G_LfjOO;lbTeIS<c^kmG?%G<i):uCERG>8QZP*)pgCFah.O=aj<brUY'#')9BoJ2)@ie2*o.<SdmY%BoRbFA3ZP7I^(J)
%O6&`R)3h+=B[3uf@$r_,Ue+l$@LAdAi@0pnEd\\9b2P_JBa[O?`s!1ds".HPcH,Zd[0I^/_c+"C*W0g5J9L+eJ\@*:0MZO(6YJQ1
%6saMK.upB^^Sde@egMEdPV;6;[=7uT@(LNG.oqs\4/"X;8bCJS7*G/)0PO>5>'oCK[`]DV:ds4aT-A%_e_R)=-p3=`1I4lNm=nM;
%)Xeo?@`e)E\dr*YD@a3-ks.sD)]3ZE4M>-jdeWIiAMC]9Gb_,AF5<O7(F(P.W:$@:G+t207e>G^W9.9SXDWI'GsEFOWn1BiI3:tB
%L*PGM3#:N'ESs-l*`@bj'\A%F\AsiW+L4XSe@ZomYqOcGF[iM=RiI8+U4;Hom4B=2h7d$t1td2;,feS^(TBKBX$u#(<C0o/G5/JJ
%JKBgE-]BO3V]GD3Wo$nI]-R;O`RJ;E1o%Q^RG$/-nLo",*G08.Ksic_0gDAY2U.\hJ[2WARdN!tjlQ\&dY@"[5ZcG])f5&V#D8*A
%4s8@(o!6=ef=g'!0M%Fgmfmlp,]1!h6Lul7+3F1<C;HZD9Z9N`,Ve8o,D)aUn3)V6dm6u#[nN+&#bm-KmnjnY@-3PSk=BFiBS\j2
%BPKp,E8j?Lm05>#jWs!0S'M7Xm9d.FVCuHffDYq.[d9<^[e>.HHD/=KF984qV=48L&4Tag_DO/#<L+SZTS_Kb@%l\irLq\U^iPom
%J('1nT+4pOL+M]I`Z*/1Ib'2`Y40l``5=Ps-KaW:^4I+d=N7[NI'VGnnQ`:[5$;DL"Bf9EA2MKCIkK/gmu]lIr?W=Z47AEB29*9)
%p-T_<8)QFcQm1AT_<Fq2g(]F4mD2Y^RFMWL)fll^%TCOQWOR?r;=8PFOrGcm;([HOH7;9W@=a_kE))K,T>O!*'qPb<I:=MU8I4=,
%Xq-iDPL)ZSV=K`(9Y]23NL'G\!\*^mgWabg2/n:$D74>dK\(VIrh@tFBm'Q=,,Rn6C)d?no1IUJGAqVYdb;kJ4]gmWf6mbgMYP"a
%HpX*H7+__8dS3[6K:Hc;194CJ,LR"M.pEo8jNdt@o*l^U4NIj96o1*V%n67dDV:E#(UATbpkCPhr?If-Ul<E1!u&0o?G73^BE*AT
%m\4Gbg7!,^eaB'S$;>t*]-nR0RYYM:8IG/!W]=T;b?r1^]]jcFEU8I.A[@7lMi\ilq`M0qN`Mg]O)V,![qegjfbZ\]d0C%PQeg"Z
%jWRj7m7%#j9(2*M[2ea)[Z,6:G6:@YdUqeL/kK3hChS=_2fH,H%2hE6E#\rkT-W6g.L6qPWks%'T]]MWp?G/d[@#etS8;fT&&PRp
%MVp0-5-m!2$BSr=LD</25RG``7OW7.;8q#?!mck*cQspP?P%64Dol8/MXR/fi@.p&\DO#lc7QRGf=2As(U*n'FM[gBKm@T,P#QS\
%`FsDN$4<4MRX#3..F:3S")8I%C9mb+\CQO`_HJcpILlhqBm;:/Shh`#OFoDiT`f/9B[X^jq2"-HqI$7!8l7VtjESf+;NdZH841J%
%)Z^&i/N=;*W05`C[5:dG.YuX\jMJb(j#S+kZ*VVpB'Si3Z#NT;FB)+r[4u51dpi:cL#1DFpD'9mFjt\gNF$e]Ua1/-n7="85F=?T
%<_ick%HKmP_ii<!b.:lON3_Z0C"=l/3U.qF'5W18`+&>Ilpt0Wa?S=(HHLD-T\Qhihl9ERPmbl]"0<f%:4JtKkk7K8TBn^C>#"Z(
%j[B(g(PG(gZ-=<i?JoEC8Pk.')!OYud%>',b$[XY)LfRJ;aA4,32/.)f_;*OhB@WJC[M65YS*=V^Yk6d+YnaYZ7/pf49&\4/*R6!
%3;Q!#_oAgaej.meYpZ/M<.s??@_H($rAJX?H,]oV\D/n\5l#&k+9f$47\ThPcss&(hoHZIR;Rs=9mL#+^.$m.?rbXohn_]5Y+c=>
%4d+/K<T1*3qI,Hs]:htm[:1Ve"ff&'J_]'#l;ekeaEGhc]cV'lN-Re'=^JDAQ6WF>UkKr+HoH!Z6clR]?+?Uc6kX)j-BQ]mU7*1t
%6ltE;WeIAr#EMS>&A8;DLjk/o,j[ukLs)Q\'#fcg1`@tQ5[bLh7q_d$4=,P`i9.>W*M?8#FV&GLn[frTWHq\o^j[FGpO`^6RSdBL
%Q*Fo&JXHXQ^)'r>0rMK`9ZnNP2[=CpEiH#n>so-rmjj2\**X?mkcmgrYOEc!-)dGN#$q&_=%dRD#K_iUI24.Kb4h*-hBf/$qR!i2
%_Z>YFg_(AD$oFqXHn[V6,FsRT9<oAip&/rI+nT!%W?AZ\[Er=53(sI@^$>_`*^Zd.Qr@;b:dKesD]m8$YPJD?785.omPIbdF>7uU
%#cT[m*mkM/-5S\-d$B-\;bH=)]7Ou_5Z457,8IHKj!d!R#,;7n01H8`_pF_q"XY7C'Lsg7@`qfJcT`7ZGfhA4n)n92(gGQ087E_k
%d:qG#_YrWogNh9E&5u/6[CO8R#*^n(p-;)b0nVm-:HRdF:qs4*FRZERXbBhl/L2a@hf+Gh.nTqBT<:\2%UAg+h8T0qRjD-".L6Ks
%%*iZ>59XiK]p+/C\i7PUJkNN_>PnE9[CZ3%[P;:QP&7`LfkTBk;Rt;$00lj6jReb73`P&=qfPdA=O7+/YZ%p-$Y3sYin]FH2?\_1
%8#Vb!qB8%RP-W*cenBs`XYC'%X&BGZ@2c9>-r\8V`gh-76;ICoUKDDbJu7[b@LhcK)dS0?o3f_75@d^Eig*(mVm0g8JY]?*0Ad3M
%ALM*fNITUBS>A;;FN[C,7V,]Sp%f<%NbY'pk[(7G?2I<r+km@'(PRha=;%d;8j]X!U$phGVP2O3r)9iW5*0bUa`%egp+ET@jX^q!
%M7Fcn&@o#9^_*kr0`]9&,D+(=ZB0fM>k&(HDjhi=:jWK[KBYKtKf.u5IL+8IcUGD.Wg<>&//0`TrfBIgQ5%7V+Th^J6peaSh^WKD
%pd'FUPDFfrrW2+b&fQ4EQQ5_O7Z^Vj$hiAaTJd8RMY0^=%No=kh=,hgRJn>^`@*c+VXj)m-p'6)W\qnkKpr`eFYKPB[o![d-?OVb
%b?m@f=)bN\;3WlU+QEn'jVJ!8Ymg2]oD=Y3TO&UQ&ID%<qQd77qM@#j9(!f(B3>q1Q8Lq,8]2Z:'<q?9dP$!*Q0q"M;mpY^fm&pr
%TLd6(,7AOBoS)Ya%rS=u4oUc7YoMG/nW"?cn@fhaL5o.qh7<tQCtQ95Bll64#:9"SBWZ73imq-VYqQ["oF$h@0ZkYT&fGKRZWPR3
%kg`R5iio*'Ne4`j_DFnU;C#jo0L-LI46\CF)gmrgo14b459s16PVi,>VBtn%OFqjP0"l@""uFLXHJ<WDO[)Sh4?^Z,B/eS@AE8*:
%Bqf4-gPgiFD@U@K&*0uf^V0+SP:HQ_#e).eWPDt-[!+>WA<\'MaWhq?230sJ3@qONWR3?QeDb.!.q7t3Nj-^+X`67OKO=g+6<9lp
%BG0>O/DH]M$`]mbA9/#`aCb:*DJ5(#O=eH6pG<GID,0Tb#*P157*KCiOaU[FAMCbr%7Le%kEjE'QA(]'/r>57/a[ID/Qc11A[u9C
%//GY(<_WlMUuCUmDL2)83d5.GaAE"p`YFqXX)14$_hj5U%#]a_H1%"M&u*jE/.<?Z.6Bj6&(t8@*re&.p\:\<MqoqqR:ZZT>m)U3
%*>NuSeF.#DirUuF;GTCq5_&d1(#LkmTaZq2U_0kF?pTEpLpk,Te7CdVasXs.fcNQ-jZk&";aX!Hp[j%]h)1O8ZtSmn6'TK<+Q*dF
%7FfT?S!VX*j#W<aYutD9ZO-?H['+r#JtM(Cimq"l.QR(XC-`4p?Vo2n<*=A%bb=JW;%jA3*$mBo,s#M/#t?^;M;O>[Co*st>uS@[
%CH*oi9]Gng89i3u2<%t=ooS<'&1R:=?jg.meho!&?!*`JjtgbY^0ET7KX>$0RCPS0OdQSQpfgSIS$jIg6b.I*I=;)HS@:lN)DJ[)
%[sO?V&nXS.T+tZ'\/j_1ab5p..+$gCe$Qs:*#(YYl6.M&[Qn.D\QTQl6D*KO8O29t7>7#rKe,joh+2jU9_A[+lOYd?8*9%<3=uD"
%cB8_^D*qY;7Z$!HRKH'Sc$N,@s(N8,%7sRC/ZXom.@7aY:'+_o0U@T>f'2+rN)@f-=LK82'kgJSRcZO['a6#OUCrP!hKTT$FBju7
%'2bpQRQYhU=<E.&l,%X]le%a#61"[]6\J39)3;$)<HBeCXYgJdAJJ^JSS9GgdN$71]rfcP)t4)Q"a/f/bdGS.2rdl<FOp"C[-UDu
%M[o2YO^d^WfIY9]:^m2KNbCkc@Ik$+@-=\;6S\7hChr8CfbR^?gI%7"17)g:C;IY'Qnsb'f*sD\ib3K57AuWBn0`Be:.b[3V(>X-
%RUu^Bc[#F^Qc<j?$ci2]jmQdIo,><N[&d_6c`u6F=S%bbgbA)Ym0Nt<4I,9^Sh]V>U]jIh((kc;']q;,$]:2<-AtMaGfiJmCi@u@
%e=,D93$i^fG@PBPNU-%t1a'pb^ciIAi\U_N84a'+[F&ZKIEi>b%6[bXpHO20od^p-&ldZfO&W#=\WcigR2peM6IVqbH2D"d0A/tH
%O\_[59#QmrXkQ*fe-@?qILZER5a[lhC,6kP^j.X%#7n`cL6l_6j1MkRc6<QeXrGTiQ#9]RR>;g.''Y\iSklW.RYRb@LV\[3Mb&7]
%C\!pXrK+3qp87<#`i=QcQ%JF>A-_/+$;D2b6Vo1&JJub#AJ3o?Q23!R6GUt'&@9\8dFN.\q?Pc(E'k@oghte[`TUV)OBTa(rq$7N
%[4(@k\sqekUb%IQEOmH/=_TT=g9<lbY`<roDp.hNepJmV7D3O]=a&?rLSs73--OTNnSH0;>%9&55\DqrD,c.Bq->OsNeWgurY`:[
%/qf789@.?<Y/aFsnKEb5^frR,-X&+t7q*<@&&<IPUq,&V:`c]Hr`"f``l;K.<RZ+iZTU:>LI<Z$)UrRfWs*1R^L#Do<iRcnGR'Cs
%9?@UBYH6EOSi2Eq`DaCc_CY4:(3D;9Nee'f'>rHb`HpJ`b9>*D]EMM:'ur0?23F8KFdeBG5SWh$os4u+$YAjBRgUo`KcA$S7_<th
%>V?('9i9]mgLC*SqSr@P8Mt\B^1/i\ZtDGtYoaLQ!^tt@Un?U5,@QJ*aOi+B'e7'jMUS85BibL%(4EDTE^Y/.'btZ?SFlAq4dZf/
%pjgGpF3-lZY]L=B`$SN]lNYMA@I:Z*1.PTVULC]4@%jd7)?n2[#J-R2,1[V^*$5_Z_i?9t&M1#,OQ<E&%N$siSN)>B;F*0&ls+;p
%jRB-Z#M?7'*M?8IKa9G+6<!4n`ni[X,The#=]h<5/W6jEd2oU@Jok6"X(3mYDH)UlFT"YY:c/HN$<6E1/NHPe/mSr^&<LiBn\SBM
%cssWc/\Z`a&Jf6)Gc?juV)0@`'p^LEMo&;tOelR7B[n^`^nB5JXG4n4\Lk3<d7tVTZY$<GasuN^U+'8FXtcWZe**\DSibY__)>6-
%8U'WW0T"g\,!a):a87lIq`."fc\tLPp2Ss"=#s8C:'\;WPB9':MN`=c^;REZZ[I!EHbG:Q$;*SB,)f3s^6(m+lPBH/-4W_O;pQ&G
%H-t,nL_L@@."NEMN([(tWHSZ'GAUd+B!9O'Eh$BrjRQQM/aHqP&(^^;JRG"\A]mnml"XQ83'0kgTVB;`oYili^1etmd:H.":]FA[
%DL&Q:'r9VuLe;TsV0"SHdHGWpK+'25:rAHL@YGWtO`umOZh&t_Z92RcA>(o9<K.T+L`.lq>FM/;/?)^YH=.obh$%L8R[;8JIN])R
%nV8ZT'Xqm8h@\@),Zmj!7C-m9[#T7GqTJ)TBU5AB@A9]H=j+5f`N8K>8_qCbes[[Wa@>C*6gnjN5R5]]3`rD\g^&`)@T^mGRTjDr
%22RqY@Hpe!a.7gG-%i!LhH1um*CO8X-/7J(n$3j0kFk1b]M$gBb^9MVfRS?.P13ob0%02MYGPF^J'S]r\0flW-kK*a%IWIadWWFU
%QA_DM:*KHQj=S!:;J13ZoK?S0Xd#ZADJU4^?KHaX;'h=9:IT;*A0@"i:c6N<Ucai'EIf\q,l`JIHp0sM-5#-HqgNKO$pD@:8$0mD
%[<\F>*Q%bhI@(X*j?&:;9c$=^XV5A7]oUr-+6\Z@p8F42K@X32<S>i^m)M87fE>\BC+@X49#DOB"0s;?;;fg:+%-CV&qik77`HlC
%<J"\qDCF*S+0sREF8U)n5Be6Drpc_&Es/'-JXWS4QgY*#)sP=OXaWKJTh07`h\#>*JhDP7jc\#$m5i,#UAj9.R(!Z1M+78%#&O>V
%`6g]Ql?\AeIJZ)M3C;*S%khp8)L)BP.!$LBW(FSH8?7Mj1mqCf+HWOS%5s*BO4D7dp/$Z1hNG"o'`7(iIdTH\OtY2plP;XCRts/q
%?%<TJX8hh"MV>!Mf\ZIdaX]Ai$5[9%`K\7=+_*"ZdtZeG9?kS-giLLK<L^p:E#W@q(n\pWn7L\l(^>M$aKDfpp<=U:e'J=U#4)B,
%c>^t(2SY>JqnW`\rY1>@*`6br.<PI1pB#H<?$c$CWo)_3)t%;6P6KLR1j4G<hh'u9Z[AE>DN.:I)b&cZTV`?-&El)lflaJZZ:,V,
%Z_\9XcVOC2pSpL732W2$CGY9V^.?"DRo+`,fd)6KR<^<Nl0J-G<T2[k=`3iP/C"$&k+4CK$TYgTgS^F$hj'I(PKOE#\I#ZShp,p4
%(Y=GmD7*hUh[oEe02#;X5%RSrZeVi?Vkj-MNHQsq%7FAkP;ZW(OAhm8obYUhXXTaN"j<Q2*E7$=!Z[AETB':FRR8&22"r>iU)M[X
%PD?eb-)bpLbe!PPHR6%RFRSt#qL)j#7]%SXH>RM_BMR7hKqCHoXI37OO#ocf8Ijr32cOOk:0+.)U)\H0(Tt$<^HbkuPi5VOPI`"D
%7UG$lTqP!5dKR7;5@p)9dH>85_E[L^hW$u1)<LG^@,k;JOe1i:[.h.#:\,oRWdH1g6qb&Hi^b&tqidMq2NX?INWU90nMQ\;3NDYp
%DIcAhM@"`:;\tQ\)iL*n8!E%l]GLkGAuQQA?ai>&Cs5&8laQqkiBh\l%,_:8VT`;NFH!lS_?ocunl%<&GU0,2+LpStj`D].hmC)2
%=K(+`qqSrdnun5to1qf=7Vm5:P$LVr38]n$k_JPt@i;HhJQM*%/5p;g';_^fE3dQ_MWW[2V1b<a%TKPtPji\8k/;s;219u=bHdot
%hFo"7ZOS/q&h5,>1mrt_Q%DFSMdHUlC^M'k[T8-M:f-h?M&5LbLoeGjU)^5d8HgPWl8)\+qKjM`N=hWcK6TXkQ:i"#&bA`*+DeR%
%DCC*Ns-AX3lOLGuiUF,WC+"mPZ+d\,\MT9gBVB0qc]+TkWi1;"RdP<L$.'O>B)CYD`Y>!cQ.62LfdgObq&u\2F!:/?[1L:@q7]D7
%^$\1fRT2?qDm'ep-3gFL%Eom(+ds(*-nHE?45`4;eEhEG6V_bO3c[6TD=>gC!Ko&nWub3,4G"2J<]e2mea'Hjb93g#74Y@!m+-t:
%>d-#[A66s66sN$aPN3-<WG]._>3\ZF8n,kB,;k&aXo04S3jeuCFGJV!emSU%U2t>\?s#$0P=bA/bp.TZ>P<[Sl=3"gCDo]d2m@p6
%`HMFHl6P2irhf((7.IjnY@:Q2,HAM3C*:tn&d,&O")=M>-d*U=R=cD-eO'3;8)]-pbJ5NZhA5AMQT^RQ/*df+(]Dh6Ok'I;PJ"mO
%<3eh?>=!FRQCp>FcXX[XiHVF7a\c#s8FU1JIBF`hSduS]XY-1?r8alZ!bF1<_jmGPdr9DC5!OuJ3SO9oh]V6NNc@?*@3EJ0ne\QG
%,t&_(D0h&Wa#o%^*/R!a7W>'m/r)b89YU[/RQa\jHe2bAk,/#"F/X#U'c&IpZ>J_WA@ihM(F1B/Q_i`iA@6tr>L_iC'DU4RfX]kU
%QD:TG?;jb0D+@/qE*W`iE<',LLTjAbV2#u57)d8saBiD`#JMFZSoE06,j`Z,"u%m"He%=`rU05He\J#7dC>.n3@[*N+f`"cg=&;`
%dgn`3ZUCRGC<j&njcSR,i?"D]PPpRGT-c0g)Q^7ZoNc-B#"-;q!/Xkk<%8)00]VYrCjB#*=agn$6jg6YZI..eL*d0UDV;"o])KO&
%ooNMk#c;u&bF%BCCCOh@8q4BXJ3Q:2lRb4`I4%R^T%"b;PqX7mPE\6l5&-<ZmB&Jn]!IF`a$"\ra>.n0RTP?A0A(IK'hP"83$A3Z
%OJFTi7*!he^K>MW#=QI[4WpPSgp4?RP["`"9[jLdg`:=dU*d+VJV]Q^]bmD+R]lInqX)fTO_*4qmlY6BP)+q2<Z3_I&8V53^sFqY
%Xhj;@h/;Sp-\9jbf")YdkErD=LJYlO9oE/l9jn3!C1`bU!b/9^8Opli6:IF0D5SBf'oLU<>0$R3&0_Hr^19eVQ(G;.#jP>Hf)1b,
%+eSK5.hn202!qmU1:&=`d-`)M=H7d[^$645#Ch=N3+<,__FT^J_5^u`qi)"-K2]UIHepeWO.(WV[d4>Y*=Et>eg-@d,;fm-:'mlY
%]'s3mlKU.uQ$^@O@I.pc<c'M\&%;GpL+5$u>IK9sHZC$l&T-sJJH]DWc&[#DrM;`4dnDZfW_4GuWFP4*7cFtR`!gKr6pa6M2emSI
%qn!#@OdtQE5:#?rAVPBE0ir5b,Iu2gCWb-Hh/'7koeOY^bsDHF+EI`"e[S8j)gBEuF\o.7P"!T&I?Prn5^qNcZp`gs)d>M36(c>S
%C]AJX_444\@D,*cUb7*uGIp7"J:CmLI[G,.^Lk`3J9=F7Wq1cM@=pA`O*gHee$f6WHZn%QbZsMEMIqiL+pTqJ@;eJk7'lR$cs5+N
%g*>4aLDnU[DV;I>D>f*poquVc1I#Ep97Jl3*^\`l/W]kL>5_Yn1lsDL8p#cYV8UN?#uHfYQ?JF=Xd8+hLe6YcNLh5J>e3Ul7]\#.
%@r`AV>2Z[6YbDp?-3dJ3/e!Hb:N\uK=\<&C)Gc13i_?&/r%*oYr"Q5%*8hoSR5V\c)YG9,ZX-8,[S>=1597NO15(A<3f6#5"\upG
%-H5q&4&OHR;p)D?FZ(Du=s$YUTVdR^>P@*K2Q`pW0b%VsApVD7P6?Cjl6rI$`.Kf/;s#M2-oXb!B#ML?&5rlfd5W[\_`u4'SJNL%
%`_/.Q,H7e4ZnEtuXq/&>Fm6eRNIKcpM7^M@pDWi%rm^7mn^R6_p)U'#Xc\mJGb8^DEGT<I5+JS*$W>F6h:+9G#L<-WVFK-,U^;T@
%;456O(*_11BQ>eB/a<jI@@EXDF=XO"_ub=QC^Xul]H4.`9=gdXb<r_f]F>s\JI,o=:H+Ydh\Ac*#kBNY3d1$N0KYh[/MeAH9j+[X
%KA`DG@>oD,;!uJLCgo;DbT5#EJ>LMgB]aDfI[+S")O`)b![g1-,m^Dr1\uG:gcEQ-OC&NSoI$!l1_[oY&9FhjXp^]33*FP:dY=:c
%$#+5&#54c%etg[+:;=L5_$DF]r<?CkL;bg$DEM*]b@^Z-,0MN[FWsh?PWG?9Goi\[G)LCa6S_V>`r0Un\lPVWRIqTj?_F`^h3^3l
%6+%VrB!m<F0(pH_Q%ju36=g'IgHs-QZAfhd2oMYj9=F<&gGa)WcBdc#nsN&EFLmt3XXe`5DQ@5P`R`HrM,D]l&<n\BOtVTZCGuB'
%7nZVNj.8D6]RL2J>;tE@#lcop+DOq(Z^aS#:+s4C[<^N+@(f;R`<DKPM,EGbLr$N$?Pe5bPIK2ke9':lD!iuu\[KD[#D:V)')f8)
%+2D5tWM^nu+r=L;.p>\#g_*T.i>=+lDegK#i2>?^9:(b,[\4a>G)rI:P_m'YV5OR"Y`dZ_GS=]8"a/eI6o#Yh(51DKS9&3$7p>rB
%k?plkOfW!h7kjZSh^+1DG7_ar?(r)nFL=hX#eD'bTdD2gC0_"rU4/o%'e4A2LQrQBZk!n!<Z$I%$-_dF`X<uqA9+stpValqOQ=Oq
%.VmfI)NcaF>$ET)!ZGg+@^MZa3:n$'X(bZ$F]!(\#6Z-k/_dk*n#coMIW.XhBa2$t.h%fH2NTKKl/fO.P@:31D[Z78CHmD-C$7]@
%8MOjYK=(ND-IqJ*O$jB8/4;A)4(*ZBRZL>QnYR_6F/mdD7C/iB"$mX6(W?Qc4=,!0/[$,0c12ViZ(6(s],3KrZM?,'LKUOMgV#Zs
%d8Jnfb(AJ_f2!KB2"]3\.nGq%!(C#`4B-O/5"0VUVl]XfL<*u]Q_hb>>0WF,5ai.7mj@6..&lSN@TD"[d[rsigUB[L_tOqB_r4=q
%fQ.:39F(-_oa'u_2)sKA#;XHMa@<?R7@%Z@<J\\ODM@=E.c3$53m_=qR\TK_H<Zosf5OQeOu[e&?Ag9a;^<^PGDaT23&;6Vo9_!i
%C+MMG_<P8X#ap:OMOWsfoWLl9Imj@Pp]DBc+=YT,>SI!*OKo4H@c_nG)SsMi%OFZ-g-;r&1--](C-0cB_ndot!pV_t^)oHK!`j3l
%f)(c@#%k2.SShtXo(`4H>mV5l,;SGc,.:eu_lQqUM<=3:b#4DF0-67UdO+d0:L9>8"TBJ<)5m1]FkjdN=K"0_49R8FUho+_Ua"XJ
%Q8R]dZAsB3NR^<3rEGS%%<&NYZ,S_e;gc`"9+l1Q/<YhI]<PB]KAbT&laPJ1d`!K&[F5("lQ=W<_PtpbI:;L']HRXr;%sEQ4Q?[O
%!E=i<>RV?H<Mp>`*@m[#Rdc+:akIjl5%,9U<MGS'5t=Dp$7SHjVGtJ?g/qj?OYt%6Y>Q_%6*[:[(9APL$e_d,ge_XVmNpUthm1hK
%/e/0E%9*APdLGM\h\?8ra,hpW$4^rZr64<j\jFu-U<9-@gCuPF+u`D`rOD$n,7\utAW4k11)aJnE*LE;!h5\\;T]7)CuO#3H%?'R
%dCPEmZ+hS`e*6AJjo*t(>'rr.(lr4XKe\ic_jZW/Tct4`+)CNGQ;#j6<0o%TkXchUP#n_'`T3f=SD@E#<'@N-:g%K%7Rl_6#bl)T
%7ZhTQN$TD"5S)YkOL>j*c3-.J4A$Paa.tJ*012@hC;_;G<5r=O`^]HJ&@US0X"[+/A78FX[qo'-gIl_VKZ;J+UhP#r7'LQ.l)!id
%PsUq(Kg2%og7YVp*JLL*A[os9K2%/6UbN*_-/BgAEDKgE=7%gSS&2[*r"X"6dY3j"O$=3?b(i=4LMDkH#I@AhBe8X&oJ["ij?U7d
%RtV8W%sILeh@RuV>Ln2lY'nsRPdSRn6*<`B`+,3aHf^G;,>K3A.P%,m)%0aVbr0qPiV$taWhmaVW#btNEU6G`T/E_6<StY1#L+;1
%M-!5e5(T\lm+@K18nP"KQ.C\[EXdk@C/u=]RO1I;dW#g]*;PadFB3gRNKSV\J3[mibP%qt^2"jSqQf1M=uR;@0j_T/nIM[:"f#/X
%4Tkn*`k<e0BAFI2MJgP7p@NkB/NR,0j.<o.[M0Q@LRu&I`Q@A)V1f)j!8X'iPV3eoG'Xo*(&eLJ5H4iL+BH(aA@'_Gh@Jb;T<]c]
%oT1Y:89GA86@\C7Oe>GVQ-j*DIUCu>qa7^=]#2SdVkUSe9#*RZ)Zi1r/N\Sjk59jQ5H#,QSa%fMaGd]AKbFQdBdS<2K)\R&.81LI
%?*pU>VSWK-U#r:=oai/TBI\<WXg6[cF7WjIAbU1@';rEulMYrcI4siLpj:@pm+o<R';D$qbb?q>U"m=eN*>Up<C\<DhWd\!\:ara
%&@UB"29bnL>EB-bJ7:&?fqi8Mp[/5043I;L!=^^6=d1hKRglOCrM9jF)A[?;[F-Si,:%R[`LJRe[Tg=!9N5Y+k7-iB%G>jpMm/0j
%o4tCWi?5<W<pB>f4351\jrkd\fSQiiFUd<0_`5#kYGd27Jk/;,:e>4+<bMJg2P=R]%\[g0muW;g(I2ir+iKS0G_r_h_c([(<VesO
%NpR"8f[%#9=sT_%4[?asZE>\MZ3D_1.2u-:k"mUHBaqi*=jKW3%P(EN#K-bK,HIjnjfIobeO['p+?;6>&5:)[:q.:#o9tm:5upM,
%BTUlcJZZWhV(5(PioHaRk<h/*oIcU*j$-(+&%SuuYH2Fl?#+DCF^Tgp#G9o<.2Xdu,Tb"i-uPa37P]\eJq6if7l80mH<[3&hXD1V
%`0(lDX>h4<WXSX3P_9/C9XF)*M7-l]X!smc$4F(Dckr`&8UTbnV\Y!tE8;?C!sjXN'MLhu3*`joRHgWk5W's/2kD8s./&R!X"pB_
%Z19suW+(&/ZIOaJXp5=P)fCISk:bM)6k!-!UL]6d-R;pE3m&Roc/WA^X<)`=L^gREf:Zd\nVrL*&R0*#'WFqk%P=rT2'bMhk;H?1
%77`VTQVqs/W,aQn3'd"1dLL@Dge9OHl!o>k$o^Qe"trSH`]);ukXRiKM?`e67FP\%G)]/;Ms\*+>@`g"5?@!W(O\b4'$\]=kFs+-
%=nuHJ!>T/X028,E"!j)*@o:p8kjm'WKFGO(SYct>0qFD^7;#(Kp3V$g`SoPt\,Ja*X*F+=c8T@C?]_MLHeC/riiWLoD]BRX)2j!d
%k+%M!DBONO>UL'a3p5&J#1@20s.uHdN6=B<K#W%+!T]th"W;TRdM<&kXdlJu+8:^Z!U-6dA-Oem=0NhK&hOq&_g<mTMUO&`AGaHA
%?u$@PV=^,+Ka]-fpQEF]g&,o45IV4m-@8<Ps7\+5D%.nMs60NlmN<NpXM)qu#N1-.[;*C-Q?5-bKQ<>][/dotc!'BWC6A?a`fpTj
%7S+,(#aqTJnnU[lVS4?&$c*^:[7c)U;@b)GMeWRbe1?4U-q[\nP+erT@MPoq$$K?e*>_*VRS1(I$c2?D<cSm[:hdI&A4t-:FuKsM
%9!/inOtLe+f<Vu\q`(U.C>h?16'Y_31fiAM.TtshUd@0/Tcg_K-Mqf/*#M0s!XE`4;YpO'AJftc'6)H@@=f;u5>o/q2C+3rJaK]*
%F+YoY(Gm"rE66D*qiH.9g#%b(\KG58SF"rLm?ZqhLLc.4%Fe],Y#(h46N-macE,hFgIVjcp']"j,R`uF8gK+Ll>?VEK/o/"loF'#
%GL5Oh!('h+QDhtMY3@h$6!$:N44^F'qoO+LlFOK7B]Cru89Hjn^2;V[BfkX5Q0H%"<1*]4ad-Dj^426A_?\#JWgE)+ac>_*+=TBJ
%-V1[.?bX!#J0EZr_=uR2lcq8]56QtBWme\D=<=4eo`-!FbW3EGR(Bh<iK.`#3`<S<n@gnR7$C&N`^g8Nq@iQE/P+KjD>L2T@^<[D
%Zb%>/"QEu_SmTR!rSWEBmSDLrqNeMn_?Uj0:Ifb/Ztf+-9)\JCVZY84HqEqUJ7Dc)Q+=,r]&UaHT^fY@Hn/-0&IqhPNLl#kV(iaN
%9^&fo%(VNuU<&l:XEKmq*=T:f'.kUKV6D*YE`]E`)N;1!kE0FdZKhrkAOA,?>PpfGgOfa*fB&;m<qY.T0;.lhmfZ6]:$I?(Q??t#
%A/SVPdA"sbH9Yec/A^akN!/7@pA'5j=L1`qj.8DYXh'WEPUbI3<K[UO2""Maoa>fUplp/uS]>9H+/Db2:i?7Ke>;f3QSmgFrSZ<=
%*f*RM9@d!rHioiPP47:@_VG11@f?#s0+<ukD1ts!>lWcDXLhVP[eersNlkJLBIS2KR3-Z@UO,l3Y+^N$^*GO@r$ZS5fbZ3(,f/U.
%kF+Y6fFX/BGMOF(nE'sEMo84oO@3&c6-d98@,=["8A[?q?o$'DeZQ]<j3r7#mSb@jPp;@/XE;]s(lF'=ZtsM!ALhT.1NR(]Q4h$r
%To`o1Z6.\WJ]HVLWL0W^2%:2rU4BP6_o!<JKo0,(3hs$FrErLJ6i,U/lN&a$plb"[EdU#0p4ETZ')s7nPmUe!&T5UGMl.MHliGPs
%`rc4RTb:siW,@t,Fe'<E"rDnqap7Lp1a6R'IM)P!N#)Ke;(N5K2_:.mcZA>K'b;82biV'$AS#jtL++2.?kj.jmQXU2Gc2Ep1p,FR
%AW"b&b1^Dc"A3,V$RKo%V_%Jed9egHED58qN"&ZfD',WkCAY@O9e>bI[gdf.C#KIdr4S&5'.3k!(R3i"ERB^m"#3>;%ql`:@\^$Y
%@\\<!F@NZM=^+>3^+lMk#6Ikm\fjg*R-=WS1eHI_<]ncuU9TUKpctPGG)M*G@We7MP%+9<E5Qgm81'b:)qMSCXC&[P+C6,;#O?1+
%5<q&hE]*l'S2"17?BSe8?D:$gn+`Z;*LAMEj$9<"DK-O]$XM3>d+,s&]<o.qAr>l@jMB.:\5Je^6_MKOo\C&M5Q%_NT7?e+n)EXt
%rnkKh?$Q<Dpcecn?L-`%`k:pNYP:HRImR"D:_'SAlKdp=bAYDX@N7Z&Eo?i/\6^B3rI5/hUbLGs&5Vbn@iU_;D,(i^/)d6H>*(HS
%jVLd5eB6%@<60cLp>JF0,qX!5;]6<a1#=#%g9i8F2P?52E'#&bTFDo^+j,8j6NOO4;P8IGg3DL_b"u!UU'%Z\debHl%pN39*@'"`
%!rDZSZ+p4u5CS(\j.H@pJ,A^7"[@+4J;?5#13bi2LWkYH)*I4qPqhhI4F(+6eB["*d)k4>.#3U=/c7nJU2)6-$7ZO1f)+fsqm$eZ
%668Dsj<H7@5Nf>\@a\7'=^.?&O^SajBj2'.Bj6i#]LH<:.G@PuRj\hGO7_OrU&;oKj7hjdn2C==TT^bc+#W\tTTaSfIr[E)g,AtI
%ka6iJqmjs9P[0X>@'bX"^."#J\TBQr*!dVM>EjLFT21puBrlbINII:02j_p16c\C\g!>!n^j^2XW3j"e7'W*sJqJ!%f,(4W$`ELb
%`3cC?G^3b5dj_pl0ps?R02KfHN[KReT2/8,3r!7n'<HI[HopB>ImY68NjgPpIm0L-[nplJiHlO/Hm:Z;m<m[8EP><Do,`bpS%24$
%L:5[22,V"tL4J&kNn5)Bp^="hnia?j;b5eu>#oCD.AZDu4VF`8^:`oC6c\pdg!?Sb+XEVqS:jX74;(A:%gQ;4lhS,'TsjFqToASl
%21l`DIgXnV;`*%#mZBOPa;EEA:%\#u#m>fM!t-<*,Zg)$+6'CWW!OXH(PDK5B@*+[ld-N^b_QEp`m:P#;)4r\)0$nUN(D(:gPcCc
%r0lN8JgQ>sA1FEr>T]o@GT5a0"=`s*XN+=GRQmFqj!<`C]_-M:Aj'2Jc[-e=n`g7_K#=f.B!JrdKHRHY?=/ZM0:Y9^$h+3#T1K^^
%qILEj747R[$cHa+Q>IDi:f&2AQ2SA?!pfb;3e[a7UL!M0-rKSe.Y?PqP6-!:50X;Mmg)olP"stI"c>InLD=JiUU()UaaW)6J\Vhb
%_@"a]0QRF(7Q^fRr"rN5./q(4'PjQm):`+n88G)BV$*8S=u-nQFk__sR^o,%c(s^hD9XVfNfbbY*@XiK:r'!-3V,KNZr=F['P4p@
%D_j:07@QV^`f=TQ(,L,_5bk7DA3]OV5idJi@Dc-mS$ar.:"Z*_`?N&6`EtTYXQs;'pJ#;i.dN4dcCciV&]ooZQ1`eV.I08sNfKF:
%^boJ3YE=VW+JL<mXN*d[&cc2pOH.a@r2!?3"f8ePk'S$_`g#;%>W-,H>ZC@e)?=:jaLi\*+A(--)OI9GMF$1DS,N"DFMDkMI)LM&
%\I0`]pk\sH#&8((`.,feh')e;3\gZ!j`$h?pa1i056XbJpkDImVD8)U>.Wa=h>%+8kQIJF%g95T)=[5VbOj/t$j]YC;a!#qKW`O0
%5C\#*HN`EHrtJFBiRS;-(+"%]5T)fY`Amk.8b<=m&aJ#@c\0o#62UIKGjWaR1j?h&L/,U$Yjn#A:pi)[\5e!Xp"%?G*QBghA6ei_
%b=eR-5aN4*;Fi<?kG#>%ViXpjnY@[hF@.F0<(0%?6"#f7:PiRl4V;C7dDY#HOZ;uMpjV2G8O0='LP."Jloq'WqO,SK"'QH,Bnp%f
%E34bme/L9ucY#LYBejsmMq62o2t^!R*h'V+[mu6f/i%i=6kn@3c//g>>q9bm$bB'sJkh-#b'lOp@MYM$fOsNsQ?O<`2jC#`IPHkt
%EY@>'j&+6d,-@%7>8W;eP/!-$&lD8p%En`95oD-Dd*`#r=p7W33C()_"FX';2Mp5*L7kYi&e@CI!K>]o"c'-R@UtA$Alt=sP6ee]
%PXH^k!g$1lKbA%1+S\u(F0_FaZ'[g)0u9;^'l>qiDCE>ls2?tsg+VtM%?bu+ab[Kfr+$mYkf/BS^rgh!@OgFf0e*"qTYsM@^7XO-
%Lstc2fb+u-)R+HkoTGlDrd;"E7V!24]]^Ye%2bRAZ9=jJ0M0sDHQ9h]->P.V6;2IoQhDk5N>i2cNN/+*r+eO5R#;a#l_n@n7dAX+
%:7mV/)K0ILqS>nk=Nj'R80'/Vq':*Ac/oPEc"FK.7M^m""81@1K-E%7BOB\+8;otbcnQg*&hp=?,fU(2-k\!+Gn3>q_-2:!'O]H^
%0d^P[6QmG\5sL7AE!e7]gR`KoKooNIZ5.QiKooNcgl4C?1GUHp1dT2N5C\"k1<61H#^0^O_Vf8U$^^C73j+f.]eN"Uo="t:E==m\
%(V=Z>UDgaaI6_'?J5l76*XU?$P8R'(8gP^F7bk>*&/AOKl\e(,Po^7XcQ9E3/h'#sHF^gOVs]1)ccukQ2a+c>bdHh.<4tj0bgO@]
%#R;f.OJIn;NFI^UmN?(T[P'9@5(K'FK-pk;SstNR<eli7rj"KkXNEKP\O)eNggiY<JH.-b2DMJ<F-GSIW-`hX/Dg0@+TBM$"P93S
%7jBu#A-Tk@D:.!^:JOSKT)s32-0RG;XHO).Te"fj*#oY'%Jl*:?1+V`%/V4%1J7lk#Y,94_ji8_H=CN_G:SUK(;)1QREqqbVJ'UZ
%oMgMqr.\C]MC4YeI#c,23e;6^YQu8==J\jH7[Vp.`<cH8Io8)rSdFClS\C%ZgTE03=c7P8AeIHq1)r.75=qloJWOPT^7&2I!g23Q
%o97:Y2M&NVlaruAZ\&Ilk1\#%_PO.D#i?CJa3rY$\6noR<E(>HIleX-BO^B?UfDIJ;tTZA&C[^on79IBXGKrJ)]OsW_XE-P/"I8T
%k_=P!=AREa/-31/U54'9e!pZDSVf=koRZU!_PRisX@jq_iF2[nI7ljScVHjk)^Ho$%LtfsEm12?jY]>:E(GAE`6egZ6.BK]G9Xm)
%3+(V0(]UjpRY5jRm,rF8`mcGj1F%W_D6-W?lp.O=.7*YE`F%kiJAIt\=*EsOP+>oe-r-)'e9)+$%8q$@[)bls?HT$L&1f<E3*?a<
%g-(-tBcs]c-aCJ'RhT^:X,e_5G9&)FS1L4W3f3?DV4i0O\`kBV'..oG7Km2>fZ#lm:_RcAMLODL!<Q;m6[1E(fM0:(?;O6kW0SOC
%pabO3MiWl^fU6jl62$P&4`P#'6WS3%#o(+WWDUTj#Ej^I="2V?El83G:+-M09:J;Q$VWuHf?QaIUmXsnIQa5h34Ml:A?MGE%cIgH
%QJt?B(u(EiIR$WegJ%>4*fDMDMYoo1E,)j?EY:MLREkLiNka#A"M9PR5u*t<"=iQ:DQZ0G%N.g9rgI#uVY3&1MhgSNBe2>C%M)*(
%LH=tV%OP*[MPmH_TTV4nOU6)tQ\8F9m/D*F-&W?P2Lc"XVFQb'!C^aZVptPFC;l>p./S9!"*/,#T`jCMNn-HhhZZGLVL'8u?g3r.
%i\f7<4/u$4OLhaWor9ou+:HAMeu5Z3M.NP)KW5ip4'<%h6L:=jnCEpNo1.B#U-u8?`7l(b:nGePir%7C,i+Y=HGU>g5-J.']Ob&-
%M:0=a!X09Q`Bpi[M;Ul*\YDO[-aY]I+)PF\W=+T7Sr1!Sr0:3:NOs$;:Rsh>0BDVQ!t:2TG,HJ<>1(4R,WLsMf[MgD_=J>2/-d0R
%Rn<!eXC1d$clgI99l`qbn^+5)_BTH_Sk^GS::lt(;NN><Xc'HdFI4^>dH]+qW"mJu8O99DN!+!KbreWmJ2a63IGI^2B@GT`rk^,F
%Bi?oka,iQ81(d<)jt.$LV@X\N)!X:8bVm8&.&YIDelEDUF0Zc.`0(>t6H-*+8DE,\%MKI'>gU8Vmpt\?dj[])K5a$%;C>BKHJ[Gc
%Tap[J-H>jH>-WZ1OSl`rK'#=d5u;FEH;'1gF[L^2"n.*=/$JRn3JcOrln$Yu?04r8d#f9=]>\0LEfhVu]'Dd7j9nFTQ<"],0X<#G
%n-FV)XWlAb[XA]4#ip#k?A'6LG#5?m?3FVPQkkoj_=T9)d)!ib8hV7(.PIg_k<05]M]UD$X]/?/I8t#8*f/UC?OYong\h!\>hb[V
%C$).`;j;nL\7\rHRj,A6U[l_)_YJ`TIZ+Y$Whe0&Uo`9A$6=Ci6q+"eTjcR;k[_hW&87&jUjci/5]$b_#)'k?r)L>Q&tC:I;0&22
%M,G5O+>(["?R7q/,;G\5d^jI2NQ#g6Z0d9$acYINnQ4T%OWRHM0ZA,R-0qe`)RJW1Act7,/+`iQ&.(J;!I,`?)V!hYeP9#JRD0Tf
%TQZJ0bYH^n@n7-;NY0]T38#kU!As.$B]_[Is8Pk\bA<%[?@Yc:Ze\.[Tf^BBk;^\]'=b37H.Q_[UZk)XnnYrV_-]3NYS&7g<!Ai,
%;R@'tO:pa[U;"/P/t93g8k!nPm,O`a%[83=As/>$r)H)<As*_L:=]b"n3@XE=7aVY1.64Sh6LdjQlpD!r$c<I@QKEsE0DkI?GD%P
%`Gh]+T?i'*Yghok1tQ!6JQ9kH+"4B.a87"Y9%2r;Y*uag_^J[;oEgF=lV,3d?Ysda7L0$Q!ApVj*WW?S&!]3QQMcsf3@7cVJn"j%
%IC^Zt^p/p(E`Omr+/lD)L6G'oC)XP<p!/Mq'SJYJpU`Dqa7BiF^FWP:-hDnh<I?^Xc[-XV<RUO?`@+]$,NpEo`:0f#qI0m5[c^n(
%E4;F_l[l+U:"$]!QPMZkoh-cR3NZ07*]qALFgMN+[Dslp.9eE?/Faa>AC4,\#F<ns7@5$4W%`\KaWdWhkGSMF9-\+(FcP%bf:b9;
%X?saVY_D]R*%9JXDR,o/35C2^Es/1#Xc8jG"2QgH*74F7r0:kK`1.T+Zu`\_S@E'D3T@E``bQTPKuDY2\8,plBJ$R%,sPtiN@F'Q
%H;?W*]hR(gL[0qWp'"$Rmu_2WFSj%[B.9U/W_FV!1W>c;U0^.Z1`$+6aS\EVK*m'6K7K>XWj;p3HD[`9"#5--K'+6K5ee/O^[2h\
%'i)qT-V0-lWA^]c-rSbpPN+"$m7R79A=*#=4HunNhqH+ob^,c'b5HIblt=\nd+W;;Xh;'!UJ?lNPrFAl>n(IJ.h@;/+^;(]E^;6^
%=.S^@4USEPl3ni:R$AbhNSln0T\A9qcZ');AK3(5_.XVaLeBCJ.pCFg2t_5n/M[\Ki`Y]L7>/$_;00#O^%>loC/b]bD#'7e!)$bN
%Z:+s@YWfOs%M0gUeEe`/J1TY.W!cYk!*)>:C<ooc-sb3!"/N5pf2rHa,RnpLPM,.-==WZl^kD@!0`K3XOsH7VHWjJf;'jiB:SVT4
%h.R^:JBA^,!u/t-.EH-87uSK=Ls'q(lDc;T]PoPeWi%0Ho@>d^KfH"\j0fVta*oE9KJ!`sYh5?b$2P0Pi1Y+<QF`P_'20FbU@q+N
%o,`]F+%92O>3-'-A!QNZ5Uj"=gY3kM9"tBn0$S/h[9aoaSO_,p[N-X1Oqcoj"7\K$OF5%?Jj>RVMj%.:9hFK"6ZT4gC-jU]>nsdm
%&'[QFPp71ZUpQ>8650)68?$\</*j#Y6#5S0To%dCF&8]5bsXe"JH/P\ckus`GT",MR)'/f[$eQ9iiek;ne%A3C<-O0+J_fXDX0Y;
%Yb=+u0\/#qChd@uWq1gU>+/2e4Z+O&#Fns#;;G\V"`)OcU]X?^[Q79i7(8``'/UR@'Jhe$+FfP`bH*M:gn+Y*K`$Ac'W6T+Ibl<s
%OHNSe17g@]&T+UY)*^sAX@N%*`F%ji5^8FfXKZR@.1VCaZijp`d0]04i75'_$KhX=l$=ruKX3FF-`VWa'$^Hb1K%$L93o2ABHkko
%`ZT-M&O\Y#Q7`+a80V^^f@*LrMkgDHZ,8$XCTTgo3lH$9ZCf_k/F>7Xgk!%-&fB<;.OOZf8aY?sq#*gG5nZp.EK^Qs406Pul#])@
%g^S8?801:]9S'Z:N!np6hKEG[6W9_ihDC+RW?8uBYeWT"`![K;"V-RV3qS/$++fcZmU2QR^YDCjX-ur.S1GB*Yu65oWkqA9ZCgk^
%J0dZOWJ1+$<,870kW)I)H0"]sr.QpdR:C!2PInC3X$.+)-TD8$_P&CsOfS_Dhc/Tp"EVoUck*-odJRko1hQ"bS"agP'QgcB1'5W3
%*DmBAlMR?kOAHS*q.]ZfAFpV/*K%G4bX[@cV`g\6;KoF=pGcQ4[##nuSQ7L#P!mth8^cS3(rK]p$Njs-Q>:7:EuIb]#alarf!$Pf
%\@T742IO.LSSC'ph/91N_`=GJr@c-KQ!Ih$La+1'ENSeF;2TCT$snOV,U2bGZ`$2G0#;daK!sr8#Y5.7K+okooPCJZAj_BA85AgK
%)?Wr2eCMHn/XAWtGN6jifOL+aV;Hq"/'ZF4ZESSE/_O_GN-JCa4m0Du,[)Wh[M5t#$TGTOHT+nsBMMUQNmo!CScSi1T<^f1?851X
%Q>!rSj>hS7.HET0Doqk0[)<Cf5lI\M&+XgO/?.=,M3WP1!t@Z%,q&S8%g=F+W!aYIll6aOY-13saX/0uG`:XcS3l7N^b%B=S\bHY
%4AGEkkS+e3ieeZE*\-<Q+O##K#?:;N:0+K[l\_b3=aFqoOO-28TFm'9KH@'GE9rCtQSWftjj<LD3-o]Si<!GfZhSi(hK%1H0*iF3
%\N/?hHRLB-25AuQ,9t7^6r_l]#\,68@cB,"^[_SI>RenHKbNB?1&HY?Z8k$h$7cQ2`^^^t?PR^bUmSfIQC_$GXP+t!L`5sAX%m)3
%q5#?cR1P=MEC1.oGG7t0$oQg\Pc"/c???N_H>$d>K.g?E/S?g4TL(1Um6j2-O[)>dS&$^Ln*cE$gg<"gJeF&,#4Yc$!&mm[R)u)J
%@"Wa'GI'*X$mI4&C"2b@S?DC;6u[CH8f^\@<=;<e6\CtWe-TYCeugZubueNlJq9`AQ^@+!LsoJL+af7@"PX?ZekK"NZro6:Eb\;J
%L*hf*'drm(%gCOC:*D6O;K*Xn6mfg*e>>@MO&>h?8uOBL+5ooh;j=K4LU,<\CarS@F2WmMalO%3M36k:7'bWBnl&"9ZHb+%3_J.-
%*C^o;p;bMpD@l(\ct%0-=c:Hs-=+N#$L0`iP=a2I$KTSM#ot#F]fQd!0.f3;c[-d"CTVn7B^I)j?rU952jB(uF++PWYIqc*hBHVi
%3DD1)#a&%_UR@#3,A^oJNG:%3i?KLMNTC2k*3tdY+cfO'&_?6M?X[Hp?3+]eLgEM(cM.U7A7da#L<C&W7*qBOJM8.Q[*'+r\Eq_8
%N"*VN@?sp9Ibs*MWmPL'MjU6IRL\!YWFTdn+2VAFIrl'6q2gh`rX^AY;_pe'c6&c!F&YK*!Cd9"]VU(2L\(pfZ>-.l1[BCV.ANuW
%R1tq'V@K=\@D9B*$t7'5AVXemd"JPS.[Z:^<-0sVQ^t`hO@$H/#cFNAIbmGC]7q1VU5&WaZ.[V^Yb=Cdq=d2QQ)5CCZ,LO9dmdth
%T_Pr5Me]Q-a<p/!K-dXo>eDARcU1^\q+Oi6<4o!RH\4;0T<_-OF8(3FU>``h_8q>p4/*.;[ntbO\J)3>g['K;\*_$l)Cdi?C`WYS
%[FD`Bg!>!^QH#o/Wp@o,o+D85eh<i'cI`*6hRiGoFrXSXmg#6[;!9:K@(5`ViH^U/1BRY82qXR/$k*\XWC;*0Miq9W/_\R$T3*Tf
%pWe2d-G-u9X*@a0Bf2[#SND%%+sS9VeiF;u%se-T.jN^>QUg:q"_!oBqhu5Kf`P#K)*h(b@UQ!7C\_R>elofXX9GT9(??Vt2V[l_
%!`1EAR'(5(]L)h0M<UM$73nso7+oR`4q4.=r#nD0\!;oF>G>rc8rQaQlY$E%q<[Kl-u`NTU+fp>p:tuIY2P?g!Is$<&:_b=KKn0B
%LYR6G6#u]FMe>%g1PiZI0S2okjHR9hCFS-l;@#:0P/C#X#('#:A,_SiR>fgl(=(ee6Au<%XOFM3KXDEbC0Ja"n@?dc9'\$L*YEKf
%(-6-*(lJZ&R3T#[B5b6]@E+5<="Eu8+j7us7Bph&%cd<$:#;NB_hS.-)Ujt6qVIEeeb>2WWH>o[:63og/K=2@,[][]8(;f-"&?u/
%-%W^+g]30sA^W+2X('pAlUIgk$`qoU$k=Um-ea:r/C4BR.>+j,nQQdVaocM,hX1WCNuV"dFishs;b*L)Lh(q`X-5jI+a5&bN!A%<
%!sur;m[,&\_]B(@@gZX/<$R&bH7+dHaSW/4P'eh0P9]R5bk?udjq6`/9Rp#%?*>4N6duf+AUYEhb@:m[(8hh/55$^bn2IXE`FVct
%`;t=(&ek<ri1<)X],uj[D$Ekcb:H)*OV#eW;&K*M]0Z?<'4Mracq3CNql\W]_Inj#b)6B0RmHhOSdGt,7gN@`=b9]O,Z1*n*jkOX
%.;(V"@Red+$E0@8`M>*6>Y_#hLahr%$1JZ6Pm2=2AK`D^`<)=eP;4-pYZ_lE)VrP-<,`YAVe9qW"+eT@\"L8l#/f+a=-Y:D'a:\i
%P<o*iB5f&//m5Au2^HX.3s.('8=H:m[+>[WZ\`:WAj4B-Sk,:j&5b"Sa=//BeoE^4k#GA=XPCm&NeXMiZZ8-l'YN2*Eee6p^B5Tj
%'!87jI.VS<#2mVI$W:.Jq>j#$PG!HUV-b7`mY@:@?f1UH^HDjOnc&LMp?2J-?N*1'r\qLf^V9[;^V5-ne[s6$p2BuOf73R9qpKrd
%Z_(V'j8ZSBOP"5.Pkj3R83&rMTqEB0;N?W"g6RtuP1t?FjM7O%_;\WY3H.$ngJ`,,(u&7eNe34h/L<o=#-]YgQ/JONO]OITga#qD
%D[:4rd6\CO7nV*^ho:5a`6=3Y\3Bu%mri'NLfuV:R?]ADK4f(trY\oK\3u'?[^*l6+1H1@@OBK1Mm6o5[rXuoHGbi&!"ZD1e<3\H
%XJ2YD8r%]kiKcG_:nDiu5OI5*4G[?`f7s_l1?&;Yf&=@Hf6:VT_$,T6J!e4]2CpPti!2u+GkI-T-oPLD%\O%\EE,IF+'ADLklD)Y
%iA\*mB<KX\r'I.^Uq#Flp?&a8Rh$f=KDpE$\U*)P+-5aHmsk**oCk-mhh<WeJ]!/V,-GW@4C0$OeA-Y`BDk105KMRZq:":o9mNc,
%[c9WV0^_C8=)pV&SCRm0%fk[jS$Q.f?uZ*-rm*$[&COX2QA6[2$7#]oWs1l45c)CI(8TboS3..G\lqOY<\&-rW2hl5lT%c.frlNu
%EW!'"L(0m:eF,^<>]Z#NNI<o^WW@p==WI635]/9JAc38nM.XtU4p(j-H8+>.P/LF`7Et0c;%W<!+L2Y(Ou]jGPVpcB!me/dEt'9<
%oJtq-0^&q'05$*>31"__^mS+,$A\O'q'AEPcst!_.pNjG`6>+b([92#enGXf#<g5MJV\KE=1=0u+s+4m^+@\BkV5[cp9g&%^ab(0
%L.cT@UXqAZj)o<,i\gqjW^dOR+tPYkDUho2%g4g:k*WN[(^<kmPr6aeObU`"P#`BQ-X_*'6k-4>f4sY-<;P=dkjllVW+KjD@DoD[
%8OJ`5U4e?^<`FX:B\)d:#-DO/=poZ4289m6HV/q2&o\Ztpl(5Df,MEr'g7*@&ie[P+4A(Y5"MHTgg-Mt'IC$jAQk'Z76.llYh"CJ
%7oTMnSd'*j(d*nHKSf*;Q8!"WM:-1#W"q$';7'"]dZ`4B=Y\G466Ss25ur"fEL@uj_s?=*.!+@d8rO\%1T><<(2n+rpF&KV/gY8^
%J..D`DH6]J2-h]a%F$[`3bGLL^X9`d)BWV;[h8[-)QU4CRUL8&A8&C'_F`>HM4V5+Js3ul]'"Q7KuX$CU]Y(F3j'=%-;"[dC^O^0
%J_ofaV3-VdO9Xg(!8ISV724]=MQ-AEj5I?#q8(f,C>rZ!22@H4JZCotq8i1f83ILNVX(*'`RL\$TY\4.M"uXU0&f-)Og'!S&1Eq7
%@E_]=,e]LnT]_lr4?@P;_/l"W!/J!<A;[8cgrCO<\7]P3Dh:BqN(8\_p')q@neHP/:,*PZ5iReU)ViOp'f+<jg0E<R,&WWMg51V-
%@4/mQ,1u#E'[bKV9'!&KXU&`5h'`7LB)`d808J)Q=GC4q^(ZjT%r#b"U^?OR&2hei%-B!,"sN9mrpd)$0HtVUWs>1-#;uXQ;kL"9
%OV!PQ:QlE^7\mOJ"H%WsLA0[BHp:Mn&VZmVFB?K9.0NSrZcr&4"Ir";WFl2PV\I%Q'NJbd=c,"(!=5aX\rs\g_?!OcFSX1k@tR8[
%XjB>:G,+It"*'Q=4Q$S/2Fom:X9$aC$?BZU'4\hAZR0F%/;'@P7+@K=c\I<HbO0bnO^-Z'I,Mi3qbGY(gReugAS5^@+$_f>d/<gm
%XEeR4_a>AU@Woo[8>I"&NC#'.D[-EN6N`U*81Q;RP\Rb^%i\Y_Nsatt'HNUH4jAI1=k-sOG(uE^5;^\+(U`@@P$YHp4_jp6om:.E
%"=9O4ksW)L*3X-cjuTisC>adbIL$F?X[paV2"pU(,/(VcX1:55;p.;Jmj0<Ol54%N1H#4h&`sAn0VZ>;Ye1uNGt8;V9;)\SMWZ+F
%ff"O5)PC$YB_YGX@LT=G1/h*"bMFbXk(t0R.AD%e#<-AY>lgaCZq42`<KLY,&N(l_R"NQbHH`Xt1X?_P(ur1t\=.\)h@k"5$u+7o
%m?>Q:eF63+_kNsM$qt1Hjf[1V](?R805<<p3s6ASYZKF^"SB44rHH8f2d<ECPTpV4BW!@FqXh5!N-quqEE.sn@1T5*e3-`aM0__J
%\;>nQMq!qO`\T?S1f\A;%F^Rf:JcNhVph2@Q1u'rc-ue4B]tbZ;l&'MH6T[]'1P7?;i3G")H*7,;F20IOLMULq-HqgMcGS(g,\9-
%Kc)6YM0s.:\8gdZGTtu[HU*CK)H/Z(Z*Fs53SA^SU,>9?i/M9WSK+qS>YrE@j\_:/<_71$h>#0tC-pp>)2`TCh5LlnSbK?e*Cq<.
%o<g%Nr2uN=[u0+[C_[1)n"$YgiW+L*$#*E[U_&Pud\7SN5,;[,JJgP;W.$kZ@pYsb2pm_u0(5Z;P^*&Bs!fL4]K(M@!F_#^3L\oq
%!pV)[X3JR*!'0G"P2]r21kJ4_RW(b!1X5aS0LQ`ZC:SJ6Q4/.GJ@MjpLM2MSr<2;N^*+-fh'.f7MM$c'T_K\54tR#48<hgWiXM-B
%NZBT;M9k.\YjTPA"1D6c)4Wk_)g4`Y4U,(M]"9#pP=^UM>ab6c;)NF*Of\hN@\^AH%"PNMmJ!>V:e;;;UlGE\Ql$R0,Y#O+aY4A[
%XSSn?=h9nj5CqttpSQG9f[3Y1X?Or+V4lkJh<XeoR&)-P]]+JSiddtaJa,Fg8`M$Dh#gQSq5FWJ+CXY@B;72>#&AL##UG^IFWtcZ
%<JSpIY!Q+??o)9CRs)*s63VOH#;6RX<f">u<EM)_fteJ5Q/(TWCb/iO_2)d28]QZYHq[\s(b&G`:t4ISHWG4XW.DO:B(.%Dc(\Bd
%'eU3l4"J\SUMdGnq^Reec7>n:#d=;+e66RJqLCX%W(!:G$\!K5E3_)n*WqsRB;o^+1NDmV2715h%L<`B';X#I1fk?]I2,2FnSg:>
%SAm9e).o%g68Uk:cVTiV%1ZJSBlP=q1gq\5Xrl2Q'G9I.*[K3d-rQfW]#t?G%_N&0LY='lJ1nFQ=hVG-H(pPT2iPs8/J"T(be74L
%1$ZaF/4GDt\Taf/^p]\]B<NUl;&qfYA=p.P_$iLiP>#/u6,/#MHM'i@C^cl/`\^YP:r(/3#uhh3JOm;+`h:l$e.k)@Gl2!.M&-qH
%bmp_6L1HFg<^9M9On*>Z=V/D%!@_o%+FBH^(h7(O^u!j-7,ZFR")7IX7$MKE8Q_IponS&2#]k9+$sDP#2Uds,qZM95afeOR7D84O
%"a;Bi6`8o'40"Be&V)r5FdG/;aLghbhUQ,X33RuuG?ZLOg:B>?Ks`9>Q!D3Z>%q+Ed(`h:@(^+Z@n5'MZaMp[%CW!I@$FlpccdbD
%S+AlXhhF\<AQ$QX)4gA6GAf\s!5&-h><d5YpH>XEW>C)rKNYN"E@uJ,?0n?%3"EaHH+a=4-`,Xl#GT1kH%\IWJ]d=^'N&M1GCqNr
%8@Iob3<Z&)Au;hIK29*V%gWTPEjbkU"@MV<H_5E0>>rWCc(NMt9_4Xh]RU*rnH>?O)m)J\/qS.[*ClP;a_rIc`8,AWmh#nMBo*,Z
%Gog`&TSM?",Pr6!Lmnn^+kE^S-U-cS_k':>@Pc:dBN(MB)5\@qRjO%/VH*?EE<_FX%Z>H0R?/;!r;r1da.4j!)f)D$5U-M]gs[ei
%qo[j,F:>]ZIF];n:1LjrIcD(M1e\5Y/mrFe_JIIpfX84/5qL/7Nf8;nCe5!ngF]9;L=;72r!O>MY,VF>UU/N41r34W%2<n7'hr-Q
%PVneHY8$0OK(h1UCY.tTr7Za7l_ao>ThiDrBu_1rnpgkqN]AXb>W5G#Q,mUrViO?HZ%p%4o0iSN3Y*n]6sqB\7Cd`Z)frY-0T'pm
%6,CgCf*8oEfoC?p?"EV0gJ84Le;do5Zst0M]YE2/CM/lTq5,!*AY,c;O/nO#N=gb\_9^#W==-B1>7n&$[Nj(uSD<6=O%;3Io1T$[
%i@oK$.3djN#nFqcq<IaS:HRD5YNuM-!Y.K1eLQH"jiq7%9WT?.$DKM"X&jgog:)A3U#C=E.sPpfl4nndDY+9&AbD]tJA)T'H3LgD
%FfST`f08Gd_`o\qIlg:(1bc+QHDNf#b70VH\F]#'GlRo^c!<gP5O:DNSLB+CHo'iFH>dk7c,$)BZtXh<Z5R6+%QU>f]6ScI@_pU:
%a$-U?*`3U5r6>Z4-(HKl'i%^<_`1n>iHk$&B8+Am0(m>p(5^5JDa[`:%C\ed!-JmeT3Fr2jP@H`dDS<T\onSf@X0k-GRK@3rKFF5
%Jh_`f5FL2C^\JE?:O+i)O%`LLDtMX;;@JtK>.is=J5`TnAH<W-%cl2e1ZA!0HgR55kP`Iue!k&NncPl`Ag7FdXPItnc\$cqm=j-T
%'BJR)>cO#X]Oct4<8i^sm'AkfrnfnLQ,;0,93?AE!+Zq[JimcA.D?;NA]Nk/6q(mtY62s)Pq4JtOO?[C)Ub:&F#TR(@TQ7cS'uPQ
%ip2\#5Y+ae6KGc=lO"d>X7eMRbt".t'eZe@h:)N$`pGDVf^9E#SL0Q[:84b?"[Po1I"G?(fQI_Z_LcFY2KXQ+m"@dU\,2&2P><oW
%qK8IRA("[+.Ctu"5^=JQ+aVB9Wgg+iVUF-sXURZE2SD+doa*enl)BpNp:RP`-\ZJ+IAgeU.8[kO\@l(Bi-Eiun[ShYZYP6nUtqr9
%4tn!:B'<fH<0c9r^l6mN3tW%K\*Z.<*tV^?8?LDi3>1NaZcBSp[oE#gPK5L\#ZG`LPp3/BRWN6D\\gu.\iFX$M,/f#QU,haXQhWr
%M^d&%A:9pYp2i?/Ie)[a^!p56P4O38h5]J0_0&G/+3/FP@<W]AZbZ;]"l1*<82)SVTsa`MLB0NB@"rcedo]Cu<=2dTYU"<Zc%1bb
%rG4QpkZ2`HhOM%OKLZ)!.sSZB#TBhW%k,bMX!u(n^tne1<f/XkDq];M!A;,K8?L\q4r$-(-M=cDK^$-TI26'Ehe].9L/r+E[BPt0
%S@&/=RWC4J&[=4Wg[tPSnU+$b;k^][fo<Y"om,&q`kD+#>('RE!@82r&DT;R80t@4DIA`!YZ-=I9)rS]4O!4\]2*f*i'O@'SYL]S
%IETO"*<f\?Q+fHab'Kd(gO36q6-b!!XYarW"6t3,:K$'5oUSX*8@IF!XOUtA-=C0]q/54>+G([,jI1GtOSq#:n=$/oAhokQd-<FV
%'MoY*9lI0u!CC&A>h2Irp4(r1":04\@<V+oI+f57*W_._[seC1n]pEQ-9hM[f=pWo5J.5np>3]#pBeS%f?Y`G(0HM6X;LVUo]c0N
%62u3H)LOg3_m\9c:lI,4(2o,]^al1CWf+4cfKq<WL'SU'.-6qi788:)"%0%DIBqgh+Q@,u,5&Ha7"FN4NR@B3A3DB$%A:rg&"ffH
%RLKego>#_te8DQiYlT:t>(jL;004DaE0??^$c$NTZiF3jq6fq([u0]arTd#Lp/gQ=/:tbnI4-lM\,Z51DLVPb^Us@7l=\`+]_glq
%Ie3:3B>=ECp?cKIIJ37_RIOY^b.H!\62ApD"Sh^m^\m+6J,B5g=.fKhX3X!,h5a>&rXc[lW4rKQD"pEZs8)$0!+hPYgOIN3Z5h[\
%ACpkXafFa:?i96e5CE;"(SCa%07NZ+2!$oHoq1-t^45fis5__6^4-*sdJ,Be\Zc!,`34X_a5>df(%#sep%]E=s8),`:L="?0>@>k
%/]bha;W%qqWKd%c-;Asf%GF:Z:o_3dd]7CXAa."fJ+<72Du]aSgFqH6rr-82IJV^Ehu3*4-i2W!^]3R0nj`G4IsCk`^\k"U^Uhse
%3>MJ0gTNg@h)A]SrVF]]Y<J4qr6Mk@osm<0^e.,9Z[Ll0HiNE40Ah6WIrpe)a&\';GR7b,@^]['oXQV]IJOitX8N9bC*DT?Du%])
%55WU*:He^O:OdZ_WE;JqN+XXNck,d8U%%NcOWUkcV?!7$#2F4m^]*oh+4R>U6`@\TX7KUO*_&m#6P=F/-IQpqZojNCL(lJ^$#+5E
%9UZ6@L=<$^`dLaMPmUqZTE_Oq,Qtn'me7##^:j-e7[YN3Vp(27Agidu!q3'j;++Yuh/.s?'M)*JcJ^6:kOGWGnTc/5eF-)Ra.WZ_
%ZcD_bfVB#@2<Xl1Ye?)9i''jiL5Kp=\Ql6=b'q:1&2(TjpfM+t`UA<Jc"Ab[G@f`,3O#5/[t(R;(45aB/a21X<t;r>g-PDKU'PQk
%IBGfdNIThT[k5lGXj;F)NBV9#;\k.JcE6qsIH\cgf&p"k*U=bpKDr*1s0O8)nX&-_AQnr:AVHA0?Q8FI'10a"PEbNC$-+o2CZAW"
%_Jp%KF5OD=Nb^nPqmMdZ&Sp=X?N+-.[Ma@h!_n?Ya[h39'-WEh^f?^?Th8;$;ZCWK'J-*'W-gN\\nn47%?>&8RRP#*,`LUV/8J8>
%P./eORfNl*;F^eLJtC.86N'^94ppudP*IZ'QmC7Dks=X=TjHC[JG9INXJm/>kjY\bZd&E+D>%G.IF'kSr.QL\;"H<IJJ[C'iI_Xr
%(b2R-<T=M+[(K*7]Q"o?jbjg<cb0e-cr>a]OZO2:A8]]t0FR$7O.?@@#G?"ISH9EV+#Z2l&M6(UHBuX(=pg44&=W^aKBBFM,Q_O,
%MG=;#:OrF(:uk<+O/m]f;RNF=)[>0LkoCN'@Xs+kh6n^.qa:hIUFhe:_E4:&RKaHH_$0GPF?Ic*qZpd'@[m>7CpOAJN>L@97q8$V
%<L,t)^C)"jnA53V8Bs46A3`kE7*a`-5=E:!-Cu1S!tU-:,(8>0HI.1#7`lrn"^.LQgC4>6Muh%fXOllD;2o48MSpl0&o!B4#UPjE
%iN"=TM[gq]/-.Rn(ae;h,qU`I#"J_ZUpb4LL;Y#SO@<[]K7b/eRps^$'^asmMC_'gX"[qTQ)"G\\.-S6OIgRec]Lj5NUrWA+eT)E
%(bi4+UGn_Qj$:?]=#e/3R$jKWJ_$+Z`X5O`882?uaK75]e4BoemXdr3R*)*-Q]TG4a_]b(cI'6/K78C`T_a_c,::QPd\.u,'Gh$I
%K8F#<$=Y:O2%G>Y##Ea1f/SVSK;F*u-B3<r?,0S\6W9Kb&HT0Eon97fN7jL9L^a>g+QHTSA$-rl$[?H7UF7d/$]%ue"PI/eK!.M0
%qQT"1]b4^-nTT\!Zs#K6g8E]PZI*G!!a3bkQ8gC,Gg6DMU]=qZ*#Jgp`IZmNnZETO4_>/>3,frWIeCLGTM]_b^^l3BrRfg%=R\o]
%E/*U^3tJPPY?.Qr1ee;YLn)U'8S6E9W#tcl\X>iRaih9S="-rfadTKAec<QPK60%a]!Ca.P^Zc"AJXO)%+CrXjX.!+<liu5$?.d5
%%hE%Ei2KliQ4<+.'W%*F39Fd#N&*;F((gY.h;GL<4lWIB1(r,gQOa5W-QjW`.41kuNRg`C.*7`2+&L`=ObsCCq3<mp11_TSRmb?D
%/"mDq-BlTl8VM6/g+NQRE+74YCIYDjUAMbG;\U[g]ksSKqul4nrgCUMMXl]=a:%&CU^pjIW2-"Qi,0Bts!g_g<)O'ei&D"pighA,
%M_b#,5d4]#_R(^l$:)t;LJWfH?9:I[jK"I^\NQL]+&4'\c(?Z+%@W>9B\)#t.'j=$$?A'-%YQJ8rd5f/!3TNY-6T`TfEFOkXL;LW
%bAU6@^AQ%km88gkR4DG#U#A6_U+B(BO>56GMnjrQfG0o$X#*,O!:2$4,qN16P,Ot"FYZcXS7;0lRcZ5#/.LO94&'4PUa1rab,Wfl
%0^#tqFN*ue_0E/dnC/@^@E-gJGm5$om=R.1qA57CeWh)s^&mOQ:^/;>H[@dZ5N#jp&j-,-SI;>gY8Pa1ZIaB+6h)k?JPoN=('[kt
%KP!O26f_l!p=eLu.2W[4DWJk?+'>NZOg@R'ZbpS?d9h@-!m1H4GM!m"qkr`W5D`.!J*K6iA,dg$>Q._'S?r2^RD4n,a<-;'s2@4n
%U[7V=r29U!p#fD[i@[Q`F3C2M*0UAiUiR-A79`H9Q!(,Yd#B]t)8t>M.=qO99r+WUL[eFKL/C&d%g6]gC4:HKeLOAlne/k!aW44$
%!4g_a<?,sNR1Q277tu:9@Pa[e;U6R`d^sB6OZj^D5,=(o9&;tZL4qIFMqNu(/LFP69d8"W3bm"tJ9[5G-Z`/[/&Gg/5`d[d\V61'
%DYS;2$u3QhACnlpCh8IhiG1W1nakSPYs&dB*ZUPXT-lrT&=2``.]/\$WFeDsCK[g+>/8r1Y8g!6XV3mVoFfG'hN?KicFS8MeS8ep
%F.iW^K(uA@6TRLnkTQDR8>",ZotAf^+Vb+k?,\093Z60^2OFaY#`rm\Em]AUC0YOpV>/M>onH,7F=CBb!_s4V3//1_fN1HY!HWFX
%d2srHn_1-A8+AtBE8PLV+$^e8*G;^-`,%Ws:mLK`W(pCKh/ce?Vjl\_"nHUdcjJ]7L*R+"l7`isHOOLH[0?b!9PQ:R!6aiQEk'\r
%mG0^*o(c^5:53^PeCS>:IZ/b(0HUu\J=lUobj>;r=I@C:FNqMb%.0!Bgm[@!eQi&T`%>q4!.Pi^*#o&io"tn(+Vtkn7@:2L&q#*c
%JsT6q]dIp3qV,A*od<5krRER8qU7\/inZhKr^U\i^V'Nomsb;+&`3Oolcaq"IrBZ!)IEEQULtOi5hSKNI.0bF_bh4O4%"7C?j%Z7
%6pBk+^.3l+clS:\V"%\<)MK(6n$>mo"7NTH87M=N7.hJ6_6P6_'lp3W2ipZVSjGba%ap+XST"k"!%P4%R2UWCP&1<W&##:ajd%_f
%/9P)nFDaZR$tqE_::(5L@Br`6,fEWZp8"VqRY(fdmS5SZb<I3s4X?#?/23O)@[;1IXF![GaJ=_56DYJ&>8IQMJX+F7W#mKiAd;rQ
%'B,>4:i5N,#c#cl&4)/"0At.(W"i2S(+>&L#P<$L#FqNg;'l?$-Ym]dZVPU"*nS<c-0sMe#Q8bH??de\nojklX:+dM0TiRQN"DX+
%AeBdfOE*;LnN&3)dMu/<PP49P9JDli)91)a/qi7o3NOZ6B\P+W$dDRO7=Tje)t!5>"C"_)^D4?-M(]RKZ8gJfG)_-:P:lOer^>3%
%.:+_m2CVfl&(V)H>ST[p,'NIGY0TT+VgB!Sc(?R#2_\&lIPL996l<'YRpD:9WWE:N\S)hm^q.I\W7T04r!WpnelcNkZl63qXkIK4
%%g!k'/o!Y@#E-6=QtET%]>ZZipl?+3X8qD7g#Z05hD'$&7pn'F)mIYgh.hL,$0q]G9rV;?N;)Hui-ridQ6L:KknV.a]FS+re`[Jp
%@4!B6'Bu_*pPqmsU*j1)aNR9[X9UdBTsT(SXDoBlQhT$r.KS@D["D%$f51s@@R;A"]qKtG!79fE9`0tp6U-3[mmO^8pY;sedpg31
%PXL8qhl>?:DLr^VWuMXU/7cu50a1OK)#RB:2_+.bFo@C,3S4c;7'@3]rdf?$TZ'K^'8j>"82Sh/JTjWjG&e>g-*go<kG9[>#G!(c
%44B<n]JFf0^+O%40Y]:`Bi$tcR'a9Wk<AGVIIoAo_"$?Dmb^g>0Q"s^qWom0="0Yp/ueGubg$X4@89*gFlN(:W#7!Zn9cOFY]f@P
%i0e@=M*:0q0d4[XX_muTPW@?h5q2.SSLO]W`C,TO%Zu>EG&.R]P^kU!C=;O:+4A*k*BQS6C*n%u1`F_&Un'?qSXaei5KnpJ;\Y&E
%.AGh0-XF:2Xqe_r-tOFi@Z1boe*rRQ7%elP/N\_!4B*#PNs#Ofg"-)qJm09eaHHj#?^u>=.>/ZP*Z%1k6'^qMLPE24OG>Z;Hlo33
%.(Bf1Yhgfp&:he93>s>=j'Y/dXOs9Oei;>J!;3664]kOPN^F>O<1<pZ"6ci=fU$2H&Kh:"aeg[8c!C,dMQMSgo"L<aF_R-A(9GP^
%)[@SI6;/8g46+pN/]haQ(Er#192Ke`NA*7J:9/EpJ:.F^!1Zj56O_'g*t69p3rM`$C8[@55r%AP+lcHKC%Phr21Q?`Or\XK*^r2$
%]FEXP,/M+7\aZ9YJP-dk`\`2m8.uC"+n_LAUPN_,'S-N*U(!@%<HN"d);pp$Ib8=Sn0M3:&9VjnN-KOREQW(AJe/ir'hM-tTi0-I
%Jn`c9PM*P>*e=4oXuS2YXt*Khk-4'rKCQSa?_Xc[&8%jZCd[dZ5`u[P6QIbXE;1A'*1Q4YqKN93)M&c)c<%B64Ct)$XqL7jpgG2Q
%[ZP>.F?AbZG,B.F'fIc;5Z65uc=[tD,3d5ihdJcb1(Juu#D=cR>>T\af;^tNZ7Jk8Ggb:sP$:!'U#`f`=\NAKKESR,NXS-S*dhI!
%WZi&_2-]i5.i/X"]\C:VaDZVtC!qQ^Nkh>Z]PI511qJgWkX7?8lA*Jr'UPr!/Sum,dcH$"_A($CTqQV,;HMi:`lqsTgH2?;XBDB?
%:ga`&3"&GL>T+014pr]((6P_K)MOE1!g$AlET#2A&LIjZa:';1:?,O!RVGffk[Q=CAriB(ORYfGS:g2A9IaQkj0oS^R_K3<O_[em
%GY4B3#AF:&&`41TW"Tfpit)&mH:#Vo#q:'H%:5GCj>Ao/j\llO`?=+p``8f>(rjnpZq0d*<?IPCnQUeNLiLJ)4%0aCqqC.@#<$0I
%kc<g/:jl)9me.fX!7&VFIdjZ=fk\C+PhOQDD>E#X=I4C'9kiC8me*k?N.sZR&iDncSN$bCYJW%tIL>XVBCns/^nKM1cYor=%g?n6
%\ro:-nQ$%E?@V[HhuDXkEO!9*q#K'lA35X*OT4c9B[Q)OTEXES8YZbIL]Q,HhYU\(RU6F2oXS=VF<R):QThtl9qNB4$3!"&U06a)
%7i.oaF.[lb&FH9@m5J&IoBGL,-ubiu,,Ud,;t7IedF,fpl#Yb'l];-E)H^N;8gr?ip2[RmaKpu[`:':&I)16n=N;"1^4S+KfcLeQ
%(C9\O^;I*VGJZqX&(humhZ!4EZ9e'%'P^Z/=Cgd(*+m#u^Y9j`l;hGFLaqZN]C(`H6Hs"W%oRJLI@hLt=ffr"!gBHW'@`hL99,".
%mq(TfS/&H1pLU>]h7%jZQhpORE,>4K)rUZZJ,-]Hg&XjcREjHo0)3=^[h\IN$i[B[oso!Hn@$j,ZIJQXO"+8m;V1*GFhrR4=6fY;
%\#oCIV0?/,<pf[.^YI#mYP.-Vp5&Cp^7US/per_hg_:\kaM\7oP(o1a-7?F-@*Z>P*h%ZBY!5A+D6e8Y"J7<RqgLS0IB\S*&a1Mo
%-LQeKqoC,PZB.qSk__ZA0AD-P[OnE=9(N.SB%dP=bs'q$XY2$hMi%>ERCJ0$?^CQEII$X![=3Ee*1OXW`-m:Zn7(CkR(/2iieA6_
%pDKC/On>_O<h@7<,:Cr?+ML<8H<ndW>(>hMQ4-,!!0>=5s7pT8fa""V+/-GU9\^EtpQ82*FWCR5U$T5nbHPj*J(pi'2o;iMLE!`F
%&MSGaE*j%/O#1fWjZZ`Ah*&sUI%d/S%`_U'Y\tUl"2*9q0D=enfsfiPC>Ferq]PbOq('[2NSlr%fHi@V5^$d8lD!HP'M[n3!W?'+
%E!5r'^]hI@Vk_oM)n6u`^g7H)(BaDo%GZ(LK<;GH"1[b0j@)#f_>:TG1Mqi0FrtV^p(n\B`Q%kjCtr%*O/7;Lhsrp;lDFm*Z.04U
%gdbKH0.-+FM>N)UmRO'R^=]sQe].OoVC+Tl[r3/C8AEf-X[s?gQ<pOne,Zb0.[5t1/:oSYE&hN0';.6OlnB0KYS9Mk4lDhY.bluY
%Td/MX<D4B=F*DPX._$8jea!EY";b#CBLGg_aEJ@u24SjgdU&Zdg/WF-SCOmc.54$N:tp^kQB<jOeg8J53BYhrZ41O]9@G%;+Hh%p
%h`U6qf-X!*mMlQ^S71b(??Guj?6![[r_5%6%0E7ol[GL;\Yb18!.9\c7AjX9r2Ot=c!L=MR)bF)^Gb'*Jk`0<#,1Y#Uk`Y`#unFp
%6+[kp(4B%P'#_fK8:u:i/%UfPh(:LQa9&</ko"'bFV)rTKPI=>:_IZ,UGcI6)_7SCXfVQlrlZ\DAZfJbA![?snVp4[W,T)QWbkoY
%lL[nT"L=(jql%nZoV94IR$PFQ=es^.Y^$kLJF5M@=Gd[PAo2$PDju+aWu!'Hj<-`_;YS0igq[KAV0Ml#gYtZL)LrT"-ld*q!p;+s
%Lr9mf+ci8`>.n0N#-C+8NAA@/P4DJG#F,N7d`0IAPHi1HjgDYKAWoQu+(5Lt=AFB`Rhth)Jdf<X:1td8]@/Ja'oO+JI^)\^7*0TU
%3-HfF03Q"Zg6cEcgp_QC0/#_54tc7be`$TdkW!ttrYBht[@EX%Qd.*roqKH_p#/HJ^;+t5f*h[M;RQ04]]If\@,^%d!p!Y'^c9Z[
%kr>CrpM@e.='`HULmrC%Ngq*>a$]gfSgA\fbVtuImtihe!_<-!!G+?m@mL27N13u?(,J`0=Tr@biT#3)Ic?sQ6`8!"A]s_&lL+Z>
%Tb6V.Wh_,(n3-r8_#ta?GP>j*rVCqdcV"4d&<VDqp6a#6XlrVB%&EqPka!gm.5mHCDap8]SRC7ZI:bq4$j!3_'LpkfH=IpbH1eeu
%<\N#(L\KT[gS6/HWKH$<]0GNG7kpQ^17Au`*:nIEIjdZKJB3=mQ81eO.7Jn;>[apX-O07UHY;@u`\p=a)0o\AdAXYBppOgC06uK2
%&=bQYm)l1>*(5A=D@t%?p?k'GF82h\VsRg'pqU^0N0,4b4dqQ<&j<B<J:[loe9[#!R%D!cn,2B`7I_-jpP1VHB_>5_acH'g\>59>
%UM/.1=E9)O!a93A;RD8-*^iLqf%.>A3IHJj'c$.BV&gB>Pfaal0FKQ?C&'@W6WC)DjfE-=Tn:'f2h%*^/bCSEJj8UZK1hWbI*+Mp
%ZVBBSnLCAi^fQ)OkiVMAc_ZsL\)ZEDmOjZ]@OoTO,jRZ5;DP1fPTn;g\k6tiA3:&NN%LFc'S1X,V&,?ukM9jYcXG_S=*^OM,liNb
%g\2Rb:aD2(U-mH_,/9+0bUmnmA+3u`#K!cS`e([jGAR$EIID-?^l8>++g]KXE,V\94j4;kf8WSU1e3M'^2A<E@DeB\-9\a5e;hUY
%q:sX8j.)[#'h8i092NEof/RJaD_R3=g@^Pb^pMP'FZLo"col[/ER)?P5mBe(,H),5X7K-ua.YO3eslQ&qsi,V`u@%JSB_P#'AMPr
%c+-%e.$RR9ePp))"$-bR<-d/sS=/5UUc9Qg1@uhF_gOKUcY\8TbO+*9ph>"!a43a]5iAWAa&F*7RsPjf@3r\#Dq4mKh%B]+Ket].
%>M2E=*dh?)%XK+,:rc#"RL4@ePP`7A;oZ)0g-)fhYpMHEkO-&:!WE=.(GS,bGVoiG)q(rHILs_M3]?h%GpO?;-/D8KOF&%JhA/;p
%\-(.Ch>O[b+(C_6T[_)fPd=@W*aeULN0BJ<NUE[YUI"d/mo73i39?o5GMY82LX19jg@"'<&&iXYB-:kE]4U^:%D1la!I7#5936Dj
%d.<`?2dbdIds+nmddWGIT>Dnr:kV]$[FSpT]4Q7PXg^&n0P^6'"d7.&5Q(f%@7Q$hFoX##1GFI5%Xs9D9-6AER2ghd/d!.MNI!uo
%Pme>M!EQ!EUZn'6<8%Se32Hp`M`01dQmn8>qpt,7\j93]54q>9_ttVqr@8Y2Cdp_mMBsI%ijKHOE2L<ZQXqeC:ktW8@OpBJY)=4!
%G$B0(o/UX[W-9n@G"8Cj"0ZDd/h*`[;f]=s,61fN9lsV5[+G[fVlBa4n_Ioc([iMMObI?M=HQ!!^!kTbe-9b3.L=$hpUp;+mUbbN
%<bIL6S8PdgO0(UR'6729GC#uO%Hi:sXoq,3n$n<)C-@JiR>qtEP=/S+npWVE(d?@0aYm<\a!(TCQJj2.B%"/^&ro>%*7^O*<r2@(
%*leFE\!#%<LSLR5!EHZn(\msgWao[s/AOqa9=/\;W+;QD<-.)GUmk+IId%^:j8!n:!h>]nVhW/db6'aWbrbT9*N'HMIFU!>ktErS
%<q3g!<r>bM!KhBF<OqO/56\I\AXAWN)Z]fr;%GtF'2".>J9CBCWX^C@rHS+m\/B[<f':5#i:rnUqtgMtcti_^=^PnJP3%@O#pKT1
%6>X\cIioh$1h<Y($rM1)5@C(*;P7IVZNW\AVdhs02Fkk.2f;B*O<%^#oJT;8^ucsK+2ad7!Pt,b)!cbc(A()TF@;.]o^8g*b822Y
%;.Ll-K`7hql2])['b_9Uf=K(G-Jk&19bp#R1Hu0>"Kg3/8%V6__Y4&0D.0_Q!X5ou>)n,\7JB_&a]<@LPa!fI'@`66oK-FiA>MMN
%BIa3iJkeH<)$jk>-.opq:\JhS=2V-WM,R;s'=pX5O_1<].1$gML(KE2`J?O!J[1"FnY/q%<uD\:nPdc15J.6\)#B1,DQM6m0A<(-
%K,Ya;T/f:8jq,NU"nHd+A1e+DK3@?WAtOOm,L*ESp(i*ad-EX+Mn=dtRR%_8*KQ^+cZ:#2>rAOfK278bQ%Wp.h/p[q0E"WGe0B4a
%247i`-q@K?Nd#H"f=YpEZBgV93gF9k&!om8:OdV&nu9<`j.a*5o-Dk$#9hR%\4bbLF,1KkmW)E)'FkD%7;_5:aT2,Zq$adTP(kb2
%E9YKs_f/Nn/.fj13Y(AuIEVNKWuf=U3&crEXG.Arj'Flo4;r*nl^o0#"s\#Lop;e48?8^Z"<$Ka1'c<@$F+`EX4-\/o^G(&cV=q,
%T9SAU>aJ8anP*sB<F"mAoAeYT)W@oPhqbWiJ&G+&:[.7N`hr=[rPec^XIo6=DV\M(ZSDbLKJYB!8-<?%R>`mNKDUHC1]"1eri]2F
%&ZTHXbgN;_IQ*`#:beUdk[UZ[DPS,?&R^c]cm>-r5iHd!!](?hM`GE!kk[-bG]"[_Z)a9R-gb6seKdX+%qkH?([\5)fNp(7^d2Vr
%n14`YD_^M1!\R5Wh+Om+bI\)hhALTS!HIA[<f-l_dnV4Yol*k<(i!ka9[]s%mPh'2?JJOc=uW%^8=qfYhg%q.,du8%8hC<rl3C!7
%^^8E3Ng"W>mOG:@?Yo[pXSD'G<L5LqUm9kjd]D_:)W.2i=/AOtW.8j7n"c`7bI\)cZ9Dq^MahKe.U,tL7Mmt1/CbmpD_0FgIU3dY
%n->r#qA>^E)j=o#G)hUI])#651o>bc@e@OCI7=V&SumGp[<=2Fdo@WE"BYPbGtfJrm.UlfoVAV<l$6P-[(T'PXZiUW-1>U$l-op@
%>LgqK'g:gA?@/D+WbVV5Uts)@WOtTTH^tLq_N8q%[@)*Me"1*ONdIb5qj9FP._"#IV'6T.p&.JlMg%"eJ0L_0d&GUaA*VQuR]<r'
%W?!<R#eQo?%^jq"g(X+6nXsTuh9.b-W[F8;38ABD,cXd`h.t?4[9#<a(7^KpT="KO3`TKn]W4,bMNXU/qfe?`pDl-=C2O'2BXZTS
%m677FQ.Mq=!2`aFCMk\R8]n<plVA'oG.iPjC%j?i.X1s\!16euI$9KN(=#h*Q/:Vn#42]bRosuPpC[(u9N5rDmIb3uC?9&A8!G1`
%or<D^3#I\C?Ja44=+]\iX8TeJ`J.6,H`ON)Ze=e!=Ek!0otAl/I71aUq^H:XF^C?SZaBrj8Lr$M][NN%!OVd[PBJV2X6]Tqql+ki
%X,C!]-Y+cT%4Wm<[=6K2"\JE7]6:RYLjE&^jcMjBeZ1)VCi+*?U*_p\%CEPTPs50/[,&dPX!mn*HX!m$&nWcS,SdYgR^"fZd#_PG
%[oQ#2O/Z33UY3P&X[4Ou8Y)XolajQ+AHS3+0-8l][&]#[rH]ClfgQklDP3;+`]W1CK)(7*Ni\6P%n/==cLEFh7Xg8RRRI=p!VE:t
%NGrV)1%^k[3@"L!%?i[_$;OshRiSCo(s!E)fT,"fN2qQ7QWgGN@X<<!:1KOdA9lkT("m>*$p@5q(:GH2C*4abhX@;plsi#]0kD<9
%Ad8HsU2UfSk#4)E@?L[G@[qD4!K;(OALeb&5)OOA9b^poU&l?SjoRpEU+o.\@[;W"3420ckZnr0cs-'Fl-f!pQnl5hA;qK,i&o2m
%boN,B.Rg>!CV.hj@*,::crtkAc%Q"r@E5JH-K455mrss8ppK2M`o.u>V<taU[JQ?G$&JsOn&EkP6m_;V'Em8Fm.QFZD-]0g0l-G:
%cJ,To3W^X>S@<!h8FNW:EL)LH<Q7/)/KbOib$JiM53@kl8m]`r*>MhHSC:IF^@%H`HNt/CP4qjip[ND@B$ZaVT7,+@_rIAbZ;55j
%D'"coBCj"OXZkU%;@ON'IRj&i(+u#.*qs."ml(rd]IeqaD"^_"=<"+E\#:i)XDJVrIII&#LV2&D5L-!5Hek<*UY//m;=aEY/24a)
%*AVR1h1e7Qe-Kkc%7HWR\j+D.Z]DVi4Kb34hf#GSGpTMu+PbE>>6j]8^-A>]]AKMdphO-hc?DhR1KcO0_0E%7]r;(/7])G'-b7le
%>`beqWKl"g8G"BXA1p7h3oZu43'E:TD2f5MgUqXdE46LK&_p6#Y-FT'?mU,dE:F>uB+i?d=,g'NO/%#."$aga0C:(@NtT_#F<J'(
%j6_&i(A/o"ccm_fBB1m>I<o"cr0YZ&BJ!QGa.eh#I!<'q(8JNVM@-*)2W'^[_`Mnf`o@LWaCQa+2D:Zj/9Za$N2UCF/kVXq0'YUa
%7bF2bWi)aVprIV6D=QV:N,OT@krL]$BJ?.rP^le?;mG!s=bSDFd",FD8&gHJ:WG@HmU\_&9[FPJeN>5Lk\FRd:'XIWY5Cj>._=pe
%R2uV,P8]n12D=KpXJN'C7+@%YFnrEDA1VT3-Xd$tR;SSgEMOSS(OU&jdU#[a%?!g2*uA2fQS#eWeV[Io`!tBPeV$i#\eA8:O/=Ds
%DC./V<FnPkV;J7E7.0)).Dk!oB&"DrHpg[8mZ\^"RSq=DAjqR'T#O$n7o=3*q5q^2*`#QU@StYDSQ;@23\-ttKXg=24-bU]S[oZY
%-GN?'@Pnl;5\<"dmL<$"FiP)02-J9WfY-Gn"?rOU9C(WJN3%:P*,T"Ei3N>L[Mo`S9%hYO96PK>=EG'LZ6FIg#!(84V*C]fnl@`=
%]X3m4\I6ffE-b'`.%$H*i=2dD]8.XN0bpfd,#,f>AD5bV@p$^n$?ejBn`eer(-B0`[[V!d4'VRHqD`6&_Hpnm?9F#tAQU<VM<?\C
%TNSRTq<M>TE>MbFFgL'::(O*pc2!pW>.hA+ip^M+JkCsS/)UYUHLR6#;35:;ZOpg)5c\jP]\oY7m"EsP,H0!EMa5J9JR#[b/2XQ*
%2@1%S2#;)!!-osZAD6#fDJK5(`pKqKe^2Z+X&/YSds_OscFW@Qg>_.0lA"r^ZC8_^;XK&ROcp?7:W!=aiuY[NALFiCTA4Y?UgS<a
%9+R<<#pgB)8X^M:LUXekTulK-B#q\$8>$-n&%JJDFhh!i?V-C.J.Z3dRA/"]Y9F_SJVlhS&pG&Pib$Ot)+BLc*82[$O96)[NRt)s
%q9[Le9O2#g9[!#l7tQ<,s4uGUhqN[1R&+1%4FC4nJpYL+VEH5i!^p"JQPGA3<T&boHE)l)U!cKk\<C>g>4>T@6i&#IQA:a=SrY1:
%/94EV^F.:k=<[d:`D83'gagGa,GfK;;+AXqA0-2QK6c@a2!!;uh;3e1Rn1K76,%rAgmJN^'?p36Y>.RZ7lW!D'V=K;5I>m$D@<ol
%KJb=ucBTI+<(MNq'1W<QeHgR,*Q8*#P;3%kNmn5t;YR-gKBgI<MLc(a537?>(t$@%+='5bKMElS7l[0fT^)IV7lV^ONY"1+D$R!7
%'8UP4AdA2U=J21N@(7o>h18fk7*J$eBl"WS9Z0&>%(:q#(U\=4qO/LJ11*Ok)rs*Y_\L:A,:33&km1Z!W@NpcQs+_GTbt@P)&E:n
%J.bm3Z4J$9Nq/6OU`Q[0mMXI5$G+WK:!?,V,gsENMg/%;`>:S^-Qte^O9F'aIo>)ra>H^*J:u;Z?Jd%CYjqQ]lr(NWmTtAg+&k6@
%*XR)F755`X^WEOcK]5;Q*-t^"\>/AXP8b,Y;#*UBPn,Rqmb8P5&`LI>06HChnd$)D-E\@`&[70NRGj>moj\udV`bTu)VW0u,-1-!
%,4GW2;^O5#euTP[J<:O^dK'WE"1<NuEh\dPTSR/0@,d(1V#__>MHJrcL_R*R'8dg':]',2*8CDLe@gn.jRjlTXqfnQiZNr4-q'C4
%"6!6"$`FB)3^pq;@`^J-)BeE))k(M>C2]5lcE`,JPBNSoBS\h';#/<FQPf$R8h2`WF+7\Bm=9jfm!USk6&"190Q`YU54;;kHun$,
%1EV?>Xq8fh:2`6i\cEXLC!UC]:c?AR<d!Ii:n"_aJ><\A_5Jqb2pfMRm6:,m+=`(CJ:a6*5_jkP-YaTm+f[:.O>I2JSlOL6_&R*m
%m;;AQ3C9M>p<`4`+,JoqK1n58MC-Pi+KuG&RCoGP@0$52lDZ8pgJT`0b2SP=*419/H+><I550%>Jon=A9@:@5@*[<$j%u)\FC1,S
%72#ZoMU"s0'Y5WG!YYiF_AJhLZd4"=T^R:;HHre8LhA*ZR7'KqAK2*n,="QCqCee%Yq6MaLWJ+7!Q9duc]N(Vc[?oAJ<K;Ul^IO!
%O/o;[$9uU,LOu7NXrh:Y-@cWkG&E2fARfdpoU1aA:.#4>YS3P[%gb;2E@u65)X]Z[6L%"9^9>H$2!c_Ep_q^NG15f!+,9J9H9/s3
%7.AAZ,[>ZDIRp:g30C9ZjZ"rTc-FQF\K3O#;B4l^Y2*_S&/iK+[^4=(,&?@R`k;su[W=4sOBJ:*p#B:]:InqJY_AU;JY=.=II71<
%p`2EQ)9J47G9Z=dZTJI^6&NYb,>ocioA&]X8B<UY-E8sH#3UT8]PI5/O$gadV\pa%-f14C#k5lWlFE,n=857]Y0st7"pp#"/Lhlh
%2'>_6A#)*)G+\Rqa8o@!)H1Sqjqh)L#-<UF:iRD.V\Mb5(GR,i..cM5ad$jXBg>A436ocSZd4%>$66pc%WuR,1_g%79]*,U83`0a
%Yk6mQf<C9&lO9U+!aCq0`9s(Bk2QGTiC`jD!/!E`]N@LHHT+/er8o\nN(UnF.&s!Y\gPM!Vdb2_k?8fpkH<WR4qJUrPj1cu(^S.&
%+FduA3_i7Yq;8-X-aa_Oqds*#)4?2`BFDd7EDP;:joZd!PcOYC!DG#T1Z[SBTOFA4`jVCm/^oLkW>0>=;e@M89[:pI%[UJ%c[?Wc
%C?s)^2Tc8,_a2UCYEpqd##kTSnC-A^gb.O!e.5#bI^l)`<hK73LkAugU#<S#$BT_B\fBS$pOa%sE2l#BA])!eMup!Se/>H$@<gTc
%qom(]pS+(!++gf?_@NSX8MgahphOZ6XI,8"!Ka15`dj1CEtYB_Zgbl;fk3JYi]Ir?SEArB0,D-*'q\091>kZUlY9C_TVBl\>_t:T
%TF:>IL.esjoskT#efo'mZ==!(HP(e28RK'I\g$upD]Z?2AiIjd[+t&4h:O="G+\Rqj>^%?i(P)C&cF8%V+2C-]r]X5UsQ4d%Aug3
%_4-AND6k3dII=uq)DA*o7foe1;)"/*8U<@nCb^X\Rp$ko8.j*p[2jWL+5NqF:>1-Y"2VNB8O&5o6$K?s?0i?1NlagD$I0-Rb_Pg[
%Ta02Vna7!Z);Q.2NpT%)JKSs0ITnPN?Js*Tju`YahsP)+7Nm'm\rfHOQXX&iXrBXo^<pRW#&pH.qN"Cp_^mV^$[%sV$t;W&iAUpL
%Rm\t`S=pn\?n",ridm9bn)h"5B0HlI&iS!3WBc\`,:ZcP\l]t,!d,K:2(d[-)XLP83$/'E(rl<Dg#kO-9SlRAD93nGa\5(SCn?;C
%Y'aYNr&WHKG#3j1=qllj\ngr+NrlM_fO=&e]Agdff=<Hj:pSW5K97Zo(h0$QR?@`XEu8^aLM!1S30^.^>?'k,reIWm%Bncg4"_mm
%lcDo<B'C^?OZCmP`&TlghtF09pH`KF\9>"Y=hZ+3R5O@H_1Q8.AHfeqN%4MDF^>7>.aLamFBapHZ/'%V&9XX/i,%^&/r?aA":Id_
%"(ET.E_LZBRg+"R"XNpu-XsF?rit9l4qJ<b[S2"H)4>k\0[SoH;\El@gW"aseS.W"5b!a`/0aT)S1_T1`t?2D[JJ+&!@/V,SFN_9
%Kc`02Sq@2S_+*gJXH#DjCN1Qr3#EQR1!i6l\EFFi54a?@5o:JT_8SS:AC7ok"KFtJ%E<P?E<([?i.L'$NjhAsm$;.fc[?cg5VGWd
%_!5TQ@)S`6:8m#&9*RrRfj&FHh%H<E`FI29ki7-Xd-`\3#TW[uR![Y[=]$s7eMZq?jg4!'2V."A2l_SjF>F<Ad_Y:]o@W>L*sU6F
%0F]_R:`bl6a8leeV%1Hr(OA:2*@<CX;B7-_,D@FIn:R&*f^:O;Ll,J&m%Bl5`f5\5HN#/YW;<)3P*qFM."se+ikh2G]T%q-[.'8k
%TD(=<6?C!,nQ3L#_a;<$j_GekX[Q`W=eMb)@)GU)S9U?pgVT++O4:*n:Er8LU`)##NMT0/Ibq8)@7c./=bPQLBU%W3>@8OA+>M&?
%%*5);-!nij-HC>b4<&P8ABuk]@4o$66W7&edF.4R=d5:r\6%uh-IM&"nU#1=0\[8ua7VC[rqWVP]RBh5Da2!bqjC7S&V'`Fhd??Q
%O+7)pq_)<)qX:UOqs8O15"1`+/gWG2pg(tSe5,-Yr`/q!PT.o%TCY)-E=+lh+922ZX6[6%r9O5EI/3FOTE"X=IeUC[jZ[t_TASJ=
%J+[OUjOLHJIfI11\j#kHYPq87YC?/bhqu,4olGKQq%pgGqX(=Z?N%nt^AJ<iaMYI)]Vs"[P<P>%2#6f'BH)>.WHQ[i*T6Ei3q2lN
%]RBh75C`4sbP.XDs-HfZrq>r-Ise<CakqO>#C3*EjOHK-rVBn#e)t)oC<rCWro*6GTE">KYMOa,jh"TdaufU#4nnr:1:#>*R@H32
%](`tRqXX%*s$oS9I;Gb$n0BA.O%c7+OZrNm(U$#N/Z[LVImg?(&2AjIVb_a7)gr3GH1K=Srpo>Qe.6)XHN:CKdcKEFhro.=aQk[C
%n&:AZ:94\'B7KmGcTeq!QPpt6a,;t5ON:N(RD[S1C0MMg9FAI6Q1g0bb[iCfY^g(Vo,t<sZ@;sO_Kk*Q']4iGFM$5ioGUu)2u5"-
%2XC9W9L-<!p(B)RY96Fc:"PsZ`'KO7pC]?bN+Yj7T@\'h^GDiQNeDoHs7?fSY+`j^Q-N5gS`m<,c+f8R?@a#iBg;duZ50W=k2TtE
%`YZDibr;9jHO5=bHGc/>!/Nbs4gK4lW%KY1rLiKL<(m"tWX2T8X%(J!51cF-#.S<dO1h]#>G(dF4+=fnLYg\NG]()GloT.QIt(sK
%Cf>bBi]hjD:4BZ8pgfUc^\H"@^G7,5feVqMcQ>=1m_0?"7tbBE5;9p/WR^1GFb1-&CGYs,'7?0NII:;epnOa1Y"`Ib?Ac*>E9j=\
%eWcf`=10n_=ZbjlWULKbe4ks>cll,Kjp#c;P%p\#],rd6^XK1O``Jn+6-"<t;jqF_,5<$p:0BGZ?)sh6r2N2n&Ft/_0SE@#2#*5e
%>8$R21iRXmqu^].K,kA^#%F50'TX`]q+82bJ)A6.SJZRMlN@6U2VM]!PddLj,e;p;kQL]?_5kSq3A&h^,./(LH=:l?B_M"8I;j$Q
%;hnK<Kg&,<'K;Q1)"]'7PjCG(J920`G$WKRUXB-S<6ddfDXjWi!4%u>"I%`6^?djR1G/^7f<1Dp+ETn@<Khk^Y<Qml1iiZFJhSlH
%nrS\P4P>oEEdKk9em`?L"`^3@]SA-`_(%j'_`[2Cm:jVu>m`!,S@6',k<6KJ(fhZ8:rJa;jsFs\#7[Mk&BQ7hModD"`iZD3ar>Q;
%BA"n^]XVVs<8eeT-*8F3Mjiq]8KVm>>B#pM/qhqp:ZGp2W(aklF<i8Y*=LB.2Zi-Y^I(3k"Au[Z!-fabPs>mAN4<Qf@US%B/oS1B
%(pPe;756rZ"i3$O$J#t]%;F3;h7Gi;oYojP&=J@.@W`#R(O7%B1C]tCK;q4:4&dIME?&.`/%$`+1lEbA0lS:.biXX.,2QlhDc1Wo
%^2iSXO6@nD:ilhEq2XmF5:s1WI1L8B\p`g.>bYhSZYV>?]B/NWTpGl)$SaOkoMsUfY5tB2l8%&$q&EAu^70?@Ih?YQF:B@&[J31j
%R]h6q\t=KMV-hAeaR3oI<RF4GUlcooK*=mqW'7n5Tq<m=P@gH28k\GIMQpj5VN>6.EkG&S=h*XY&)ZpFUt*Y$@DCbQS?UHOlk*.P
%48UI-@l(4pWMs!TP1hTh`jXQ5YV@>HQLq6)dpO'od6iNInuGY/&VlPPk"MnL2#EN7jDd6Km[^q955jt6kL4hS=$?Tbj?Dbii6[ki
%lgkAeUSLtNW8pqm5nM=Pr0/bj>Ypu14cEo\%\n3u)$T9(l$Qt5N0j!mVA%GD@"VaWn+(P5G#X#OAcV0.kE@-<^I>?pS*';gI^0u3
%e8@;a8LLCbp=R$lkCbje75q,&pPl]e4,a'eXP__2f4Q_qN<pVj[Id-n?lO#5ALnXcjLVuc,GgGo%G11C?!8.>&h0G#!JKdf@)Ita
%"tS"d!;+5Q]7pjB@h9n4K<#r7DrU8D1]r+B;r[kB9i4505"*@e"U(pY^ir:JZCk_OJF16PcO^SOUFhqa:^+@^5\7'7[WSQ<]tqOs
%S#9uQ'n%'m7.Ms2B`e,=7BO+tCTTshFo=cih3CXonY6XkNg?Q/E>Y(9d:3k0)G^WH2g%7a]aLYoO[\Q*qc-&E[&oD;b7ItDmII?/
%V0A)5,4E_d#%3$oMpO+q#_7dKT5!T2.U)[15F[J-)X!G\U=#1B[m'.:m3?)90=PX[U"_E"0EDJ_rZFh2%FZJTSnK]-J(RmnEEkC\
%'I27i[dU5bOAsKJWX8aiZ4VYtDk$uYf%bXUAkf,'I[W^DkcUCfJO1VPJmD'0Qf&/D=*%/lAF8pZ,a]ks:TNRlPA#(!ppCXdJaI"N
%^21U^YHonO;m7d0=\R3Pa)dMt(br%G"Y'FEqof):)A\%>0Ba;<!G!o,3C,CtDn"nF!f#A$HsK/+q)UYX@4:qd0.HfBX>+?/J:g![
%&P]B@Q(35D#k<&^iYCdsYUEr@9Wu6kE\qS-jK(T""=KMQfr7%B'jfju09uW-8!$Mq1*7%=a7_1\fKZKbm/D$brV5!s:[YNi.>/5S
%*^gcYAoIcS.Of*S9=K_8JFFr>Z\TS6BVqjT&o=B.=_KNT%"qG7";-472Mlr[Jm.-t=TfLTZY,Vk7&'\&ZYNWCdF.4Rfc%hU.UdeJ
%.U'E(r8%Z]>P5thHEjoma5fP9Rl\fFl%n*H[ToWLJ[[02#h9tEr_3ZSBN<tn"4dLI%W:rRh%pW.k`/fS('+"=m$Tci.U%#\qIBWH
%2S]^r![(o=jBEPY5QHli^"u/$Okam$RM;CFlum8p*8X\H\[K3TTFDL\Z?nFR;)OmmYg].-%2E3$(s+h1kR#[Y:1iNP-<GJt\:.Ts
%f15Vs0,E0[,S&r<aOI4*J-1"`V.&W-H$g9kCKPS`HEq=L$BR'-7WV2`.#<&=G&6hc/u2]>"f:mp7]Ya'PXHJcP!3af6,6!H!dljT
%1kr6f`D.BZL<!>e_+cRTILEjN'\D7E$\<SS5o<;-e]qR#VAl'EOQ63feI0hKdp?i?&+)RB<GsBC%)G]6S<XM6;HN74)W4%D9gK8[
%na-e0#<&?.0hCj66a1>hEc6u!'\cAm(WVk*O*PWN>K3"W5TB;Gh?f)[*:Pi^R(F!@AH=no)X_)9!6^ij$jrA.:Y*VSl+C5Y8akI@
%hh4'k]HiJYU(6I^P<RippAEnYZ/`LQI;%VeA:+`:dAe$=%6)\Ij(6&3V^*Rg#2lrk`opGFAbe00^?cXu*KoM#M,2[sGipA)L*GXN
%rRf$BqpsM56NI=Hc4ih9BqU%7R8eAkJ-',c]i/WE!tGT)ah`lD?jlHRU3:(<.'b?PMR]4SM&8K_=nFl6ASVmNB\di>aLLBQ9.]V2
%_/Kfa-[iWjmJ4_R;*gkno*=*VCI\ZtS$O1`5A%'P0bRbde>d4:RB70\I.K6/%FgR'-MuY:,g+3X`T(CjU?ll`JsU$F?0lBHhnRpP
%:-W=Hi,P4S9Y+LB<!m*MBVqVBnHe?A+k:fkTQA'i*XcQ2mW6aSLT]Lis&nTG$b@+JdYnZMluoJ;YniAe?C\V3C/i&FU<.)i!0dQ3
%R9e'3<U5&@rijI=)LXA^/S*,c'sl<@4?sgkNOX5SFm8M>-Qg(`h.aKfcbj2_>?G=3.+ft/5!2"!>_.RZ(2:.56.]s(*LhH]gS9j3
%TT?80aT<5XVNp\HEYp1Iq0@&2nAf.5d]bjX`ne<AGL)WE^ZKWuT-f-Y*]Id$gYA0]'V\/l5Sb*ZWFjF\O)!04&r<eb-]q3QN,XdC
%KW<B"k9fhXq(l?j1S.>nXIUe`IGY5n=)1;8BYs][I<(>i2Ws`rF*tR-:UYgG%sHBX20Cl;YO=P\:(F%g;tJb>-eA0ONPBN=Y"p(X
%)j;%3F@6_(ALc-sk]TVHI14<R6g1u4]N5?7-'LaL@4/mEldNYeN=JM/N5$cHnqtgh+qMjs%8F)d3UCWoY]>&H_:DRN"f_94am(7#
%ZohJV=PD<<m)"mX#p_"0e065Dl*=iWeYkpE-H9eAToO=UZO"Z8_+k'F#,"[6FA&/>KqmB2kZBIiQ+pu[?,)FBP'HQ`36NEi1?>rj
%_S+^NbW]\Y2mR1\K3='Aq^dW'F@jrfoJ`H<o?^GS'iL6oLmjLcSXr:+rO>j3hLSfrNr7Cj<O?jnHBe?oU!Kp07&)!IYC4cog.,,n
%^Kdf;KJ(drP!b&sc&Fb_q-3MO$F#2pD68nEDZpm4_aYoOZK=>6C\Lje#"uk[5^K"j<O<eX_=cI_RbBrCW9bh',gkAKV(7I;lLXX!
%?ia3ro1LFXkfWFB+-stEZ3=UDi:i@&#jc4VCIC@')4p"8"kF(PdGLA!2nQ'6Y[%P==W,(JUc7n76UqX"m-RPp4^uAAn[g#h&ZnRi
%oITcI+q&tkP/&0fQYP4h(++k`p1bD`5l9Z,Mi\*#(:@6dQ9?[lmB>YRaOkVC0:j3Y8%[]tH8n'4kJ<=J<,.A'87C?jYr,<hj?]-d
%q;kNOVff!;&\)O.QeFZh1dV`a3k?L8W6>>M"#j3g7!4aVU6Mn`j`;q%!!Oq&UQu;T.m<0&hft6AcQ]m\C&;^5'[WFW?NL^m33"pH
%P-r?ZUPP>M&YITt9VTpuj4?K=fQsOMGd4]kcR_D9o<Vc#'_-%'mE.k$/'t0b\-m&*bIl!U!hL7'j;CXm!3=+6o=FK)VG($)\Ep@F
%-=S2jkHY7mdBZj:7h^bu_=#QlT]atj7;X=B"?mGeJ^HK"\J[f^.`LQo`r"&WqDe78M\]1B4$[u`!M+:2:.Gb:](`+r_CGZiP08BM
%*rpjVR?*,gDEQh_I^-G4bVkgfLj\e1U[)DF#uO!M]3Wmo@&S2N4()A$#cF_secE:Fm%N(m\VC?XUDCO\6XI#R+Oicj:NJO%P%Zo,
%66>#pEA/*Ao%HaNU]PGW/j):I#Plp0f.YaKIRuHfd<tRr]?fEX2\nMZo`Mkm2OP\D,tLNL*G?=0:e?j;8d6(t>,5#6^q.Ch^H6<,
%.5-+c>$R6`0c!,-U/\ls5-^0JbLJehoPoEk5U4Q%(^KCo%DV8i$PNk+hjqLG3D;2e(2pScdf2:MXSdZW<<8bX`\)@u415hlm(cja
%^&GpBe6ljbgBDVE3pF'eRK=L=TKo3lQh4fg).4@Il/M)E`ucOSDDuEVpJ-'giKS.,5h!`DXW_A:)<`uC;1XT*S41\C`^jgac&P'@
%fIM3Zd]C=[UnHC^@RLG?$D8uCFRf(=ol`(X?;.HCa+ec[P"honF0O'Q5![8Z=g?&<bR0OM[/NH]C5.<ZeK4?JjKXmIg6n`C"mGnu
%/e[+]XC0!t+:!$Q732k=-f)BtmI\BX!7R)f6J@un7rE\s[>KE?.ncmZGKC%5k=BgK"/n]p$lDPi>78PV+He=_R(S-#b'6_!)m.(&
%MnuCib]k^._*u$Uht?L4[,4ZI8U-V96X/:t$#0UY4YcY7"'?Z^.FTsF2']>RB_4<`dsXaTmf+WPQ2/T54sI`I]=/ui17#bMeVdAX
%TMQU9*LOrVfs/$gml^=olb)4*j>^B1B++(%h'Y#.Wlm;\D'VHk*[=EpFc)+NmbVkGI`K(,<\L&"j0lFa_G3O=_uh26N&2g,\L^:]
%Xc9*e4536FG+ZV589->/4!5L1:[V3G3su2e<N_@d_oY2cVV[B95,C,^S;k.-BC;?Ehg`rI,X5!9iB@1d_5CFVg9RQ+8fMq6VjCq^
%)+n%ifbO2h*(23e\2I9RPk#+I\=,"Cm`^2F0n)fB@QPS]XFhsFIEsf9f5)g<cr/R-VtApn5O?b_q^2/]M4a-h)`,M-[aNQrg7One
%pDbq9kL%PRm;::bjaL[q+8gZT;b-AtUjP,@ZWG%IPW##?98`!DUlVZM[Xnrt\?_<U@u+.L!K;73,@$jq*,]jXC@P=ijF$W1GXEB,
%<Xu3p-EVT4g_Bo&P7tO6[*o6IB8B_><cqE;@0+e0\73`ua?9t\^lbr1kt#U683&6PAG/[eACg*L0W6<kQ)l9l/f#0:`Q?7tlb'BC
%7JE=24=BoAH'440MKn^H36NMa*E3nX:GpXqR^4Rnd4%3o_YSE<j$k:Ua/?4,8oFeld557)U]>?pMbma1r8pies)C=<*:Jt\$:t&`
%HEr@X*`(*+^GY=\+"s$MUFV,'IFtCM$T,oIV:oEj&`Rb.A]8/c/_A^uHeVaW1KYb<\,*HDi?G3pO4n`CDq&0rcGGm87*'oAq6rHn
%@Ol))K'Oq;NN=PIUE;k/p31hG2=NF*Q8_L3d?!=s5&C7I"Nn^,rqd#h^Pc"rH$L@R@Obr6SuWPk9WN>g1cr>-9sPpV;Y8>L*g54:
%OBbR$>^1d`qK?qq(;TT[&(jmhS<EKM"C]YLCnLq%LN'*V^,Y*FQP(m75q/*N^i;=EW>K9iJem\$0ZFA=\A"[cA^ikurR!#Q0ceOL
%h0Gr,]2E(=""M<',t.W=4s"m:*FE]jIq#n?&',W:\]oT[.>1Lb1+A?,nQ5RBcBC[l0nb:a+RP_5/#`FTY]Fc\F>-4/M]dgSbc#:n
%Q)OHrKi,!pe]"D$$=r;8^(Vhb-6a99X[rf3mcr?V'HC<'(ThW"^m4'\>5)r%*GX7R;5?nrO.HeSXW[(GP!gnMPQrQZ:'^<Ef;8o%
%'&3?$nVJ@9dbeWT28ILa/$&;>);lFm:<NGIj@#.%]V1Qn8\R1HEK\9>VE$g6-6Yq(`=Q@F@\'Yql2!k[YG7Br%t[?U>&.Rk[]AOU
%&7XjB%Q?8/,Y1k*a4hjbY+'NUBhBYqV/UST`_/h(UWSA42X3)NV_d4oN)d6cg/R..3sn4f=\m?',"Jh1WV=[jDHk^2>0MB\(3ODk
%XDB9m-LLtRB=r/H"LfMZ4S[hab](N5/"'oOpr"572Q&K>78%nFW/mrBec;jqc1N\Y\V7\[=/$??b28[b9Vlp_`U<7)n5\KDpdnA&
%dF>S3<="gR#*pSRfq]NESt,WZZd>UtFWB'"$`=>Znd3]CZ#<KQ774B_?j>`7&:-(k:h>2X.ZOicdb>rW,?4Nc'sic/mca1UBdNDO
%.6,Mon=(&uE!s-m8r;3:OsjZdK,FYOaOerp5FWoH5qi)O<JY1WX/.!;HNr@)n`)6-fbJl\/o$;"ldQ.S$n7qroXgqMpcB(\N`[V:
%J;f:SngDuIanPks+7N?/e4<#:&;%ah01a@oZNOEqR5*)\fK^h+M"=*g&>$'B4=kVG3m-#nQ!<W'[4:-l9O%3Of*-iUga-(tLeUe2
%O@,&AiUd4S_Ul70%j!R7[L*,8%2l;(#[N:uHs3iOX@9SEEF:G*fl/.@VWB![gSoj&-EfrH%CA(bM4#>O&28U2>qp,dYm:(r`g*=k
%7(eAp,RXHA`psJYZAERJBG?[\9p.,4/95[3_@C=%`sDW5=Fp,kbo;a=#O+pU,R*!=!,YfFO[152W[PM(k[b)VosI&jiP:NW;'[UV
%(P!`DqsVH,^#ifl-j'Vad$p"KTq#GD7p[(tDMb0>U@1(EQd1g8JpPI1":@k8!FA/5#FCqi4;aXPe<*<0Foj2AN"4)mh&JEEI'B6b
%YpPC2@imB3%k%T!gdqRj_)B.[CgcSgb$ARa!APM\7D.G'"S'PUOZbq3+ooH,c')K-A["*=-#[P.DUM/ccp#X^La5(\!e;cY1n#_i
%b-5.B_'&s0N[@k'66K(FbeUmTcKl11E0BTYp>Sf3@"i`or9A@-9iWtaIESWBY\J9:T]Apu[0i_5?#(!Q)6eM-h4NCe`=7"DqDoIg
%8n88M1'KuH8dYE?CmLs1)W%dtCm&0Q&l4rfR,9SK3]/3>K"Up>#@;^epkZ(gAci$119Y8;PY\YqJ;hY9.h>r&]h#4YOMlnD!VdYA
%!%M+@'"%_8]J7kW,+e'cO3m]:[5*cO&N(CH<M*Qm%3_Z:KeuG2JOP""dLmcEURX&`X_UUuD6S2hG)!Q(c&*EI7c((?9Zs0I!43LP
%*">@.O<0:nnN0U*HJ:DPZ!S39A<m9tUu?;E-,sIt)Cdm4NqB16rGQpHoliH(+]BO!3FBCrTnG-,b-Hf((!s5]:iN(r.GAcumt6"D
%EWF!Vk^'aafN-C\(9;k^"11h.RqFMAH&#Zo"tcQIMrpKsnB!_XpFO6oH4aem06J.grlW5W(Wk[s)1!8t=b'DVJ6)`!8(UuJFlke!
%&ELbQ7AH0'jV1BC0fb,8T`p+':eW8F0#ek\#COLsZ$O;)$F!*&$#ajlZ=FT*eUabWm)mO?'7cq[qaI%jqb7;N%4o>M2]Bmu>ZU3W
%8-0Ga3FEYk,ZU.b!a`%H9GJgbaO1^\LWHN"?^SZ9_XW5DET?c'_(]f3FU--O6^hFN.KRe>+p@RJY"\?A.fDoGHD>,,h:=Nd+CH\,
%AdJWM.*uTW9$8K',bi4jM[8P=V]()+1^aCPV-f@6pEmH`W=tl#"i!G@`C:K&&UMV*9j$ACMP3A0*_j>J\8_hP)u1F<guqkU>\Zso
%5kPeD130`H<HV[O@s%C"`#GJ?7c4;CH)NfXa)<ABd?uf1$Qh'Y7kMs%`ki`W6JB?mW]3:$4956J<_Ol!=Da.!k.Oa4.M.QY<XGWK
%4jHRM6#JF3!0=9UQq7I7hh6t60$%%EX2ccC#51Z7djjUd#r7k:,fIQ`m3V//:9>tj)dIr:'K]"LXCn!G[*h@Z"d\"O0jUZDabef>
%Js,o+e(m[[=jD^59X08JKV2F3Rd+-Tg*&9"^_Wuk#dP=ZWAHTi>'D=j%gM2S[up:;%NX,V_D#CXS[\SgBIVUlQ:_U1[(A6nFThnT
%>YlHaLu'5D%6<[7TaeLep!:SUR3gj!A!ZZC,4lA8nbm3:.XFJkUt_q[k>AR[a97mmm&[UTGYhls@5AE+X)sK>fh>Kh)C-1e";i%O
%`h]UP+!g_*MLgUK*>qYH=Em+m@7>XqBspTc`XO9=q!7>_Fb)WT2jsJA#?T9DC:Z9/Ud/,i9Rqj2Y-fQ,@k[F!!#$brq.*0>d1u!M
%'M,Q_Y]Pk!5jB&'9cAu#*Us0jT#Q\NF#&Zb-55>`=euR`C;l4@eBKk4m>;!j3>/m)q&)/jNG'!&132i3A3GO`@1o6:As%lAj7V(o
%MI\KqWDdT</8D'GE"HAkTfF+^X.Df_:f<['<,ZLpJYmZ;GeI7RQnrD)@\4o:)(Z-33scL1_h1T\Uk4]5T8p47pa)89H(tTPJ9"J_
%+H&q%Vr:t@.V]]KZGC=i`?YSO"eHYB5pJB-Y2f9@Y\hlePc[<2h@F##%]W`9q5Fhs?<Or_HZ57c1s!ga0aV8b7lnfD'HFV<lTZp3
%_stg\C,KK9`MH8lF*?,ja"p@,?r7X5GnM=/VUF/*Q9#Xa2ojME6N(pUGj5\#Jd1/t]1GPY!B_,;1-VX;fgh;gm.=uVY#fG#k^cJS
%IuQK&-su6f<7e;TLEfF[+"&4`<]H[@9B_].]eZWiA=TX(1qH,`N(gqLF5T73X5is=GAku,N1/tXJ@@@?00h#1+Npg[c:BO-(ebRD
%-&pc`63cDFfqkN=g=8BVS>`p<H@LIjKopT`n6#,lWmoOE,mE`_@8<@CQplg!89*greu$66jBB)TI\D5dXKfjGCdpN=#(JMc7sI6i
%X^3Wgm-'?ZU'`/9/JjkP1tTXqe/Sijd+kG'BK>aZ.SEkNO:&WQJ73$_>a/G].dA9G&.pOiWQHAqgbiA3c/CbddIPER?E,OUk".2?
%lpL,\^!dl7pj8H]>-TEm8u#0aBW^4:9\s\U*em56nQVh\I#7N2C<c"V`;EY\lbs?(>56ZV`dJ=[ntaPn5U9"[LdZrSIAkJpd]CNT
%F)tGLn`o1F0:fKuR5EuprSqfa`GM;M(73`\rO3#<AHr&As8.l7aP"DA1s6HUic*NV<ltD=aiH?Mfa%tg/SMC`NsET<gJ2F!?CGLW
%)rIVdQ#PjF)$S1(8@CY0C+8bT%$m#fDbgn%DF]]7buoskp(@,C-!D:][8_>pfoWP3FsG[KoMDt[>sLNEG!^!8ido$:Ahfc+)6Pp(
%GUe,.S2!;MlU_A4=tTcF*bRp(h[-F0MgL<QpH4JF^hOc]=E8#*_7dM7a;VS(FLmfo*E^Yb<b;eI4PB$5LPo6oG-VL#a@b>b2F8*S
%A_S5'&R+H]Tsa]@gBNZp*95;PJZIkdG2#t!-e!6o?n\plgIn<\a4iNAdAu/A)eGAjD&\ngP]o1lJ9_>aHu/B5:+i":TcU!@ghkVj
%"hnm,D2,@k[F=078Lh=]2VNPkD'Mb"MRqJ!W#idOfOj"`L7_GuXA>T\-L^Yf[J5"D#5OD;oZoS'U2%PoZ>jS\bBAX@OeD%NS'g4?
%mMbSJjgNi"XJSmtZH<6a](9fl8A@gTD^B2hic/4Y#7d`%FORhAPsEu?#!)X&gR[H1P`#UD+5;1]D$(%Iobc7#JeGI(G2!3`O\P/W
%VT2PV(?8/'D*H[^Oo>Jbb&5rV4Oq>egAlgtQ-K.^1+K^[ctMps*l;jjoeqTND615X=Gr5O.!kF8qg^BG:aC72CXPR)_TR]'^s,=U
%Y"Ya?EbYSo%c%9.<\GIDml:nJn\F?F3pK.&QYN>d0'M*8d^U9OEsp&,cj;gKp[YIF)=M&(q8!]o&O/[tr"Yq!CK5dB8H\D2Rrrjj
%!LH0"ZCJ:KEEC+Z0A[TG^DkH_M!Z-+Mud_.k&K3:V"1DtqZs0)$ZOg_epj9uHhjTARNri/F@p;(cYG99SKR?%.SiAO^9rO;'&pUS
%R_=)F4a[<8IKe>.>cMagPAs0Yenn/`Bg[WRG'.O#L%SqP&+*][<CV"f#G>(.OMTaho$5l+HrkB.Q6LdG/Yp+hJ<<M1WO7(u<tX4d
%%!@*/BVG:8-ugK0VqWb6%YHClW<H7goRkZI]st,lnq1ADljp-l7.s@`4%4um%m,m8kJ_N6[I'gAl6@e/"=ttoG@pO$(COoB[`):9
%>9L\$h+Om+a&K)+:!Rmb;rRD.)-s)O?L3%+M%XD`duVa;VFj8k3pi5I,ksd\02n7$I]kdG6LtG9Wic:#_>'t-6UQl&%(PI2aV&G@
%EbeuOO8E]UAgS[!Josne`uTa^FXOOS0-)Lu4X,R_mk+f(<b9,fZU$`q/u#2^%3_7D<p[,:4H:=04^a:e?J<Tb!*e!\6QX3fGFDeB
%(K?&bH&ur&64bBAEAp$U'F);c>+6=h,uW!W9eJ'YmW?HfjWu\uOg!NZ1n"t9nk&FukGN[Y#f*.UMu2/ajN<]p&%4Yj)Ia1YZ3;)/
%H8:Zq"Ws_u+rHB9B9nC%B_16Z7ZLU[qX1HWG14YZMl5rS)k`7,+AEB!l:g$e6]2`kUdJ`X(3r0RM0cL1;^<a+r_,@YP70!Ag;iGl
%;JDtud$hUl*5O"h9o5+/3bTG=L6BZk)p,,(br>7S19m[`\eU5`+%'94n@',s_32+mF9]>"Y%geUn!OaIAY7O]k]09](E`nJ(EkL=
%;OSa9^a;Ym&bnjc`U4p])8k"SQig$):lGI&X!=!S(hLRH#W$-I7&"1(`U)Pf1G$4BPY_^k!,rGt1*Qa=4Z-:H0luojQepNVj2bX&
%g7rWq/cuTW0G2A^j.^`LGfG$q6*R:UI>`d#j_MiE$8M$8$(]cO0P&I1o1MN7k.73@-u=nk)EGXVEBob_Dj?Z,7<0^`K'l4aU%\?5
%g`0.8=J:0<fSdc\%<Yp?HN:Oj5JFJlGX/Q"RL'1T]MQI5pe9C9^CeSd+^'5d!gsbTRRZO$8Pot]XH4K`!@2-=E+hSu(B[E*`c[qH
%Q,)p&c+:`*J\)cLH'H;M@[g%X`2l+<N?B(E82IP!)+tZ1+70Ld8M"_,0HUoOLDMHF4MLq#QsGUf+Ead0k=hQN&&ZOn/$EY`n`jYX
%0291#HTgC(fSM3P4EQ?Sm'\:/XU_E;0%F`^DLcK3;H,8la.olZd%n/bHEeP-mUC^;kmojRkNa[^1Te-&c`Y]lR5Hp-Bh!n`6%spR
%i#qP/7$J85NpJDneuO8DHk*sT7C^7GAYMR/Fa\P7K7a9/*P3_KES?6n=I<piLD600F_PhdaW0bLZdrqRcH1+:3Z7:Bk:[r&R#2b-
%2:75a4N#QD<tjhdi"mq;LHC1_,SR2gjA=K`mup=AXA8c!,H$k\8M7RVR,tmoFfPn=V%Hjn\nsB(<+k22^@\)Q)i7RBCZ.,/2a@he
%erT,63.6_:lQ$gg6'h\S]W`A`q__+s&Bo*$Cdk.J\CP:eb)Mn-BQ6Q^$pkgb]UB<cpMs*PDPSAVncA***l'&)4+Q@Mh@g\3G[C[k
%@0/B'HUDH[rX)[me-r3F8HUa@[D?]&aSOVs`3Cl;[gp5<,^4sjFb'aonM/q%mEY?U'#D/P$A5L6LHdpOfn3`E$qhcpc50B)\GpMI
%lXiFB,jF_ap4W]g\2oJ1LQ+`-\cC&1<n/&og!d858SD6mY9tbti$4R`kcLf&dBO#:S`\4-_4tgHo>ZnbfUA6F/AVl,L+L0`'-PZK
%.N8u@O0u''QK!&X>-q>065oQ$S)9)khP,-eE1Ja6eu5QM#t==.Yp2d@7c9P\60+^N:gasS5U;TeT5@\^AfX62&n-eA5Q`7RfL)mh
%BHYEf7Bkm:K#12Z'K9M:+F'GUf)@O74CKQ]OS&;k]U7[/!=pl?j^=N:$]i*D/jL`tBm^T@7I6n7oGA!-CW%#^QQ9^DFLeT0<p]nr
%`;u/<jW)Sd6fh#39VI/P?:D/-X/9"E6<JdmCt@1CVX[E"`SqD<#n_bk2,3;ilUbS5C,c7JFVZ.L;o*.U;Y_\G)8K*+$P8"K'ZFIP
%Q.n!,:tD2;Xrs@\A3eP8[YSLJL^FH$:m%Ir23O8B)>IoWfS[CaT0nKo>hXPPgWYM>U%Yconl8,TeV1Eb7kOoE&i@LL/-'uTj"i]e
%grL/*g*"&&!="r?PA7<Q8EM7a%AH'<^`B-RQIQEu[)r*-3D+1Crq8H9!@%ed+-]"?@A@GuRn833W\ZXAH*<=4PRq'r9*Rb3B-kh[
%IY@oiCE5JS$6-V@_?*s,]+,p%OpL[/!McYeNLODmJ@hoK8m[1Rl)=_L_EnYWB[Vj</@lc@b*AWd9<^49=ruu2<@J%(ZuBa^Kas!N
%?t/X<;"R9h3Z]0"P+k/k1"hanmmWXN*Os5o!*Fg1j?t4M29N0"EncDg'#oV2<Tbic<u\D!Qf^[t('6g><&X2>9geQ3(^[>F.bU.r
%6(5@qJF<mc&W2#p%s4*]Peq("k"rVIb3$CtHZ^<@jT.VHV[2"J[+2$O3bm:Z#E*>@;TmG>>".qebq31scu"==e^>G\Q/bV<<\"qo
%m+GXdW0L`:1<rBS<%9#6-W*0Ho[$`.W0eN&A&.:qjjhJng*e)#1NO'oj5kho\4V<HOjnhtaPipqfR'(6d?[cAVh(+B<"p(/%)h<d
%70*i3gI;>,_.o?LMc;uReH`AA1da':4BsRA<84-?#=6$A\OY8t#T2lRFn34U+J=Xn`AK\C06^VLO<">sMZGAf=NDh.Fgu:Hq?H<D
%d$QDc^OjkRgJN,1X'$=FQE:G#*Sn4i(9*$Wr70::mJsTN)07%1HKq-?LqqDC^B09AeW"6iY)^EK":h\Z)A:D'j+7_ffQSg0mPit[
%Zk.3Z5thaaF`=I.-aEH7ZB3R(p8"T?K;n^E3iO_IR(TM;6u%!PX"#)U!!O<Dng"Ai&iC%N[\F^@#sdErD/dC.7JcG[>)9R?3.][`
%Sm<<Z0M4,.2Bb]X=^s$/qG"#H5l#9l@4(ZGZEnMj,fSRb[Ye^']SQ]m+c\p<Z&:ZB1^4:%1Hj(d0aF`ja:Q@,UT'F7"jiQ?74@mc
%!8pEUH6SHs9[*T`3n93>c!'[aX"HuBUIF^53plGWoNC*^VmI$:s2BrB<S4EoG%qII]l.7nT6kR.NJEa$r"2aK[f#73<@=d\\>Yci
%/h]3:W:HE'-rtD+\0NCpMMO!rQ&so:Y,6CegKR=sYaZ9!e/<YqaT:#(R-/($KiQX0QN#IDS4PfF43H+')D-T)YDuud;O6j($ZGf]
%%9?mf.)@jJ'iA<YQ7#AF<"-![&UGFLC1T"nK=&liA,@#p]kJ\4!tM9]W(hrgEMq*D.,Dbl&<[!),EsuIjtpP]p,IZ3\a>($k/G#%
%fVg"BKUZ!&&R,B"!I!ohMX7Ajpe=)>jZ/<6/<9lOVtus'[!?pM"$AP';Q@r=$@VubRh.gk,IEGV;7P^U5)FV0i;-H\Dt2gN7U4q@
%F^;qjm(5-s/,B3LgsrdO%E-V?+TEUO5VKb%1ZS$#Qp;"4KbiC6(R(;`cmE=fIf90?8X^15D/$8k\+5Cjc`[1h7O(&R.OOCP?BQ8L
%ggErLUHn@[4=]`ib+/W4<K_:,;1GadX9P;/3X@_9(C*2^7G1sVVO4ktrd<b_JnA3ida",&7*6.ul=^^;7LnelZma^I@`DZsEN&C7
%':6n[Z''J8H9,7_M(XB2i94ZNjL$rq9C*sG1`OIs'^]se5RO9K!fQ-[F6I%"mSl0SW"8A23pa);%oZ$sXiQS@3ln-6R1(6Rk!D"<
%89@uRdjQu)%T(A"BqO]G,d^OHDlk-LA3>QX15MP!egZ>i;WHKdkB[OC;%^119gY"2Q+.s8!-+8NdnR-Y9.b%&T.=q-P)DVIA72*o
%Bi*f/CX&"%gEZknk!#+rAYM@\*6++`7!-dU&NQ\He`2ra#UnFoilc'hAV]TV,fuR&c&s)Ki_EWsr,A3=7*+0+]UtV8'j3:W##VWN
%[DP)FOq<e,W8*UKgO5t[;EV,&OUrt"5DLuc+Go)ON4k0:)b``m,l<_q]hIS951ei:nZ21n".JeVhoeMe?mr+>Ys-hZ=1&AJLW^bo
%;I>2YZYO"n$*tUp0@G5MJ=,dAGJM<?.Cr-(ic@8G,l*H[p`K_^'&rFb4+T6<=S!\2_6Qk*q-4u)3R[-VP"uREjq*$ECh$'Ob"Q,s
%Wl*W!)(KOU,>.lVOq=-[-#&PlWl/%#5%\M7<L'&KjE!buCiRGH:>$9.=d=B&)+<S<d;2C+T!\X=kB_4V=e)@(<H&0'2Ot3#OVsuC
%UbK7h6rTJ_>l'Q^?gPM;Sir,7.k1uWmEhNp&?:U>ZG)KF#f0UO:$ERT0]KGAjBaksWQ!sFG9K6MLNXRt:qbrn636(@f*Ibfd@\>\
%XE1"`qc[<.:6SWl;%3K2QtUGeI<Bo6p%-r8Tg-Ysn5$`q:pB!*7%//@_A6WDeMOVb3kd[?9L'kkV*dJ:)[M1%"cCV8(1tr&l]E3C
%:c>JuW2*u%$))qhW4=lr`!iBSc-&r*BFai^_]=ANT,T>_`XcZHkm:=#`Xnu$(apTen;A[#:7?/8#[-qk'2$ptb)_9mm,pPk=BM4>
%NT_@`TngLS#IFX'-inEpe>Z/-0U-TtM0LeYW2QqgK$iT_bG#1Z1k!l<FlIQ\LbZ;ZFjoJro)c9M)1@m>j'&=c$5B*O/.>DhSm!]h
%+cNE5('$&>94O9S"'Yu'phRAWVD.c>O_kg]5.>dSTW(BQ=Yu_'bB[kF=:K8*.C(.Y;h,U?55;NYjs^*<Q1)90%2K-K4!&0k3t>F0
%PSU7*F,0#tc2n[soR!"gP-*P5s/bq&$-A*;53+eX8MeS)L+Bd8X(9PJ5Yi3./eUBQ6Q3)3;bT;kYpsEd2KX$*;%q5l?/tGWC,rdh
%_T81kb'c]JE<.P7SAGAc!F2O"n[lcpKi`s<n"fKq5@9M#_B'f^/5ZKu0[%^ILXOiE][Oc:*,`!ZpRCj/'Z7bI5HI!hlTYg\e!o@7
%oa"g9C5t4`*tJ7qiO%@!^u_'bDKpBj5COMGk@]!7rO:a[Is?3cm[o7fj*t@iSVF'*a4#"tFT;+V#`Oq_jlObQQfi"r!9A70?2~>
%AI9_PrivateDataEnd
